{"version":3,"sources":["redux/product/productSelectors.js","redux/product/productOperations.js","services/api.js","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ConfirmationWindow.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/confirmationWindow.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/AddNewIngredient.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/addNewIngredient.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/IngredientSelect.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ingredientSelect.module.css","components/AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemEdit.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","clearFile","sendProductError","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","ConfirmationWindow","massage","errorMassage","useSelector","productSelectors","className","style","confirmation","data-confirm","confirmation__form","confirmation__formText","to","confirmation__formBtnLink","type","confirmation__formBtn","props","name","module","exports","AddNewIngredient","useDispatch","useState","isShow","setIsShow","setMassage","newIngredientRu","setCreateNewIngredientRu","newIngredientUkr","setCreateNewIngredientUkr","newIngredientEn","setCreateNewIngredientEn","editForm__newIngredient","editCard__title","editCard__titleName","editCard__titleLang","value","onChange","ev","target","editForm__inputLang","placeholder","maxLength","onClick","length","ru","en","ukr","productOperations","editForm__addNewIngredientBtn","IngredientSelect","productForEdit","local","lang","ingredientsList","ingredientsSelectList","map","el","idx","label","setNewIngredient","setIngredients","useEffect","deleteIngredient","delElemIndex","findIndex","_id","currentTarget","dataset","newIngredientsList","splice","discriptionTitle","editForm__ingredients","key","editForm__ingredient","editForm__ingredientName","data-id","editForm__ingredientBtnDel","width","height","viewBox","fill","editForm__ingredientBtnDelImage","d","editForm__ingredientsSelect","options","editForm__ingredientsList","some","editForm__addIngredientBtn","AdminUpdateListItemEdit","location","useLocation","JSON","parse","sessionStorage","getItem","isLoading","images","nameRu","setNameRu","nameEn","setNameEn","nameUkr","setNameUkr","subcategory","setSubcategory","price","priceNoPizza","setPriceNoPizza","setPrice","M","pricePizzaM","setPricePizzaM","L","pricePizzaL","setPricePizzaL","XL","pricePizzaXL","setPricePizzaXL","description","setDescription","categories","imagesInit","collector","editedItem","window","addEventListener","setItem","stringify","container","Spinner","editCard","src","alt","closeUpImages","editCard__image","onSubmit","preventDefault","isValidName","isValidPrice","toString","isValidDescription","editForm","editCard__photoLabel","accept","files","history","pushState","editForm__photo","editForm__photoBtn","maxlength","editForm__price","editForm__priceTitle","editForm__priceInput","editForm__inputSinglePrice","editForm__inputDescription","disabled","form","editForm__btnSubmit","removeItem","confirm"],"mappings":"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","file":"static/js/7.32ec99b4.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) => {\r\n      dispatch(productActions.sendProductSuccess(data.product));\r\n      dispatch(productActions.clearFile());\r\n    })\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport productSelectors from \"../../../redux/product/productSelectors\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport style from \"./confirmationWindow.module.css\";\r\n\r\nconst ConfirmationWindow = ({ massage }) => {\r\n  const errorMassage = useSelector(productSelectors.getError);\r\n  if (errorMassage) {\r\n    massage = errorMassage;\r\n  }\r\n  return (\r\n    <div className={style.confirmation} data-confirm=\"continue\">\r\n      <div className={style.confirmation__form}>\r\n        <p className={style.confirmation__formText}>{massage}</p>\r\n        <Link\r\n          to=\"/admin/update-product\"\r\n          className={style.confirmation__formBtnLink}\r\n        >\r\n          <button type=\"button\" className={style.confirmation__formBtn}>\r\n            <FormattedMessage id=\"update.return\" />\r\n          </button>\r\n        </Link>\r\n        {massage.props.id === \"deleted product\" || (\r\n          <button\r\n            type=\"button\"\r\n            className={style.confirmation__formBtn}\r\n            name=\"continue\"\r\n          >\r\n            <FormattedMessage id=\"continue editing\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationWindow;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmation\":\"confirmationWindow_confirmation__pKnzY\",\"confirmation__form\":\"confirmationWindow_confirmation__form__pR0yr\",\"confirmation__formText\":\"confirmationWindow_confirmation__formText__1Rc3f\",\"confirmation__formBtnLink\":\"confirmationWindow_confirmation__formBtnLink__3We4i\",\"confirmation__formBtn\":\"confirmationWindow_confirmation__formBtn__1H50C\"};","import React, { useState } from \"react\";\r\nimport style from \"./addNewIngredient.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport productOperations from \"../../../redux/product/productOperations\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\n\r\nconst AddNewIngredient = () => {\r\n  const dispatch = useDispatch();\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [massage, setMassage] = useState(\"\");\r\n  const [newIngredientRu, setCreateNewIngredientRu] = useState(\"\");\r\n  const [newIngredientUkr, setCreateNewIngredientUkr] = useState(\"\");\r\n  const [newIngredientEn, setCreateNewIngredientEn] = useState(\"\");\r\n  const createIngredient = () => {\r\n    if (\r\n      newIngredientEn.length >= 3 &&\r\n      newIngredientRu.length >= 3 &&\r\n      newIngredientUkr.length >= 3\r\n    ) {\r\n      const newIngredient = {\r\n        name: {\r\n          ru: newIngredientRu,\r\n          en: newIngredientEn,\r\n          ukr: newIngredientUkr,\r\n        },\r\n      };\r\n      dispatch(productOperations.createNewIngredient(newIngredient));\r\n      setMassage(<FormattedMessage id=\"update.ingredientAdded\" />);\r\n    } else {\r\n      setMassage(<FormattedMessage id=\"update.errorValidationName\" />);\r\n    }\r\n    setIsShow(true);\r\n  };\r\n  return (\r\n    <>\r\n      <label className={style.editForm__newIngredient}>\r\n        <h4 className={style.editCard__title}>\r\n          <FormattedMessage id=\"update.createNewIngredient\" />\r\n        </h4>\r\n        <div className={style.editCard__titleName}>\r\n          <p className={style.editCard__titleLang}>ru</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientRu}\r\n            onChange={(ev) => setCreateNewIngredientRu(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n            placeholder=\"бекон\"\r\n            maxLength=\"30\"\r\n          />\r\n          <p className={style.editCard__titleLang}>en</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientEn}\r\n            onChange={(ev) => setCreateNewIngredientEn(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n            placeholder=\"bacon\"\r\n            maxLength=\"30\"\r\n          />\r\n          <p className={style.editCard__titleLang}>ukr</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientUkr}\r\n            onChange={(ev) => setCreateNewIngredientUkr(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n            placeholder=\"бекон\"\r\n            maxLength=\"30\"\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={createIngredient}\r\n          className={style.editForm__addNewIngredientBtn}\r\n        >\r\n          <FormattedMessage id=\"update.addNewIngredient\" />\r\n        </button>\r\n      </label>\r\n      <div\r\n        onClick={(ev) => {\r\n          setIsShow(false);\r\n          ev.target.name =\r\n            \"continue\" && dispatch(productOperations.getIngredients());\r\n        }}\r\n      >\r\n        {isShow && massage && <ConfirmationWindow massage={massage} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewIngredient;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editForm__newIngredient\":\"addNewIngredient_editForm__newIngredient__3LTfv\",\"editCard__title\":\"addNewIngredient_editCard__title__2k1zu\",\"editForm__inputNewIngredient\":\"addNewIngredient_editForm__inputNewIngredient__1ZifC\",\"editForm__inputLang\":\"addNewIngredient_editForm__inputLang__39CUR\",\"editForm__addNewIngredientBtn\":\"addNewIngredient_editForm__addNewIngredientBtn__lrMth\",\"editCard__titleName\":\"addNewIngredient_editCard__titleName__1MXsJ\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport productSelectors from \"../../../redux/product/productSelectors\";\r\nimport productActions from \"../../../redux/product/productActions.js\";\r\nimport style from \"./ingredientSelect.module.css\";\r\n\r\nconst IngredientSelect = ({ productForEdit = {} }) => {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const ingredientsList = useSelector(productSelectors.getIngredients);\r\n  const ingredientsSelectList = ingredientsList.map((el, idx) => ({\r\n    label: el.name[local],\r\n    value: idx,\r\n  }));\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState(\r\n    productForEdit.ingredients || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch((dispatch) => dispatch(productActions.addIngredient(ingredients)));\r\n  }, [ingredients]); // eslint-disable-line\r\n  useEffect(() => {\r\n    setNewIngredient(ingredientsSelectList[0]);\r\n  }, [ingredientsList]); // eslint-disable-line\r\n\r\n  const addIngredient = () => {\r\n    ingredients.some(\r\n      (el) => ingredientsList[newIngredient.value]._id === el._id\r\n    ) ||\r\n      setIngredients((ingredients) => [\r\n        ...ingredients,\r\n        ingredientsList[newIngredient.value],\r\n      ]);\r\n  };\r\n  const deleteIngredient = (ev) => {\r\n    const delElemIndex = ingredients.findIndex(\r\n      (el) => el._id === ev.currentTarget.dataset.id\r\n    );\r\n    const newIngredientsList = [...ingredients];\r\n    newIngredientsList.splice(delElemIndex, 1);\r\n    setIngredients(newIngredientsList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={style.editCard__title}>\r\n        <FormattedMessage id=\"update.composition\" />\r\n      </h4>\r\n      <span className={style.discriptionTitle}>\r\n        <FormattedMessage id=\"update.compositionDiscription\" />\r\n      </span>\r\n      <ul className={style.editForm__ingredients}>\r\n        {ingredients.map((el, idx) => (\r\n          <li key={el._id} className={style.editForm__ingredient}>\r\n            <span className={style.editForm__ingredientName}>\r\n              {el.name[local]}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={deleteIngredient}\r\n              data-id={el._id}\r\n              className={style.editForm__ingredientBtnDel}\r\n            >\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 12 12\"\r\n                fill=\"none\"\r\n                className={style.editForm__ingredientBtnDelImage}\r\n              >\r\n                <path\r\n                  d=\"M11.25 1.8075L10.1925 0.75L6 4.9425L1.8075 0.75L0.75 1.8075L4.9425 6L0.75 10.1925L1.8075 11.25L6 7.0575L10.1925 11.25L11.25 10.1925L7.0575 6L11.25 1.8075Z\"\r\n                  fill=\"#ffff\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <label className={style.editForm__ingredientsSelect}>\r\n        <Select\r\n          options={ingredientsSelectList}\r\n          value={newIngredient}\r\n          onChange={(ev) => setNewIngredient(ev)}\r\n          className={style.editForm__ingredientsList}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={addIngredient}\r\n          className={style.editForm__addIngredientBtn}\r\n        >\r\n          <FormattedMessage id=\"update.addToComposition\" />\r\n        </button>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientSelect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../../stylesheet/vars.css'\",\"lightColor\":\"#FFF\",\"accentColor\":\"#FF6C00\",\"primaryColor\":\"#272727\",\"primaryTextFontSize\":\"0.875 rem\",\"editCard__title\":\"ingredientSelect_editCard__title__340t2\",\"discriptionTitle\":\"ingredientSelect_discriptionTitle__3igzK\",\"editForm__ingredientsSelect\":\"ingredientSelect_editForm__ingredientsSelect__1_j7x\",\"editForm__ingredients\":\"ingredientSelect_editForm__ingredients__5jnV7\",\"editForm__ingredient\":\"ingredientSelect_editForm__ingredient__1094b\",\"editForm__ingredientName\":\"ingredientSelect_editForm__ingredientName__a3kOJ\",\"editForm__ingredientsList\":\"ingredientSelect_editForm__ingredientsList__2wu2V\",\"editForm__addIngredientBtn\":\"ingredientSelect_editForm__addIngredientBtn__2jLde\",\"editForm__ingredientBtnDel\":\"ingredientSelect_editForm__ingredientBtnDel__ckeY9\",\"editForm__ingredientBtnDelImage\":\"ingredientSelect_editForm__ingredientBtnDelImage__1X9RN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"adminUpdateListItemEdit_container__3HLuE\",\"editCard\":\"adminUpdateListItemEdit_editCard__21bL0\",\"editCard__image\":\"adminUpdateListItemEdit_editCard__image__3bGof\",\"editForm\":\"adminUpdateListItemEdit_editForm__b5-qw\",\"editCard__title\":\"adminUpdateListItemEdit_editCard__title__3FVGH\",\"editCard__titleName\":\"adminUpdateListItemEdit_editCard__titleName__1ZB1V\",\"editCard__titleLang\":\"adminUpdateListItemEdit_editCard__titleLang__3A86I\",\"editForm__inputLang\":\"adminUpdateListItemEdit_editForm__inputLang__3aBBj\",\"editCard__photoLabel\":\"adminUpdateListItemEdit_editCard__photoLabel__3AqSD\",\"editForm__photo\":\"adminUpdateListItemEdit_editForm__photo__4go7p\",\"editForm__photoBtn\":\"adminUpdateListItemEdit_editForm__photoBtn__1ruwQ\",\"editForm__inputCategory\":\"adminUpdateListItemEdit_editForm__inputCategory__2OUAK\",\"editForm__price\":\"adminUpdateListItemEdit_editForm__price__3l36G\",\"editForm__priceInput\":\"adminUpdateListItemEdit_editForm__priceInput__2BURD\",\"editForm__inputSinglePrice\":\"adminUpdateListItemEdit_editForm__inputSinglePrice__DZQgv\",\"editForm__priceTitle\":\"adminUpdateListItemEdit_editForm__priceTitle__7VoSo\",\"editForm__inputDescription\":\"adminUpdateListItemEdit_editForm__inputDescription__3l4iF\",\"editForm__btnSubmit\":\"adminUpdateListItemEdit_editForm__btnSubmit__1COXz\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ConfirmationWindow from \"./AdminUpdateListItemElems/ConfirmationWindow\";\r\nimport AddNewIngredient from \"./AdminUpdateListItemElems/AddNewIngredient\";\r\nimport IngredientSelect from \"./AdminUpdateListItemElems/IngredientSelect\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\nimport Spinner from \"../Spinner\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\nimport productActions from \"../../redux/product/productActions.js\";\r\n// import languages from \"../../languages\";\r\n\r\nconst AdminUpdateListItemEdit = () => {\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  let productForEdit = null;\r\n  if (location.state) {\r\n    productForEdit = location.state.product;\r\n    // console.log(productForEdit);\r\n  } else {\r\n    productForEdit = JSON.parse(sessionStorage.getItem(\"editedItem\"));\r\n    // console.log(productForEdit);\r\n  }\r\n\r\n  const ingredients = useSelector(productSelectors.addIngredient);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n  const images = useSelector(productSelectors.fileLink);\r\n  const [massage, setMassage] = useState(\"\");\r\n\r\n  const [nameRu, setNameRu] = useState(productForEdit.name.ru);\r\n  const [nameEn, setNameEn] = useState(productForEdit.name.en);\r\n  const [nameUkr, setNameUkr] = useState(productForEdit.name.ukr);\r\n  const [subcategory, setSubcategory] = useState({\r\n    value: productForEdit.subcategory,\r\n    label: productForEdit.subcategory,\r\n  });\r\n  const [priceNoPizza, setPriceNoPizza] = useState(productForEdit.price.price);\r\n  const [price, setPrice] = useState(\"\");\r\n\r\n  const [pricePizzaM, setPricePizzaM] = useState(productForEdit.price.M);\r\n  const [pricePizzaL, setPricePizzaL] = useState(productForEdit.price.L);\r\n  const [pricePizzaXL, setPricePizzaXL] = useState(productForEdit.price.XL);\r\n  const [description, setDescription] = useState(productForEdit.description);\r\n\r\n  const subcategoryList = [\r\n    { label: \"classic\", value: \"classic\" },\r\n    { label: \"branded\", value: \"branded\" },\r\n    { label: \"premium\", value: \"premium\" },\r\n  ];\r\n\r\n  const postImage = (file) => {\r\n    dispatch(productOperations.sendFile(file));\r\n  };\r\n  const updateProduct = (id, editedItem) =>\r\n    dispatch(productOperations.updateProduct(id, editedItem));\r\n\r\n  const deleteProduct = () =>\r\n    dispatch(productOperations.deleteProduct(productForEdit._id));\r\n\r\n  useEffect(() => {\r\n    if (productForEdit.categories === \"pizza\") {\r\n      setPrice({ M: pricePizzaM, L: pricePizzaL, XL: pricePizzaXL });\r\n    } else {\r\n      setPrice({ price: priceNoPizza });\r\n    }\r\n  }, [pricePizzaM, pricePizzaL, pricePizzaXL, priceNoPizza]); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    dispatch(productOperations.getIngredients());\r\n  }, []); // eslint-disable-line\r\n  useEffect(() => {\r\n    dispatch(dispatch(productActions.imagesInit(productForEdit.images)));\r\n  }, []); // eslint-disable-line\r\n\r\n  const collector = () => {\r\n    const name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    if (!price) {\r\n      if (productForEdit.categories === \"pizza\") {\r\n        setPrice({ M: \"\", L: \"\", XL: \"\" });\r\n      } else {\r\n        setPrice({ price: \"\" });\r\n      }\r\n    }\r\n    const editedItem = {\r\n      price,\r\n      name,\r\n      ingredients,\r\n      images,\r\n    };\r\n    editedItem.name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    editedItem.categories = productForEdit.categories;\r\n    editedItem.subcategory = subcategory.value;\r\n    if (productForEdit.categories !== \"pizza\") {\r\n      editedItem.description = description;\r\n    }\r\n    // console.log(editedItem);\r\n    return editedItem;\r\n  };\r\n\r\n  const handleImageFile = (ev) => {\r\n    ev.preventDefault();\r\n    ev.target.files[0] && postImage(ev.target.files[0]);\r\n    window.history.pushState({}, \"\", \"/\");\r\n  };\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n    const isValidName =\r\n      nameEn.length >= 3 && nameRu.length >= 3 && nameUkr.length >= 3;\r\n    const isValidPrice = (() => {\r\n      let isValid = false;\r\n      if (productForEdit.categories === \"pizza\") {\r\n        isValid =\r\n          pricePizzaL.toString().length >= 2 &&\r\n          pricePizzaM.toString().length >= 2 &&\r\n          pricePizzaXL.toString().length >= 2;\r\n      } else {\r\n        isValid = priceNoPizza.toString().length >= 2;\r\n      }\r\n      return isValid;\r\n    })();\r\n    const isValidDescription = description.length >= 1;\r\n\r\n    if (isValidName && isValidPrice && isValidDescription) {\r\n      const editedItem = collector();\r\n      updateProduct(productForEdit._id, editedItem);\r\n      setMassage(<FormattedMessage id=\"product updated\" />);\r\n    } else {\r\n      isValidDescription ||\r\n        setMassage(<FormattedMessage id=\"update.errorValidationDescription\" />);\r\n      isValidPrice ||\r\n        setMassage(<FormattedMessage id=\"update.errorValidationPrice\" />);\r\n      isValidName ||\r\n        setMassage(<FormattedMessage id=\"update.errorValidationName\" />);\r\n    }\r\n  };\r\n  const deleteItem = (ev) => {\r\n    ev.preventDefault();\r\n    deleteProduct();\r\n    sessionStorage.removeItem(\"editedItem\");\r\n    window.history.pushState({}, \"\", \"/\");\r\n    setMassage(<FormattedMessage id=\"deleted product\" />);\r\n  };\r\n  window.addEventListener(\"unload\", () => {\r\n    const editedItem = { _id: productForEdit._id, ...collector() };\r\n    sessionStorage.setItem(\"editedItem\", JSON.stringify(editedItem));\r\n  });\r\n  const handleConfirmWindow = (ev) => {\r\n    massage.props.id !== \"deleted product\" &&\r\n      ev.target.dataset.confirm === \"continue\" &&\r\n      setMassage(\"\");\r\n    ev.target.name === \"continue\" && setMassage(\"\");\r\n  };\r\n  return (\r\n    <div className={style.container}>\r\n      {isLoading && <Spinner />}\r\n      <>\r\n        <div className={style.editCard}>\r\n          <img\r\n            src={images}\r\n            alt={productForEdit.closeUpImages}\r\n            className={style.editCard__image}\r\n          />\r\n          <form id=\"editForm\" onSubmit={handleForm} className={style.editForm}>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"photo\" />\r\n            </h4>\r\n            <label className={style.editCard__photoLabel}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageFile}\r\n                className={style.editForm__photo}\r\n              />\r\n              <p className={style.editForm__photoBtn}>\r\n                <FormattedMessage id=\"upload\" />\r\n              </p>\r\n            </label>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.name\" />\r\n            </h4>\r\n            <div className={style.editCard__titleName}>\r\n              <p className={style.editCard__titleLang}>ru</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameRu}\r\n                onChange={(ev) => setNameRu(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n                maxlength=\"30\"\r\n              />\r\n              <p className={style.editCard__titleLang}>en</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameEn}\r\n                onChange={(ev) => setNameEn(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n                maxlength=\"30\"\r\n              />\r\n              <p className={style.editCard__titleLang}>ukr</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameUkr}\r\n                onChange={(ev) => setNameUkr(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n                maxlength=\"30\"\r\n              />\r\n            </div>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.category\" />\r\n            </h4>\r\n            <p>{productForEdit.categories}</p>\r\n            {productForEdit.categories === \"pizza\" && (\r\n              <>\r\n                <h4 className={style.editCard__title}>\r\n                  <FormattedMessage id=\"product.subcategory\" />\r\n                </h4>\r\n                <Select\r\n                  options={subcategoryList}\r\n                  value={subcategory}\r\n                  onChange={(ev) => setSubcategory(ev)}\r\n                />\r\n                <IngredientSelect productForEdit={productForEdit} />\r\n                <AddNewIngredient />\r\n              </>\r\n            )}\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.price\" />\r\n            </h4>\r\n            {productForEdit.categories === \"pizza\" ? (\r\n              <div className={style.editForm__price}>\r\n                <h4 className={style.editForm__priceTitle}>M</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaM}\r\n                  onChange={(ev) => setPricePizzaM(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                  maxlength=\"3\"\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>L</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaL}\r\n                  onChange={(ev) => setPricePizzaL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                  maxlength=\"3\"\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>XL</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaXL}\r\n                  onChange={(ev) => setPricePizzaXL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                  maxlength=\"3\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={priceNoPizza}\r\n                  onChange={(ev) => setPriceNoPizza(ev.target.value)}\r\n                  className={style.editForm__inputSinglePrice}\r\n                  // min=\"0\"\r\n                  // max=\"999\"\r\n                  maxlength=\"3\"\r\n                />\r\n                <p className={style.editCard__title}>\r\n                  <FormattedMessage id=\"volume weight\" />\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={description}\r\n                  onChange={(ev) => setDescription(ev.target.value)}\r\n                  className={style.editForm__inputDescription}\r\n                  maxlength=\"3\"\r\n                />\r\n              </>\r\n            )}\r\n          </form>\r\n          <button\r\n            disabled={isLoading}\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            className={style.editForm__btnSubmit}\r\n          >\r\n            <FormattedMessage id=\"update.saveChanges\" />\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            className={style.editForm__btnSubmit}\r\n            onClick={deleteItem}\r\n          >\r\n            <FormattedMessage id=\"delete product\" />\r\n          </button>\r\n        </div>\r\n        <div onClick={handleConfirmWindow}>\r\n          {!isLoading && massage && <ConfirmationWindow massage={massage} />}\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItemEdit;\r\n"],"sourceRoot":""}