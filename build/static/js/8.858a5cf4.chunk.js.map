{"version":3,"sources":["redux/product/productSelectors.js","services/api.js","redux/product/productOperations.js","redux/product/index.js","components/DrinkListItem/drinkListItem.module.css","components/DrinkList/drinkList.module.css","components/DrinkListItem/DrinkListItem.js","components/DrinkList/DrinkList.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","source","axios","CancelToken","baseURL","getAllProducts","get","getProductsByCategory","category","cancelToken","token","getProductById","id","getAllIngredients","a","createNewIngredients","post","postNewProduct","product","updateProductById","productId","newProduct","put","deleteProductById","delete","postImage","file","data","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","fetchProducts","dispatch","productActions","productsRequest","then","productsSuccess","catch","error","productsError","fetchProductsByCategory","byCategoryRequest","byCategorySuccess","byCategoryError","fetchProductById","byIdRequest","byIdSuccess","byIdError","sendFile","sendFileRequest","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","sendProductSuccess","sendProductError","getAllIngredientsRequest","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","updateProductRequest","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredientsSuccess","createNewIngredientsError","module","exports","DrinkListItem","props","name","description","price","images","local","useSelector","lang","useDispatch","successMessage","values","errorMessage","useState","isAddedProdToOrder","setIsAddedProdToOrder","message","setMessage","addProd","setTimeout","orderOperations","addProdToOrderList","className","styles","menuItem","Notification","confirm","forCard","menuItem_imageBlock","src","alt","menuItem_img","menuItem_content","menuItem_headline","menuItem_size","menuItem_wrapper","menuItem_price","currency","button","type","onClick","DrinkList","this","onFetchProductDrinks","err","console","log","cancel","containerList","title","menu","map","key","_id","Component","mapDispatchToProps","productOperations","connect","productSelectors"],"mappings":"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","file":"static/js/8.858a5cf4.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../stylesheet/vars.css\\\"\",\"accentColor\":\"#FF6C00\",\"primaryColor\":\"#272727\",\"secondaryBackgroundColor\":\"rgba(39, 39, 39, 0.2)\",\"lightColor\":\"#FFF\",\"primaryBackgroundColor\":\"rgba(39, 39, 39, 0.8)\",\"menuItem\":\"drinkListItem_menuItem__2SLFd\",\"menuItem_imageBlock\":\"drinkListItem_menuItem_imageBlock__36u3Z\",\"menuItem_img\":\"drinkListItem_menuItem_img__10UE0\",\"menuItem_content\":\"drinkListItem_menuItem_content__QgfFi\",\"menuItem_headline\":\"drinkListItem_menuItem_headline__18h0n\",\"menuItem_size\":\"drinkListItem_menuItem_size__LTygZ\",\"menuItem_wrapper\":\"drinkListItem_menuItem_wrapper__3BBI_\",\"currency\":\"drinkListItem_currency__1vYUG\",\"menuItem_price\":\"drinkListItem_menuItem_price__1NDE4\",\"button\":\"drinkListItem_button__27NUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../stylesheet/vars.css\\\"\",\"primaryColor\":\"#272727\",\"containerList\":\"drinkList_containerList__2ENKW\",\"menu\":\"drinkList_menu__2t04p\",\"title\":\"drinkList_title__H8OkR\"};","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Notification from \"../Notification\";\r\n\r\nimport { orderOperations } from \"../../redux/order\";\r\nimport styles from \"./drinkListItem.module.css\";\r\n\r\nconst DrinkListItem = (props) => {\r\n  const { name, description, price, images } = props;\r\n\r\n  const local = useSelector((state) => state.local.lang);\r\n\r\n  const dispatch = useDispatch();\r\n  const onAddProductToOrder = () =>\r\n    dispatch(orderOperations.addProdToOrderList(props));\r\n\r\n  const successMessage = (\r\n    <FormattedMessage\r\n      id=\"order.success\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const errorMessage = (\r\n    <FormattedMessage\r\n      id=\"order.error\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const [isAddedProdToOrder, setIsAddedProdToOrder] = useState(false);\r\n  const [message, setMessage] = useState(successMessage);\r\n\r\n  const addProd = async () => {\r\n    if (isAddedProdToOrder) {\r\n      setIsAddedProdToOrder(false);\r\n      setMessage(errorMessage);\r\n      return await setTimeout(() => setIsAddedProdToOrder(true), 10);\r\n    }\r\n    onAddProductToOrder(props);\r\n    setIsAddedProdToOrder(true);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.menuItem}>\r\n      {isAddedProdToOrder && <Notification message={message} confirm forCard />}\r\n      <div className={styles.menuItem_imageBlock}>\r\n        <img src={images} alt={name[local]} className={styles.menuItem_img} />\r\n      </div>\r\n      <div className={styles.menuItem_content}>\r\n        <h2 className={styles.menuItem_headline}>{name[local]}</h2>\r\n        <p className={styles.menuItem_size}>\r\n          <FormattedMessage id=\"volume\" /> {description}\r\n        </p>\r\n        <div className={styles.menuItem_wrapper}>\r\n          <p className={styles.menuItem_price}>\r\n            {`${price.price}.00`}\r\n            <span className={styles.currency}>\r\n              <FormattedMessage id=\"grn\" />\r\n            </span>\r\n          </p>\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => addProd()}\r\n          >\r\n            <FormattedMessage id=\"orders.chart\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DrinkListItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport axios from \"axios\";\r\n\r\nimport { productSelectors, productOperations } from \"../../redux/product\";\r\n\r\nimport DrinkListItem from \"../DrinkListItem/DrinkListItem\";\r\nimport styles from \"./drinkList.module.css\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nclass DrinkList extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      this.props.onFetchProductDrinks(\"drinks\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  async componentWillUnmount() {\r\n    try {\r\n      source.cancel(\"Operation canceled\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  render() {\r\n    const { products } = this.props;\r\n    return (\r\n      <div className={styles.containerList}>\r\n        <h2 className={styles.title}>\r\n          <FormattedMessage id=\"drinks\" />\r\n        </h2>\r\n        <ul className={styles.menu}>\r\n          {products.map((product) => (\r\n            <DrinkListItem key={product._id} {...product} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { products: productSelectors.getProducts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchProductDrinks: productOperations.fetchProductsByCategory,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkList);\r\n"],"sourceRoot":""}