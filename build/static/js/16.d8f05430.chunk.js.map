{"version":3,"sources":["redux/product/productOperations.js","redux/product/productSelectors.js","services/api.js","components/AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css","components/AdminUpdateListItemEdit/ConfirmationWindow.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemEdit.js"],"names":["fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","products","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdErrror","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","sendProductError","getIngredients","getAllIngradientsRequest","getAllIngredients","getAllIngradientsSuccess","ingredients","getAllIngradientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","res","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","saveExistProdImg","link","saveExistedImg","getLoading","state","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngradients","ingradients","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","ConfirmationWindow","confirmMassage","className","style","confirmation","confirmation__form","confirmation__formText","massage","to","confirmation__formBtnLink","type","confirmation__formBtn","action","AdminUpdateListItemEdit","useDispatch","location","useLocation","productForEdit","JSON","parse","sessionStorage","getItem","local","useSelector","lang","isLoading","productSelectors","useState","confirmEdit","setConfirmEdit","images","name","ru","nameRu","setNameRu","en","nameEn","setNameEn","ukr","nameUkr","setNameUkr","categories","setCategory","subcategory","setSubcategory","price","priceNoPizza","setPriceNoPizza","setPrice","M","pricePizzaM","setPricePizzaM","L","pricePizzaL","setPricePizzaL","XL","pricePizzaXL","setPricePizzaXL","setIngredients","newIngredient","setNewIngredient","ingredientsList","description","setDescription","useEffect","productOperations","collector","deleteIngredient","ev","preventDefault","delElemIndex","findIndex","el","_id","target","dataset","splice","window","addEventListener","editedItem","setItem","stringify","container","spinnerBack","Spinner","editCard","src","alt","closeUpImages","editCard__image","onSubmit","editForm","editCard__title","editCard__photoLabel","accept","onChange","files","editForm__photo","editForm__photoBtn","editCard__titleName","editCard__titleLang","value","editForm__inputLang","editForm__inputCategory","editForm__ingredients","map","idx","key","editForm__ingredient","editForm__ingredientName","onClick","data-id","editForm__ingredientBtnDel","width","height","viewBox","fill","editForm__ingredientBtnDelImage","d","editForm__ingredientsSelect","editForm__ingredientsList","some","editForm__addIngredientBtn","editForm__price","editForm__priceTitle","editForm__priceInput","editForm__inputSinglePrice","editForm__inputDescription","form","editForm__btnSubmit"],"mappings":"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","file":"static/js/16.d8f05430.chunk.js","sourcesContent":["import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdErrror(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n  // console.log(file);\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngradientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngradientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngradientsError(error)));\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then((res) => dispatch(productActions.updateProductSuccess(res)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nconst saveExistProdImg = (link) => (dispatch) => {\r\n  dispatch(productActions.saveExistedImg(link));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n\r\n  saveExistProdImg,\r\n};\r\n","const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngradients = (state) => state.products.ingradients;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngradients,\r\n  fileLink,\r\n};\r\n","\r\nimport axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = 'https://evening-caverns-34846.herokuapp.com';\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get('/products');\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append('file', file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get('/developers');\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get('/promo');\r\n\r\nconst sendUserFile = (file) => axios.post('/images', file);\r\n\r\nconst sendNewStock = (stock) => axios.post('/promo', stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"adminUpdateListItemEdit_container__3HLuE\",\"spinnerBack\":\"adminUpdateListItemEdit_spinnerBack__i8bG6\",\"editCard\":\"adminUpdateListItemEdit_editCard__21bL0\",\"editCard__image\":\"adminUpdateListItemEdit_editCard__image__3bGof\",\"editForm\":\"adminUpdateListItemEdit_editForm__b5-qw\",\"editCard__title\":\"adminUpdateListItemEdit_editCard__title__3FVGH\",\"editCard__titleName\":\"adminUpdateListItemEdit_editCard__titleName__1ZB1V\",\"editCard__titleLang\":\"adminUpdateListItemEdit_editCard__titleLang__3A86I\",\"editForm__inputLang\":\"adminUpdateListItemEdit_editForm__inputLang__3aBBj\",\"editCard__photoLabel\":\"adminUpdateListItemEdit_editCard__photoLabel__3AqSD\",\"editForm__photo\":\"adminUpdateListItemEdit_editForm__photo__4go7p\",\"editForm__photoBtn\":\"adminUpdateListItemEdit_editForm__photoBtn__1ruwQ\",\"editForm__inputCategory\":\"adminUpdateListItemEdit_editForm__inputCategory__2OUAK\",\"editForm__ingredientsSelect\":\"adminUpdateListItemEdit_editForm__ingredientsSelect__3EQkl\",\"editForm__ingredient\":\"adminUpdateListItemEdit_editForm__ingredient__158s2\",\"editForm__ingredientName\":\"adminUpdateListItemEdit_editForm__ingredientName__2-5zy\",\"editForm__ingredientsList\":\"adminUpdateListItemEdit_editForm__ingredientsList__1zUdX\",\"editForm__addIngredientBtn\":\"adminUpdateListItemEdit_editForm__addIngredientBtn__1uTV_\",\"editForm__ingredientBtnDel\":\"adminUpdateListItemEdit_editForm__ingredientBtnDel__3l5GB\",\"editForm__ingredientBtnDelImage\":\"adminUpdateListItemEdit_editForm__ingredientBtnDelImage__2hey5\",\"editForm__price\":\"adminUpdateListItemEdit_editForm__price__3l36G\",\"editForm__priceInput\":\"adminUpdateListItemEdit_editForm__priceInput__2BURD\",\"editForm__inputSinglePrice\":\"adminUpdateListItemEdit_editForm__inputSinglePrice__DZQgv\",\"editForm__priceTitle\":\"adminUpdateListItemEdit_editForm__priceTitle__7VoSo\",\"editForm__inputDescription\":\"adminUpdateListItemEdit_editForm__inputDescription__3l4iF\",\"editForm__btnSubmit\":\"adminUpdateListItemEdit_editForm__btnSubmit__1COXz\",\"confirmation\":\"adminUpdateListItemEdit_confirmation__1Kgwu adminUpdateListItemEdit_spinnerBack__i8bG6\",\"confirmation__form\":\"adminUpdateListItemEdit_confirmation__form__1Ci1y\",\"confirmation__formText\":\"adminUpdateListItemEdit_confirmation__formText__3uwty\",\"confirmation__formBtnLink\":\"adminUpdateListItemEdit_confirmation__formBtnLink__1RKal\",\"confirmation__formBtn\":\"adminUpdateListItemEdit_confirmation__formBtn__1R00J\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\nconst ConfirmationWindow = ({ confirmMassage }) => {\r\n  return (\r\n    <div className={style.confirmation}>\r\n      <div className={style.confirmation__form}>\r\n        <p className={style.confirmation__formText}>{confirmMassage.massage}</p>\r\n        <Link\r\n          to=\"/admin/update-product\"\r\n          className={style.confirmation__formBtnLink}\r\n        >\r\n          <button type=\"button\" className={style.confirmation__formBtn}>\r\n            <FormattedMessage id=\"return back\" />\r\n          </button>\r\n        </Link>\r\n        {confirmMassage.action === \"del\" || (\r\n          <button type=\"button\" className={style.confirmation__formBtn}>\r\n            <FormattedMessage id=\"continue editing\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationWindow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\nimport Spinner from \"../../components/Spinner\";\r\n// import Axios from \"axios\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\n\r\n// import languages from \"../../languages\";\r\n\r\nconst AdminUpdateListItemEdit = () => {\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  let productForEdit = null;\r\n  if (location.state) {\r\n    productForEdit = location.state.product;\r\n  } else {\r\n    productForEdit = JSON.parse(sessionStorage.getItem(\"editedItem\"));\r\n  }\r\n  const local = useSelector((state) => state.local.lang);\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n  const errorProd = useSelector(productSelectors.getError); // ошибка операций подключить к setConfirmEdit\r\n\r\n  const [confirmEdit, setConfirmEdit] = useState(false);\r\n  // const [images, setImage] = useState(productForEdit.images);\r\n  const images = useSelector(productSelectors.fileLink);\r\n  const [nameRu, setNameRu] = useState(productForEdit.name.ru);\r\n  const [nameEn, setNameEn] = useState(productForEdit.name.en);\r\n  const [nameUkr, setNameUkr] = useState(productForEdit.name.ukr);\r\n  const [categories, setCategory] = useState(productForEdit.categories);\r\n  const [subcategory, setSubcategory] = useState(productForEdit.subcategory);\r\n  const [priceNoPizza, setPriceNoPizza] = useState(productForEdit.price.price);\r\n  const [price, setPrice] = useState({});\r\n  const [pricePizzaM, setPricePizzaM] = useState(productForEdit.price.M);\r\n  const [pricePizzaL, setPricePizzaL] = useState(productForEdit.price.L);\r\n  const [pricePizzaXL, setPricePizzaXL] = useState(productForEdit.price.XL);\r\n  const [ingredients, setIngredients] = useState([\r\n    ...productForEdit.ingredients,\r\n  ]);\r\n  const [newIngredient, setNewIngredient] = useState(0);\r\n  // const [ingredientsList, setIngredientsList] = useState(null);\r\n  const ingredientsList = useSelector(productSelectors.getIngradients);\r\n  const [description, setDescription] = useState(productForEdit.description);\r\n\r\n  const postImage = (file) => dispatch(productOperations.sendFile(file));\r\n  const updateProduct = () =>\r\n    dispatch(productOperations.updateProduct(productForEdit._id, collector()));\r\n  const deleteProduct = () =>\r\n    dispatch(productOperations.deleteProduct(productForEdit._id));\r\n\r\n  useEffect(() => {\r\n    dispatch(productOperations.getIngredients());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(productOperations.saveExistProdImg(productForEdit.images));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (categories === \"pizza\") {\r\n      setPrice({ M: pricePizzaM, L: pricePizzaL, XL: pricePizzaXL });\r\n    } else {\r\n      setPrice({ price: priceNoPizza });\r\n    }\r\n  }, [pricePizzaM, pricePizzaL, pricePizzaXL, categories, priceNoPizza]);\r\n\r\n  const collector = () => {\r\n    const name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    const editedItem = {\r\n      ...productForEdit,\r\n      images,\r\n      price,\r\n      name,\r\n      categories,\r\n      subcategory,\r\n      ingredients,\r\n      description,\r\n    };\r\n    return editedItem;\r\n  };\r\n  const deleteIngredient = (ev) => {\r\n    ev.preventDefault();\r\n    const delElemIndex = ingredients.findIndex(\r\n      (el) => el._id === ev.target.dataset.id\r\n    );\r\n    ingredients.splice(delElemIndex, 1);\r\n    setIngredients([...ingredients]);\r\n  };\r\n\r\n  const handleImageFile = (ev) => {\r\n    ev.preventDefault();\r\n    postImage(ev.target.files[0]);\r\n    collector();\r\n    // if (errorProd) {\r\n    //   setConfirmEdit({\r\n    //     massage: <FormattedMessage id=\"error editing\" />,\r\n    //     action: \"editImage\",\r\n    //   });\r\n    // }\r\n  };\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n    // const editedItem = collector();\r\n    updateProduct();\r\n    setConfirmEdit({\r\n      massage: <FormattedMessage id=\"product updated\" />,\r\n      action: \"edit\",\r\n    });\r\n\r\n    // if(errorProd)\r\n    // setConfirmEdit({\r\n    //   massage: <FormattedMessage id=\"error editing\" />,\r\n    //   action: \"errorEdit\",\r\n    // });\r\n  };\r\n\r\n  const deleteItem = (ev) => {\r\n    ev.preventDefault();\r\n    deleteProduct();\r\n    setConfirmEdit({\r\n      massage: <FormattedMessage id=\"deleted product\" />,\r\n      action: \"del\",\r\n    });\r\n    // if(errorProd)\r\n    // setConfirmEdit({\r\n    //   massage: <FormattedMessage id=\"error editing\" />,\r\n    //   action: \"errorDel\",\r\n    // });\r\n  };\r\n\r\n  window.addEventListener(\"unload\", () => {\r\n    const editedItem = collector();\r\n    sessionStorage.setItem(\"editedItem\", JSON.stringify(editedItem));\r\n  });\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      {!isLoading || (\r\n        <div className={style.spinnerBack}>\r\n          <Spinner />\r\n        </div>\r\n      )}\r\n      <div className={style.editCard}>\r\n        <img\r\n          src={images}\r\n          alt={productForEdit.closeUpImages}\r\n          className={style.editCard__image}\r\n        />\r\n        <form id=\"editForm\" onSubmit={handleForm} className={style.editForm}>\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"photo\" />\r\n          </h4>\r\n          <label className={style.editCard__photoLabel}>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleImageFile}\r\n              className={style.editForm__photo}\r\n            />\r\n            <p className={style.editForm__photoBtn}>\r\n              <FormattedMessage id=\"upload\" />\r\n            </p>\r\n          </label>\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"product.name\" />\r\n          </h4>\r\n          <div className={style.editCard__titleName}>\r\n            <p className={style.editCard__titleLang}>ru</p>\r\n            <input\r\n              type=\"text\"\r\n              value={nameRu}\r\n              onChange={(ev) => setNameRu(ev.target.value)}\r\n              className={style.editForm__inputLang}\r\n            />\r\n            <p className={style.editCard__titleLang}>en</p>\r\n            <input\r\n              type=\"text\"\r\n              value={nameEn}\r\n              onChange={(ev) => setNameEn(ev.target.value)}\r\n              className={style.editForm__inputLang}\r\n            />\r\n            <p className={style.editCard__titleLang}>ukr</p>\r\n            <input\r\n              type=\"text\"\r\n              value={nameUkr}\r\n              onChange={(ev) => setNameUkr(ev.target.value)}\r\n              className={style.editForm__inputLang}\r\n            />\r\n          </div>\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"product.category\" />\r\n          </h4>\r\n          <input\r\n            type=\"text\"\r\n            value={categories}\r\n            onChange={(ev) => setCategory(ev.target.value)}\r\n            className={style.editForm__inputCategory}\r\n          />\r\n          {categories === \"pizza\" && (\r\n            <>\r\n              <h4 className={style.editCard__title}>\r\n                <FormattedMessage id=\"product.subcategory\" />\r\n              </h4>\r\n              <input\r\n                type=\"text\"\r\n                value={subcategory}\r\n                onChange={(ev) => setSubcategory(ev.target.value)}\r\n                className={style.editForm__inputCategory}\r\n              />\r\n              <h4 className={style.editCard__title}>\r\n                <FormattedMessage id=\"update.composition\" />\r\n              </h4>\r\n              <ul className={style.editForm__ingredients}>\r\n                {ingredients.map((el, idx) => (\r\n                  <li key={idx} className={style.editForm__ingredient}>\r\n                    <span className={style.editForm__ingredientName}>\r\n                      {el.name[local]}\r\n                    </span>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={deleteIngredient}\r\n                      data-id={el._id}\r\n                      className={style.editForm__ingredientBtnDel}\r\n                    >\r\n                      <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        className={style.editForm__ingredientBtnDelImage}\r\n                      >\r\n                        <path\r\n                          d=\"M11.25 1.8075L10.1925 0.75L6 4.9425L1.8075 0.75L0.75 1.8075L4.9425 6L0.75 10.1925L1.8075 11.25L6 7.0575L10.1925 11.25L11.25 10.1925L7.0575 6L11.25 1.8075Z\"\r\n                          fill=\"#272727\"\r\n                        ></path>\r\n                      </svg>\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <h4 className={style.editCard__title}>\r\n                <FormattedMessage id=\"update.addIngredient\" />\r\n              </h4>\r\n              <label className={style.editForm__ingredientsSelect}>\r\n                <select\r\n                  value={newIngredient}\r\n                  className={style.editForm__ingredientsList}\r\n                  onChange={(ev) => setNewIngredient(ev.target.value)}\r\n                >\r\n                  {ingredientsList &&\r\n                    ingredientsList.map((el, idx) => (\r\n                      <option key={el._id} value={idx}>\r\n                        {el.name[local]}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    ingredients.some(\r\n                      (el) => ingredientsList[newIngredient]._id === el._id\r\n                    ) ||\r\n                      setIngredients([\r\n                        ...ingredients,\r\n                        ingredientsList[newIngredient],\r\n                      ]);\r\n                  }}\r\n                  className={style.editForm__addIngredientBtn}\r\n                >\r\n                  <FormattedMessage id=\"update.addToComposition\" />\r\n                </button>\r\n              </label>\r\n            </>\r\n          )}\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"product.price\" />\r\n          </h4>\r\n          {categories === \"pizza\" ? (\r\n            <div className={style.editForm__price}>\r\n              <h4 className={style.editForm__priceTitle}>M</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={pricePizzaM}\r\n                onChange={(ev) => setPricePizzaM(ev.target.value)}\r\n                className={style.editForm__priceInput}\r\n              />\r\n              <h4 className={style.editForm__priceTitle}>L</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={pricePizzaL}\r\n                onChange={(ev) => setPricePizzaL(ev.target.value)}\r\n                className={style.editForm__priceInput}\r\n              />\r\n              <h4 className={style.editForm__priceTitle}>XL</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={pricePizzaXL}\r\n                onChange={(ev) => setPricePizzaXL(ev.target.value)}\r\n                className={style.editForm__priceInput}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"number\"\r\n                value={priceNoPizza}\r\n                onChange={(ev) => setPriceNoPizza(ev.target.value)}\r\n                className={style.editForm__inputSinglePrice}\r\n              />\r\n              <p className={style.editCard__title}>\r\n                <FormattedMessage id=\"volume weight\" />\r\n              </p>\r\n              <input\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(ev) => setDescription(ev.target.value)}\r\n                className={style.editForm__inputDescription}\r\n              />\r\n            </>\r\n          )}\r\n        </form>\r\n        <button\r\n          form=\"editForm\"\r\n          type=\"submit\"\r\n          name=\"complete\"\r\n          className={style.editForm__btnSubmit}\r\n        >\r\n          <FormattedMessage id=\"update.saveChanges\" />\r\n        </button>\r\n        <button\r\n          form=\"editForm\"\r\n          type=\"submit\"\r\n          name=\"delete\"\r\n          className={style.editForm__btnSubmit}\r\n          onClick={deleteItem}\r\n        >\r\n          <FormattedMessage id=\"delete product\" />\r\n        </button>\r\n        <div\r\n          onClick={() => {\r\n            confirmEdit.action === \"del\" || setConfirmEdit(false);\r\n          }}\r\n        >\r\n          {confirmEdit && <ConfirmationWindow confirmMassage={confirmEdit} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItemEdit;\r\n"],"sourceRoot":""}