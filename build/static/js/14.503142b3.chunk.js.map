{"version":3,"sources":["redux/product/productOperations.js","redux/product/productSelectors.js","services/api.js","redux/product/index.js","components/AdminUpdateListItem/adminUpdateListItem.module.css","components/AdminUpdateList/AdminUpdateList.module.css","components/AdminUpdateList/AdminUpdateList.js","components/AdminUpdateListItem/AdminUpdateListItem.js"],"names":["fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","products","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","sendProductError","getIngredients","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","ingredients","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredient","ingredient","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","getLoading","state","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","newIngredient","addIngredient","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","filteredProducts","AdminUpdateListItem","local","useSelector","lang","name","images","className","style","editCard","src","alt","editCard__image","editForm__name","to","pathname","type","editForm__btn","typesOfLists","AdminOrderList","useDispatch","productSelectors","isLoading","useState","listType","setListType","filterProductsBy","setFilterProductsBy","useEffect","productOperations","filter","categories","toLowerCase","includes","Spinner","styles","buttons_container","map","key","button","button_active","onClick","changeCategorie","page_container","value","placeholder","languages","search","input","onChange","target","items_container","_id"],"mappings":"iHAAA,oBAmGe,KACbA,cAvFoB,kBAAM,SAACC,GAC3BA,EAASC,IAAeC,mBAExBC,cACGC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASC,IAAeK,gBAAgBD,EAAKE,cAChEC,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAeS,cAAcD,SAmF1DE,wBAhF8B,SAACC,GAAD,OAAc,SAACZ,GAC7CA,EAASC,IAAeY,qBAExBC,YAAsBF,GACnBR,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACJL,EAASC,IAAec,kBAAkBV,EAAKE,cAEhDC,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAee,gBAAgBP,SA0E5DQ,iBAvEuB,SAACC,GAAD,OAAQ,SAAClB,GAChCA,EAASC,IAAekB,eAExBC,YAAeF,GACZd,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASC,IAAeoB,YAAYhB,EAAKiB,aAC5Dd,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAesB,UAAUd,SAoEtDe,SAhEe,SAACC,GAAD,OAAU,SAACzB,GAC1BA,EAASC,IAAeyB,mBAExBC,YAAUF,GACPrB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACJL,EAASC,IAAe2B,gBAAgBvB,EAAKwB,MAAMJ,UAEpDjB,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAe6B,cAAcrB,SA0D1DsB,YAvDkB,SAACT,GAAD,OAAa,SAACtB,GAChCA,EAASC,IAAe+B,sBAExBC,YAAeX,GACZlB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACJL,EAASC,IAAeiC,mBAAmB7B,EAAKiB,aAGjDd,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAekC,iBAAiB1B,SAgD7D2B,eA7CqB,kBAAM,SAACpC,GAC5BA,EAASC,IAAeoC,4BAExBC,cACGlC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OACJL,EAASC,IAAesC,yBAAyBlC,EAAKmC,iBAEvDhC,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAewC,uBAAuBhC,SAuCnEiC,cA3BoB,SAACC,EAAWC,GAAZ,OAA2B,SAAC5C,GAChDA,EAASC,IAAe4C,wBAExBC,YAAkBH,EAAWC,GAC1BxC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASC,IAAe8C,qBAAqB1C,OAChEG,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAe+C,mBAAmBvC,SAuB/DwC,cApBoB,SAACN,GAAD,OAAe,SAAC3C,GACpCA,EAASC,IAAeiD,wBAExBC,YAAkBR,GACfvC,MACC,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASC,IAAemD,qBAAqB/C,OAG5DG,OAAM,SAACC,GAAD,OAAWT,EAASC,IAAeoD,mBAAmB5C,SAa/D6C,oBAvC0B,SAACC,GAAD,OAAgB,SAACvD,GAC3CA,EAASC,IAAeuD,+BAExBC,YAAqBF,GAClBnD,MAAK,kBAAMJ,EAASC,IAAeyD,kCACnClD,OAAM,SAACC,GAAD,OACLT,EAASC,IAAe0D,0BAA0BlD,W,iCC5DzC,KACbmD,WAjBiB,SAACC,GAAD,OAAWA,EAAMtD,SAASuD,SAkB3CC,SAhBe,SAACF,GAAD,OAAWA,EAAMtD,SAASyD,cAiBzCC,YAfkB,SAACJ,GAAD,OAAWA,EAAMtD,SAAS2D,OAgB5CC,YAdkB,SAACN,GAAD,OAAWA,EAAMtD,SAAS6D,UAe5ChC,eAbqB,SAACyB,GAAD,OAAWA,EAAMtD,SAASiC,aAc/Cc,oBAZ0B,SAACO,GAAD,OAAWA,EAAMtD,SAAS8D,eAapDD,SAXe,SAACP,GAAD,OAAWA,EAAMtD,SAAS6D,UAYzCE,cAVoB,SAACT,GAAD,OAAWA,EAAMtD,SAASgD,c,+mBCZ1CgB,EADcC,IAAMC,YACCF,SAErBG,EAAU,8CAGVvE,EAAiB,WACrB,OAAOqE,IAAMG,IAAI,cAGb7D,EAAwB,SAACF,GAC7B,OAAO4D,IAAMG,IAAN,+BAAkC/D,EAAlC,KAA+C,CACpDgE,YAAaL,EAAOM,SAIlBzD,EAAiB,SAACF,GACtB,OAAOsD,IAAMG,IAAN,oBAAuBzD,KAG1BoB,EAAiB,uCAAG,sBAAAwC,EAAA,+EACjBN,IAAMG,IAAN,UAAaD,EAAb,kBADiB,2CAAH,qDAGjBjB,EAAoB,uCAAG,WAAOjB,GAAP,SAAAsC,EAAA,+EACpBN,IAAMO,KAAN,UAAcL,EAAd,gBAAqClC,IADjB,2CAAH,sDAIpBP,EAAiB,SAACX,GACtB,OAAOkD,IAAMO,KAAN,UAAcL,EAAd,aAAkCpD,IAGrCwB,EAAoB,SAACH,EAAWC,GACpC,OAAO4B,IAAMQ,IAAN,oBAAuBrC,GAAaC,IAGvCO,EAAoB,SAACR,GACzB,OAAO6B,IAAMS,OAAN,oBAA0BtC,KAM7BhB,EAAS,uCAAG,WAAOF,GAAP,eAAAqD,EAAA,6DACVzE,EAAO,IAAI6E,UACZC,OAAO,OAAQ1D,GAFJ,kBAIT+C,IAAMO,KAAN,UAAcL,EAAd,WAAgCrE,IAJvB,2CAAH,sDAST+E,EAAY,kBAAMZ,IAAMG,IAAI,gBAI5BU,EAAiB,kBAAMb,IAAMG,IAAI,WAEjCW,EAAe,SAAC7D,GAAD,OAAU+C,IAAMO,KAAK,UAAWtD,IAE/C8D,EAAe,SAACC,GAAD,OAAWhB,IAAMO,KAAK,SAAUS,IAE/CC,EAAsB,SAACC,EAASC,GAAV,OAC1BnB,IAAMQ,IAAN,iBAAoBU,GAAWC,IAE3BC,EAAsB,SAACF,GAAD,OAAalB,IAAMS,OAAN,iBAAuBS,KAE1DG,EAAuB,SAACH,GAAD,OAAalB,IAAMG,IAAN,iBAAoBe,M,iCCnE9D,8G,oBCCAI,EAAOC,QAAU,CAAC,SAAW,sCAAsC,gBAAkB,6CAA6C,eAAiB,4CAA4C,cAAgB,6C,oBCA/MD,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,kBAAoB,2CAA2C,OAAS,gCAAgC,cAAgB,uCAAuC,MAAQ,+BAA+B,gBAAkB,2C,oFCQ/RC,E,4ECYWC,EAfa,SAAC,GAAiB,IAAf3E,EAAc,EAAdA,QACvB4E,EAAQC,aAAY,SAACtC,GAAD,OAAWA,EAAMqC,MAAME,QACzCC,EAAiB/E,EAAjB+E,KAAMC,EAAWhF,EAAXgF,OACd,OACE,yBAAKC,UAAWC,IAAMC,UACpB,yBAAKC,IAAKJ,EAAQK,IAAKL,EAAQC,UAAWC,IAAMI,kBAChD,uBAAGL,UAAWC,IAAMK,gBAAiBR,EAAKH,IAC1C,kBAAC,IAAD,CAAMY,GAAI,CAAEC,SAAU,6BAA8BlD,MAAO,CAAEvC,aAC3D,4BAAQ0F,KAAK,SAAST,UAAWC,IAAMS,eACrC,kBAAC,IAAD,CAAkB/F,GAAG,a,kCDLzBgG,EAAe,CAAC,QAAS,QAAS,SAAU,YAEnC,SAASC,IACtB,IAAMnH,EAAWoH,cACXlB,EAAQC,aAAY,SAACtC,GAAD,OAAWA,EAAMqC,MAAME,QAC3C7F,EAAW4F,YAAYkB,IAAiBpD,aACxCqD,EAAYnB,YAAYkB,IAAiBzD,YAJR,EAMP2D,mBAAS,SANF,mBAMhCC,EANgC,KAMtBC,EANsB,OAOSF,mBAAS,IAPlB,mBAOhCG,EAPgC,KAOdC,EAPc,KASvCC,qBAAU,kBAAM5H,EAAS6H,IAAkB9H,mBAAkB,CAACC,IAC1DO,IACFyF,EAAmBzF,EAChBuH,QAAO,qBAAGC,aAAgCP,KAC1CM,QAAO,qBAAGzB,KACJH,GAAO8B,cAAcC,SAASP,EAAiBM,mBAW1D,OACE,oCACGV,GAAa,kBAACY,EAAA,EAAD,MACd,yBAAK3B,UAAW4B,IAAOC,mBACpBlB,EAAamB,KAAI,SAACrB,GAAD,OAChB,4BACEsB,IAAKtB,EACLT,UAAS,UAAK4B,IAAOI,OAAZ,YACPf,IAAaR,EAAOmB,IAAOK,cAAgB,IAE7CC,QAAS,kBAlBK,SAACzB,GACnBA,IAASQ,IAGbG,EAAoB,IACpBF,EAAYT,IAaW0B,CAAgB1B,KAE/B,kBAAC,IAAD,CAAkB9F,GAAI8F,SAI5B,6BAAST,UAAW4B,IAAOQ,gBACzB,2BACE3B,KAAK,OACL4B,MAAOlB,EACPmB,YAAaC,IAAU5C,GAAO6C,OAC9BxC,UAAW4B,IAAOa,MAClBC,SAAU,gBAAaL,EAAb,EAAGM,OAAUN,MAAb,OAA2BjB,EAAoBiB,MAE3D,yBAAKrC,UAAW4B,IAAOgB,iBACpBnD,EAAiBqC,KAAI,SAAC/G,GAAD,OACpB,kBAAC,EAAD,CAAqBgH,IAAKhH,EAAQ8H,IAAK9H,QAASA","file":"static/js/14.503142b3.chunk.js","sourcesContent":["import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editCard\":\"adminUpdateListItem_editCard__3mEsn\",\"editCard__image\":\"adminUpdateListItem_editCard__image__1XDPp\",\"editForm__name\":\"adminUpdateListItem_editForm__name__38tOX\",\"editForm__btn\":\"adminUpdateListItem_editForm__btn__2Vgad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"AdminUpdateList_page_container__Ja61B\",\"buttons_container\":\"AdminUpdateList_buttons_container__uoPl6\",\"button\":\"AdminUpdateList_button__3Ve_9\",\"button_active\":\"AdminUpdateList_button_active__zH20E\",\"input\":\"AdminUpdateList_input__1ohVs\",\"items_container\":\"AdminUpdateList_items_container__1RDXF\"};","import React, { useState, useEffect } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { productOperations, productSelectors } from \"../../redux/product\";\r\nimport AdminUpdateListItem from \"../AdminUpdateListItem/AdminUpdateListItem\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport styles from \"./AdminUpdateList.module.css\";\r\nimport languages from \"../../languages\";\r\n\r\nlet filteredProducts;\r\nconst typesOfLists = [\"pizza\", \"sides\", \"drinks\", \"desserts\"];\r\n\r\nexport default function AdminOrderList() {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const products = useSelector(productSelectors.getProducts);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n\r\n  const [listType, setListType] = useState(\"pizza\");\r\n  const [filterProductsBy, setFilterProductsBy] = useState(\"\");\r\n\r\n  useEffect(() => dispatch(productOperations.fetchProducts()), [dispatch]);\r\n  if (products) {\r\n    filteredProducts = products\r\n      .filter(({ categories }) => categories === listType)\r\n      .filter(({ name }) =>\r\n        name[local].toLowerCase().includes(filterProductsBy.toLowerCase())\r\n      );\r\n  }\r\n  const changeCategorie = (type) => {\r\n    if (type === listType) {\r\n      return;\r\n    }\r\n    setFilterProductsBy(\"\");\r\n    setListType(type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      <div className={styles.buttons_container}>\r\n        {typesOfLists.map((type) => (\r\n          <button\r\n            key={type}\r\n            className={`${styles.button} ${\r\n              listType === type ? styles.button_active : \"\"\r\n            }`}\r\n            onClick={() => changeCategorie(type)}\r\n          >\r\n            <FormattedMessage id={type} />\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <section className={styles.page_container}>\r\n        <input\r\n          type=\"text\"\r\n          value={filterProductsBy}\r\n          placeholder={languages[local].search}\r\n          className={styles.input}\r\n          onChange={({ target: { value } }) => setFilterProductsBy(value)}\r\n        />\r\n        <div className={styles.items_container}>\r\n          {filteredProducts.map((product) => (\r\n            <AdminUpdateListItem key={product._id} product={product} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport style from \"./adminUpdateListItem.module.css\";\r\n\r\nconst AdminUpdateListItem = ({ product }) => {\r\n  const local = useSelector((state) => state.local.lang);\r\n  const { name, images } = product;\r\n  return (\r\n    <div className={style.editCard}>\r\n      <img src={images} alt={images} className={style.editCard__image} />\r\n      <p className={style.editForm__name}>{name[local]}</p>\r\n      <Link to={{ pathname: \"/admin/update-product-item\", state: { product } }}>\r\n        <button type=\"button\" className={style.editForm__btn}>\r\n          <FormattedMessage id=\"edit\" />\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItem;\r\n"],"sourceRoot":""}