{"version":3,"sources":["redux/product/productOperations.js","redux/product/productSelectors.js","services/api.js","components/CreateNewProduct/CreateNewProduct.module.css","components/CreateNewProduct/CreateNewProduct.jsx"],"names":["fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","products","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdErrror","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","sendProductError","getIngredients","getAllIngradientsRequest","getAllIngredients","getAllIngradientsSuccess","ingredients","getAllIngradientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","res","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","getLoading","state","loading","getProducts","items","getFileLink","fileLink","getIngradients","ingradients","baseURL","axios","get","a","post","put","delete","FormData","append","fetchDevs","module","exports","categories","options","value","label","pizzaCategories","CreateNewProduct","useState","changeCategory","subCategory","changeSubCategory","ukrName","setUkrName","enName","setEnName","ruName","setRuName","price","setPrice","M","setM","L","setL","XL","setXL","description","setDescription","activeIngredients","setActiveIngredients","useSelector","productSelectors","useDispatch","hrefProductImd","productOperations","createdProduct","useEffect","handleCheckboxChange","e","persist","target","checked","prev","filter","el","submitForm","preventDefault","currency","images","name","ukr","en","ru","likes","sku","subcategory","className","styles","createContainer","length","Notification","message","confirm","forCard","onSubmit","applyForm","select","onChange","isDisabled","inputLabel","type","files","ingredientsContainer","map","i","key","_id","ingredient","onClick"],"mappings":"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","file":"static/js/16.3cd22cb2.chunk.js","sourcesContent":["import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdErrror(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n  // console.log(file);\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngradientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngradientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngradientsError(error)));\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then((res) => dispatch(productActions.updateProductSuccess(res)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n};\r\n","const getLoading = (state) => state.products.loading;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngradients = (state) => state.products.ingradients;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nexport default {\r\n  getLoading,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngradients,\r\n  fileLink,\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`);\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\nfunction fetchDevs() {\r\n  return axios.get(\"/developers\");\r\n}\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createContainer\":\"CreateNewProduct_createContainer__3miQy\",\"applyForm\":\"CreateNewProduct_applyForm__1bpSr\",\"ingredientsContainer\":\"CreateNewProduct_ingredientsContainer__27jlA\",\"ingredient\":\"CreateNewProduct_ingredient__3pWQa\",\"select\":\"CreateNewProduct_select__6Q71N\",\"inputLabel\":\"CreateNewProduct_inputLabel__2e9jl\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from \"./CreateNewProduct.module.css\";\r\nimport Select from \"react-select\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\nimport Notification from \"../Notification\";\r\n\r\nconst categories = {\r\n  pizza: \"pizza\",\r\n  drinks: \"drinks\",\r\n  sides: \"sides\",\r\n  desserts: \"desserts\",\r\n};\r\n\r\nconst options = [\r\n  { value: categories.pizza, label: \"Pizza\" },\r\n  { value: categories.drinks, label: \"Drinks\" },\r\n  { value: categories.sides, label: \"Sides\" },\r\n  { value: categories.desserts, label: \"Desserts\" },\r\n];\r\n\r\nconst pizzaCategories = [\r\n  // {value: \"bestPrice\", label: \"Best price\"},\r\n  { value: \"classic\", label: \"Classic\" },\r\n  { value: \"branded\", label: \"Branded\" },\r\n  { value: \"premium\", label: \"Premium\" },\r\n];\r\n\r\nconst CreateNewProduct = () => {\r\n  const [category, changeCategory] = useState(options[0]);\r\n  const [subCategory, changeSubCategory] = useState(pizzaCategories[0]);\r\n  const [ukrName, setUkrName] = useState(\"\");\r\n  const [enName, setEnName] = useState(\"\");\r\n  const [ruName, setRuName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [M, setM] = useState(\"\");\r\n  const [L, setL] = useState(\"\");\r\n  const [XL, setXL] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [activeIngredients, setActiveIngredients] = useState([]);\r\n\r\n  const ingredients = useSelector(productSelectors.getIngradients);\r\n  const dispatch = useDispatch();\r\n  const postImage = (file) => dispatch(productOperations.sendFile(file));\r\n  const hrefProductImd = useSelector(productSelectors.fileLink);\r\n  const postNewProduct = (product) =>\r\n    dispatch(productOperations.sendProduct(product));\r\n  const createdProduct = useSelector(productSelectors.getProducts);\r\n  //   console.log(\"hrefProductImd:\", hrefProductImd);\r\n\r\n  useEffect(() => {\r\n    dispatch(productOperations.getIngredients());\r\n  }, [dispatch]);\r\n\r\n  const handleImg = (e) => {\r\n    e.persist();\r\n    e.preventDefault();\r\n    postImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    e.persist();\r\n    if (e.target.checked) {\r\n      return setActiveIngredients((prev) => [...prev, e.target.value]);\r\n    }\r\n    setActiveIngredients((prev) => prev.filter((el) => el !== e.target.value));\r\n  };\r\n\r\n  const submitForm = async (e) => {\r\n    e.persist();\r\n    e.preventDefault();\r\n    const product = {\r\n      categories: category.value,\r\n      currency: \"грн\",\r\n      images: hrefProductImd,\r\n      name: {\r\n        ukr: ukrName,\r\n        en: enName,\r\n        ru: ruName,\r\n      },\r\n      likes: 0,\r\n      sku: 0,\r\n      description: description,\r\n    };\r\n    if (category.value === categories.pizza) {\r\n      product.ingredients = activeIngredients;\r\n      product.subcategory = subCategory.value;\r\n      product.price = {\r\n        M: M,\r\n        L: L,\r\n        XL: XL,\r\n      };\r\n    } else {\r\n      product.price = { price };\r\n    }\r\n    postNewProduct(product);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.createContainer}>\r\n      {createdProduct.length === 1 && (\r\n        <Notification message={`Создан продукт`} confirm forCard />\r\n      )}\r\n      <form onSubmit={submitForm} className={styles.applyForm}>\r\n        <Select\r\n          className={styles.select}\r\n          value={category}\r\n          onChange={changeCategory}\r\n          options={options}\r\n        />\r\n        <Select\r\n          className={styles.select}\r\n          value={category.value === categories.pizza ? subCategory : null}\r\n          onChange={changeSubCategory}\r\n          options={pizzaCategories}\r\n          isDisabled={category.value !== categories.pizza}\r\n        />\r\n        <label className={styles.inputLabel}>\r\n          <h4>Ukr Name</h4>\r\n          <input\r\n            type=\"text\"\r\n            value={ukrName}\r\n            onChange={(e) => setUkrName(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={styles.inputLabel}>\r\n          <h4>En Name</h4>\r\n          <input\r\n            type=\"text\"\r\n            value={enName}\r\n            onChange={(e) => setEnName(e.target.value)}\r\n          />\r\n        </label>\r\n        <label className={styles.inputLabel}>\r\n          <h4>Ru Name</h4>\r\n          <input\r\n            type=\"text\"\r\n            value={ruName}\r\n            onChange={(e) => setRuName(e.target.value)}\r\n          />\r\n        </label>\r\n        {category.value === categories.pizza ? (\r\n          <>\r\n            <label className={styles.inputLabel}>\r\n              <h4>M</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={M}\r\n                onChange={(e) => setM(e.target.value)}\r\n              />\r\n            </label>\r\n\r\n            <label className={styles.inputLabel}>\r\n              <h4>L</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={L}\r\n                onChange={(e) => setL(e.target.value)}\r\n              />\r\n            </label>\r\n\r\n            <label className={styles.inputLabel}>\r\n              <h4>XL</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={XL}\r\n                onChange={(e) => setXL(e.target.value)}\r\n              />\r\n            </label>\r\n          </>\r\n        ) : (\r\n          <label className={styles.inputLabel}>\r\n            <h4>Price</h4>\r\n            <input\r\n              type=\"text\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            />\r\n          </label>\r\n        )}\r\n\r\n        <label className={styles.inputLabel}>\r\n          <h4>Description</h4>\r\n          <input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.inputLabel}>\r\n          <h4>Image</h4>\r\n          <input type=\"file\" id=\"image\" onChange={handleImg} />\r\n        </label>\r\n        <div className={styles.ingredientsContainer}>\r\n          {category.value === categories.pizza &&\r\n            ingredients.map((i) => (\r\n              <label key={i._id} className={styles.ingredient}>\r\n                {i.name[\"ru\"]}\r\n                <input\r\n                  onClick={handleCheckboxChange}\r\n                  type=\"checkbox\"\r\n                  id={i._id}\r\n                  value={i._id}\r\n                />\r\n              </label>\r\n            ))}\r\n        </div>\r\n        <button type=\"Submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateNewProduct;\r\n"],"sourceRoot":""}