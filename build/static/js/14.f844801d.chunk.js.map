{"version":3,"sources":["redux/product/productOperations.js","redux/product/productSelectors.js","services/api.js","redux/product/index.js","components/DessertsList/DessertsList.module.css","components/DessertsList/DessertListItem.js","components/DessertsList/DessertsList.js"],"names":["fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","products","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdErrror","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","sendProductError","getIngredients","getAllIngradientsRequest","getAllIngredients","getAllIngradientsSuccess","ingredients","getAllIngradientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","res","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","getLoading","state","loading","getProducts","items","getFileLink","fileLink","getIngradients","ingradients","baseURL","axios","get","a","post","put","delete","FormData","append","fetchDevs","module","exports","dessertItem","styles","dessertTittle","dessertWeight","dessertOrder","dessertDescription","dessertPriceContainer","dessertPrice","dessertCurrency","dessertButton","dessertImg","DessertListItem","props","name","description","price","images","local","useSelector","lang","useDispatch","successMessage","values","errorMessage","useState","isAddedProdToOrder","setIsAddedProdToOrder","message","setMessage","addProd","setTimeout","orderOperations","addProdToOrderList","className","Notification","confirm","forCard","src","alt","width","type","onClick","dessertConainer","dessertsHeading","dessertList","DesertList","this","onFetchProductDesserts","map","key","_id","Component","mapDispatchToProps","productOperations","connect","productSelectors"],"mappings":"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","file":"static/js/14.f844801d.chunk.js","sourcesContent":["import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdErrror(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n  // console.log(file);\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngradientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngradientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngradientsError(error)));\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then((res) => dispatch(productActions.updateProductSuccess(res)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n};\r\n","const getLoading = (state) => state.products.loading;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngradients = (state) => state.products.ingradients;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nexport default {\r\n  getLoading,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngradients,\r\n  fileLink,\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`);\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\nfunction fetchDevs() {\r\n  return axios.get(\"/developers\");\r\n}\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dessertConainer\":\"DessertsList_dessertConainer__1gc1A\",\"dessertsHeading\":\"DessertsList_dessertsHeading__3fjOu\",\"dessertList\":\"DessertsList_dessertList__2i3Ra\",\"dessertItem\":\"DessertsList_dessertItem__Ort3C\",\"dessertImg\":\"DessertsList_dessertImg__27Dt9\",\"dessertDescription\":\"DessertsList_dessertDescription__e5Yyt\",\"dessertTittle\":\"DessertsList_dessertTittle__2gtdv\",\"dessertWeight\":\"DessertsList_dessertWeight__3pEZY\",\"dessertOrder\":\"DessertsList_dessertOrder__1E1wz\",\"dessertPriceContainer\":\"DessertsList_dessertPriceContainer__2DNTM\",\"dessertPrice\":\"DessertsList_dessertPrice__11ivQ\",\"dessertCurrency\":\"DessertsList_dessertCurrency__IpvXh\",\"dessertButton\":\"DessertsList_dessertButton__1j5MS\"};","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { orderOperations } from \"../../redux/order\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Notification from \"../Notification\";\r\n\r\n// import cheesecacke from '../../assets/img/desserts/cheesecacke.jpg';\r\nimport styles from \"./DessertsList.module.css\";\r\n\r\nconst {\r\n  dessertItem,\r\n  dessertTittle,\r\n  dessertWeight,\r\n  dessertOrder,\r\n  dessertDescription,\r\n  dessertPriceContainer,\r\n  dessertPrice,\r\n  dessertCurrency,\r\n  dessertButton,\r\n  dessertImg,\r\n} = styles;\r\n\r\nconst DessertListItem = (props) => {\r\n  const { name, description, price, images } = props;\r\n\r\n  const local = useSelector((state) => state.local.lang);\r\n\r\n  // const product = useSelector(state => state.products.items);\r\n  const dispatch = useDispatch();\r\n  const onAddProductToOrder = () =>\r\n    dispatch(orderOperations.addProdToOrderList(props));\r\n\r\n  const successMessage = (\r\n    <FormattedMessage\r\n      id=\"order.success\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const errorMessage = (\r\n    <FormattedMessage\r\n      id=\"order.error\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const [isAddedProdToOrder, setIsAddedProdToOrder] = useState(false);\r\n  const [message, setMessage] = useState(successMessage);\r\n\r\n  const addProd = async () => {\r\n    if (isAddedProdToOrder) {\r\n      setIsAddedProdToOrder(false);\r\n      setMessage(errorMessage);\r\n      return await setTimeout(() => setIsAddedProdToOrder(true), 10);\r\n    }\r\n    onAddProductToOrder(props);\r\n    setIsAddedProdToOrder(true);\r\n  };\r\n\r\n  return (\r\n    <li className={dessertItem}>\r\n      {isAddedProdToOrder && <Notification message={message} confirm forCard />}\r\n      <img src={images} alt=\"\" width=\"280\" className={dessertImg} />\r\n      <div className={dessertDescription}>\r\n        <h2 className={dessertTittle}>{name[local]}</h2>\r\n        <span className={dessertWeight}>\r\n          <FormattedMessage id=\"weight\" />\r\n          {description}\r\n          <FormattedMessage id=\"g\" />\r\n        </span>\r\n        <div className={dessertOrder}>\r\n          <div className={dessertPriceContainer}>\r\n            <span className={dessertPrice}>{`${price.price}.00 `}</span>\r\n            <span className={dessertCurrency}>\r\n              <FormattedMessage id=\"grn\" />\r\n            </span>\r\n          </div>\r\n\r\n          <button\r\n            className={dessertButton}\r\n            type=\"submit\"\r\n            onClick={() => addProd()}\r\n          >\r\n            <FormattedMessage id=\"orders.chart\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DessertListItem;\r\n","import React, { Component } from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport { productSelectors, productOperations } from '../../redux/product';\r\n\r\nimport DessertsListItem from './DessertListItem';\r\nimport styles from './DessertsList.module.css';\r\n\r\nconst { dessertConainer, dessertsHeading, dessertList } = styles;\r\n\r\nclass DesertList extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchProductDesserts('desserts');\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n\r\n    // console.log(products);\r\n    return (\r\n      <div className={dessertConainer}>\r\n        <h2 className={dessertsHeading}>\r\n          <FormattedMessage id=\"desserts\" />\r\n        </h2>\r\n        <ul className={dessertList}>\r\n          {products.map(product => (\r\n            <DessertsListItem key={product._id} {...product} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { products: productSelectors.getProducts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchProductDesserts: productOperations.fetchProductsByCategory,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DesertList);\r\n"],"sourceRoot":""}