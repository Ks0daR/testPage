{"version":3,"sources":["redux/product/productOperations.js","redux/product/productSelectors.js","services/api.js","redux/product/index.js","components/DrinkListItem/drinkListItem.module.css","components/DrinkList/drinkList.module.css","components/DrinkListItem/DrinkListItem.js","components/DrinkList/DrinkList.js"],"names":["fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","products","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdErrror","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","sendProductError","getIngredients","getAllIngradientsRequest","getAllIngredients","getAllIngradientsSuccess","ingredients","getAllIngradientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","res","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","getLoading","state","loading","getProducts","items","getFileLink","fileLink","getIngradients","ingradients","baseURL","axios","get","a","post","put","delete","FormData","append","fetchDevs","module","exports","DrinkListItem","props","name","description","price","images","local","useSelector","lang","useDispatch","successMessage","values","errorMessage","useState","isAddedProdToOrder","setIsAddedProdToOrder","message","setMessage","addProd","setTimeout","orderOperations","addProdToOrderList","className","styles","menuItem","Notification","confirm","forCard","menuItem_imageBlock","src","alt","menuItem_img","menuItem_content","menuItem_headline","menuItem_size","menuItem_wrapper","menuItem_price","currency","button","type","onClick","DrinkList","this","onFetchProductDrinks","containerList","title","menu","map","key","_id","Component","mapDispatchToProps","productOperations","connect","productSelectors"],"mappings":"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","file":"static/js/6.9a275131.chunk.js","sourcesContent":["import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdErrror(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n  // console.log(file);\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngradientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngradientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngradientsError(error)));\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then((res) => dispatch(productActions.updateProductSuccess(res)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n};\r\n","const getLoading = (state) => state.products.loading;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngradients = (state) => state.products.ingradients;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nexport default {\r\n  getLoading,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngradients,\r\n  fileLink,\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`);\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\nfunction fetchDevs() {\r\n  return axios.get(\"/developers\");\r\n}\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../stylesheet/vars.css\\\"\",\"accentColor\":\"#FF6C00\",\"primaryColor\":\"#272727\",\"secondaryBackgroundColor\":\"rgba(39, 39, 39, 0.2)\",\"lightColor\":\"#FFF\",\"primaryBackgroundColor\":\"rgba(39, 39, 39, 0.8)\",\"menuItem\":\"drinkListItem_menuItem__2SLFd\",\"menuItem_imageBlock\":\"drinkListItem_menuItem_imageBlock__36u3Z\",\"menuItem_img\":\"drinkListItem_menuItem_img__10UE0\",\"menuItem_content\":\"drinkListItem_menuItem_content__QgfFi\",\"menuItem_headline\":\"drinkListItem_menuItem_headline__18h0n\",\"menuItem_size\":\"drinkListItem_menuItem_size__LTygZ\",\"menuItem_wrapper\":\"drinkListItem_menuItem_wrapper__3BBI_\",\"currency\":\"drinkListItem_currency__1vYUG\",\"menuItem_price\":\"drinkListItem_menuItem_price__1NDE4\",\"button\":\"drinkListItem_button__27NUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../stylesheet/vars.css\\\"\",\"primaryColor\":\"#272727\",\"containerList\":\"drinkList_containerList__2ENKW\",\"menu\":\"drinkList_menu__2t04p\",\"title\":\"drinkList_title__H8OkR\"};","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Notification from \"../Notification\";\r\n\r\nimport { orderOperations } from \"../../redux/order\";\r\nimport styles from \"./drinkListItem.module.css\";\r\n\r\nconst DrinkListItem = (props) => {\r\n  const { name, description, price, images } = props;\r\n\r\n  const local = useSelector((state) => state.local.lang);\r\n\r\n  const dispatch = useDispatch();\r\n  const onAddProductToOrder = () =>\r\n    dispatch(orderOperations.addProdToOrderList(props));\r\n\r\n  const successMessage = (\r\n    <FormattedMessage\r\n      id=\"order.success\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const errorMessage = (\r\n    <FormattedMessage\r\n      id=\"order.error\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const [isAddedProdToOrder, setIsAddedProdToOrder] = useState(false);\r\n  const [message, setMessage] = useState(successMessage);\r\n\r\n  const addProd = async () => {\r\n    if (isAddedProdToOrder) {\r\n      setIsAddedProdToOrder(false);\r\n      setMessage(errorMessage);\r\n      return await setTimeout(() => setIsAddedProdToOrder(true), 10);\r\n    }\r\n    onAddProductToOrder(props);\r\n    setIsAddedProdToOrder(true);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.menuItem}>\r\n      {isAddedProdToOrder && <Notification message={message} confirm forCard />}\r\n      <div className={styles.menuItem_imageBlock}>\r\n        <img src={images} alt={name[local]} className={styles.menuItem_img} />\r\n      </div>\r\n      <div className={styles.menuItem_content}>\r\n        <h2 className={styles.menuItem_headline}>{name[local]}</h2>\r\n        <p className={styles.menuItem_size}>\r\n          <FormattedMessage id=\"volume\" /> {description}\r\n        </p>\r\n        <div className={styles.menuItem_wrapper}>\r\n          <p className={styles.menuItem_price}>\r\n            {`${price.price}.00`}\r\n            <span className={styles.currency}>\r\n              <FormattedMessage id=\"grn\" />\r\n            </span>\r\n          </p>\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => addProd()}\r\n          >\r\n            <FormattedMessage id=\"orders.chart\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DrinkListItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { productSelectors, productOperations } from \"../../redux/product\";\r\n\r\nimport DrinkListItem from \"../DrinkListItem/DrinkListItem\";\r\nimport styles from \"./drinkList.module.css\";\r\n\r\nclass DrinkList extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchProductDrinks(\"drinks\");\r\n  }\r\n  render() {\r\n    const { products } = this.props;\r\n    return (\r\n      <div className={styles.containerList}>\r\n        <h2 className={styles.title}>\r\n          <FormattedMessage id=\"drinks\" />\r\n        </h2>\r\n        <ul className={styles.menu}>\r\n          {products.map((product) => (\r\n            <DrinkListItem key={product._id} {...product} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { products: productSelectors.getProducts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchProductDrinks: productOperations.fetchProductsByCategory,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkList);\r\n"],"sourceRoot":""}