{"version":3,"sources":["redux/product/productSelectors.js","redux/product/productOperations.js","services/api.js","redux/product/index.js","components/DrinkListItem/drinkListItem.module.css","components/DrinkList/drinkList.module.css","components/DrinkListItem/DrinkListItem.js","components/DrinkList/DrinkList.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","clearFile","sendProductError","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","DrinkListItem","props","name","description","price","images","local","useSelector","lang","useDispatch","successMessage","values","errorMessage","useState","isAddedProdToOrder","setIsAddedProdToOrder","message","setMessage","addProd","setTimeout","orderOperations","addProdToOrderList","useEffect","className","styles","menuItem","Notification","confirm","forCard","menuItem_imageBlock","src","alt","menuItem_img","menuItem_content","menuItem_headline","menuItem_size","menuItem_wrapper","menuItem_price","currency","button","type","onClick","DrinkList","this","onFetchProductDrinks","err","console","log","cancel","isLoading","containerList","Spinner","title","menu","filter","categories","map","key","_id","Component","mapDispatchToProps","productOperations","connect","productSelectors"],"mappings":"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","file":"static/js/10.d176d0e1.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  addIngredient,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) => {\r\n      dispatch(productActions.sendProductSuccess(data.product));\r\n      dispatch(productActions.clearFile());\r\n    })\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../stylesheet/vars.css\\\"\",\"accentColor\":\"#FF6C00\",\"primaryColor\":\"#272727\",\"secondaryBackgroundColor\":\"rgba(39, 39, 39, 0.2)\",\"lightColor\":\"#FFF\",\"primaryBackgroundColor\":\"rgba(39, 39, 39, 0.8)\",\"menuItem\":\"drinkListItem_menuItem__2SLFd\",\"menuItem_imageBlock\":\"drinkListItem_menuItem_imageBlock__36u3Z\",\"menuItem_img\":\"drinkListItem_menuItem_img__10UE0\",\"menuItem_content\":\"drinkListItem_menuItem_content__QgfFi\",\"menuItem_headline\":\"drinkListItem_menuItem_headline__18h0n\",\"menuItem_size\":\"drinkListItem_menuItem_size__LTygZ\",\"menuItem_wrapper\":\"drinkListItem_menuItem_wrapper__3BBI_\",\"currency\":\"drinkListItem_currency__1vYUG\",\"menuItem_price\":\"drinkListItem_menuItem_price__1NDE4\",\"button\":\"drinkListItem_button__27NUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../stylesheet/vars.css\\\"\",\"primaryColor\":\"#272727\",\"containerList\":\"drinkList_containerList__2ENKW\",\"menu\":\"drinkList_menu__2t04p\",\"title\":\"drinkList_title__H8OkR\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Notification from \"../Notification\";\r\n\r\nimport { orderOperations } from \"../../redux/order\";\r\nimport styles from \"./drinkListItem.module.css\";\r\n\r\nconst DrinkListItem = (props) => {\r\n  const { name, description, price, images } = props;\r\n\r\n  const local = useSelector((state) => state.local.lang);\r\n\r\n  const dispatch = useDispatch();\r\n  const onAddProductToOrder = () =>\r\n    dispatch(orderOperations.addProdToOrderList(props));\r\n\r\n  const successMessage = (\r\n    <FormattedMessage\r\n      id=\"order.success\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const errorMessage = (\r\n    <FormattedMessage\r\n      id=\"order.error\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const [isAddedProdToOrder, setIsAddedProdToOrder] = useState(false);\r\n  const [message, setMessage] = useState(successMessage);\r\n\r\n  const addProd = async () => {\r\n    if (isAddedProdToOrder) {\r\n      setIsAddedProdToOrder(false);\r\n      setMessage(errorMessage);\r\n      return await setTimeout(() => setIsAddedProdToOrder(true), 10);\r\n    }\r\n    onAddProductToOrder(props);\r\n    setIsAddedProdToOrder(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMessage(\r\n      <FormattedMessage\r\n        id=\"order.success\"\r\n        values={{\r\n          name: name[local],\r\n        }}\r\n      />\r\n    );\r\n  }, [local, name]);\r\n\r\n  return (\r\n    <li className={styles.menuItem}>\r\n      {isAddedProdToOrder && <Notification message={message} confirm forCard />}\r\n      <div className={styles.menuItem_imageBlock}>\r\n        <img src={images} alt={name[local]} className={styles.menuItem_img} />\r\n      </div>\r\n      <div className={styles.menuItem_content}>\r\n        <h2 className={styles.menuItem_headline}>{name[local]}</h2>\r\n        <p className={styles.menuItem_size}>\r\n          <FormattedMessage id=\"volume\" /> {description}L\r\n        </p>\r\n        <div className={styles.menuItem_wrapper}>\r\n          <p className={styles.menuItem_price}>\r\n            {`${price.price}.00`}\r\n            <span className={styles.currency}>\r\n              <FormattedMessage id=\"grn\" />\r\n            </span>\r\n          </p>\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => addProd()}\r\n          >\r\n            <FormattedMessage id=\"orders.chart\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DrinkListItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Spinner from \"../Spinner\";\r\nimport axios from \"axios\";\r\n\r\nimport { productSelectors, productOperations } from \"../../redux/product\";\r\n\r\nimport DrinkListItem from \"../DrinkListItem/DrinkListItem\";\r\nimport styles from \"./drinkList.module.css\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nclass DrinkList extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      this.props.onFetchProductDrinks(\"drinks\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  async componentWillUnmount() {\r\n    try {\r\n      source.cancel(\"Operation canceled\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  render() {\r\n    const { products, isLoading } = this.props;\r\n    return (\r\n      <div className={styles.containerList}>\r\n        {isLoading && <Spinner />}\r\n        <h2 className={styles.title}>\r\n          <FormattedMessage id=\"drinks\" />\r\n        </h2>\r\n        <ul className={styles.menu}>\r\n          {products\r\n            .filter(({ categories }) => categories === \"drinks\")\r\n            .map((product) => (\r\n              <DrinkListItem key={product._id} {...product} />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: productSelectors.getProducts(state),\r\n    isLoading: productSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchProductDrinks: productOperations.fetchProductsByCategory,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkList);\r\n"],"sourceRoot":""}