{"version":3,"sources":["components/AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css","components/AdminUpdateListItemEdit/ConfirmationWindow.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemEdit.js"],"names":["module","exports","ConfirmationWindow","confirmMassage","className","style","confirmation","confirmation__form","confirmation__formText","to","confirmation__formBtnLink","type","confirmation__formBtn","id","AdminUpdateListItemEdit","product","useLocation","state","local","useSelector","lang","useState","isLoading","setIsLoading","confirmEdit","setConfirmEdit","images","setImage","name","ru","nameRu","setNameRu","en","nameEn","setNameEn","ukr","nameUkr","setNameUkr","categories","setCategory","subcategory","setSubcategory","price","priceNoPizza","setPriceNoPizza","setPrice","M","pricePizzaM","setPricePizzaM","L","pricePizzaL","setPricePizzaL","XL","pricePizzaXL","setPricePizzaXL","ingredients","setIngredients","newIngredient","setNewIngredient","ingredientsList","setIngredientsList","description","setDescription","useEffect","Axios","get","then","res","data","catch","err","console","log","deleteIngredient","ev","preventDefault","delElemIndex","findIndex","el","_id","target","dataset","splice","container","editCard","src","alt","closeUpImages","editCard__image","onSubmit","editedItem","put","languages","editForm","editCard__title","editCard__photoLabel","accept","onChange","FormData","file","files","append","post","image","editForm__photo","editForm__photoBtn","editCard__titleName","editCard__titleLang","value","editForm__inputLang","editForm__inputCategory","editForm__ingredients","map","idx","key","editForm__ingredient","editForm__ingredientName","onClick","data-id","editForm__ingredientBtnDel","editForm__ingredientBtnDelImage","editForm__ingredientsSelect","editForm__ingredientsList","editForm__addIngredientBtn","editForm__price","editForm__priceTitle","editForm__priceInput","editForm__inputSinglePrice","editForm__inputDescription","form","editForm__btnSubmit","delete","Spinner"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,UAAY,2CAA2C,SAAW,0CAA0C,gBAAkB,iDAAiD,SAAW,0CAA0C,gBAAkB,iDAAiD,oBAAsB,qDAAqD,oBAAsB,qDAAqD,oBAAsB,qDAAqD,qBAAuB,sDAAsD,gBAAkB,iDAAiD,mBAAqB,oDAAoD,wBAA0B,yDAAyD,4BAA8B,6DAA6D,qBAAuB,sDAAsD,yBAA2B,0DAA0D,0BAA4B,2DAA2D,2BAA6B,4DAA4D,2BAA6B,4DAA4D,gCAAkC,iEAAiE,gBAAkB,iDAAiD,qBAAuB,sDAAsD,2BAA6B,4DAA4D,qBAAuB,sDAAsD,2BAA6B,4DAA4D,oBAAsB,qDAAqD,aAAe,8CAA8C,mBAAqB,oDAAoD,uBAAyB,wDAAwD,0BAA4B,2DAA2D,sBAAwB,yD,uICwBhsEC,EArBY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC5B,OACE,yBAAKC,UAAWC,IAAMC,cACpB,yBAAKF,UAAWC,IAAME,oBACpB,uBAAGH,UAAWC,IAAMG,wBAAyBL,GAC7C,kBAAC,IAAD,CACEM,GAAG,wBACHL,UAAWC,IAAMK,2BAEjB,4BAAQC,KAAK,SAASP,UAAWC,IAAMO,uBACrC,kBAAC,IAAD,CAAkBC,GAAG,qB,iCCiTlBC,UApTiB,WAC9B,IACMC,EADSC,cACUC,MAAMF,QACzBG,EAAQC,aAAY,SAACF,GAAD,OAAWA,EAAMC,MAAME,QAHb,EAIFC,oBAAS,GAJP,mBAI7BC,EAJ6B,KAIlBC,EAJkB,OAKEF,oBAAS,GALX,mBAK7BG,EAL6B,KAKhBC,EALgB,OAMTJ,mBAASN,EAAQW,QANR,mBAM7BA,EAN6B,KAMrBC,EANqB,OAORN,mBAASN,EAAQa,KAAKC,IAPd,mBAO7BC,EAP6B,KAOrBC,EAPqB,OAQRV,mBAASN,EAAQa,KAAKI,IARd,mBAQ7BC,EAR6B,KAQrBC,EARqB,OASNb,mBAASN,EAAQa,KAAKO,KAThB,mBAS7BC,EAT6B,KASpBC,EAToB,OAUFhB,mBAASN,EAAQuB,YAVf,mBAU7BA,EAV6B,KAUjBC,EAViB,OAWElB,mBAASN,EAAQyB,aAXnB,mBAW7BA,EAX6B,KAWhBC,EAXgB,OAYIpB,mBAASN,EAAQ2B,MAAMA,OAZ3B,mBAY7BC,EAZ6B,KAYfC,EAZe,OAaVvB,mBAAS,IAbC,mBAa7BqB,EAb6B,KAatBG,GAbsB,QAcExB,mBAASN,EAAQ2B,MAAMI,GAdzB,qBAc7BC,GAd6B,MAchBC,GAdgB,SAeE3B,mBAASN,EAAQ2B,MAAMO,GAfzB,qBAe7BC,GAf6B,MAehBC,GAfgB,SAgBI9B,mBAASN,EAAQ2B,MAAMU,IAhB3B,qBAgB7BC,GAhB6B,MAgBfC,GAhBe,SAiBEjC,mBAAS,YAAIN,EAAQwC,cAjBvB,qBAiB7BA,GAjB6B,MAiBhBC,GAjBgB,SAkBMnC,mBAAS,GAlBf,qBAkB7BoC,GAlB6B,MAkBdC,GAlBc,SAmBUrC,mBAAS,MAnBnB,qBAmB7BsC,GAnB6B,MAmBZC,GAnBY,SAoBEvC,mBAASN,EAAQ8C,aApBnB,qBAoB7BA,GApB6B,MAoBhBC,GApBgB,MAwBpCC,qBAAU,WACRC,IAAMC,IAAI,2DACPC,MAAK,SAACC,GACLP,GAAmBO,EAAIC,KAAKb,gBAE7Bc,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IACHP,qBAAU,WAENlB,GADiB,UAAfP,EACO,CAAEQ,EAAGC,GAAaE,EAAGC,GAAaE,GAAIC,IAEtC,CAAEX,MAAOC,MAEnB,CAACI,GAAaG,GAAaG,GAAcf,EAAYK,IACxD,IAAM8B,GAAmB,SAACC,GACxBA,EAAGC,iBACH,IAAMC,EAAerB,GAAYsB,WAC/B,SAACC,GAAD,OAAQA,EAAGC,MAAQL,EAAGM,OAAOC,QAAQpE,MAEvC0C,GAAY2B,OAAON,EAAc,GACjCpB,GAAe,YAAID,MAgErB,OACE,yBAAKnD,UAAWC,IAAM8E,WACnB7D,EACC,yBAAKlB,UAAWC,IAAM+E,UACpB,yBACEC,IAAK3D,EACL4D,IAAKvE,EAAQwE,cACbnF,UAAWC,IAAMmF,kBAEnB,0BAAM3E,GAAG,WAAW4E,SAtDT,SAACf,GAClBA,EAAGC,iBACHpD,GAAa,GACb,IAAMK,EAAO,CAAEC,GAAIC,EAAQK,IAAKC,EAASJ,GAAIC,GACvCyD,EAAU,2BACX3E,GADW,IAEdW,SACAgB,QACAd,OACAU,aACAE,cACAe,eACAM,iBAGFG,IAAM2B,IAAN,+DAC0D5E,EAAQgE,KAChEW,GAECxB,MAAK,SAACC,GACL5C,GAAa,GACbE,EAAemE,IAAU1E,GAAO,eAEjCmD,OAAM,SAACC,GACN/C,GAAa,GACbgD,QAAQC,IAAIF,GACZ7C,EAAemE,IAAU1E,GAAO,mBA4BYd,UAAWC,IAAMwF,UACzD,wBAAIzF,UAAWC,IAAMyF,iBACnB,kBAAC,IAAD,CAAkBjF,GAAG,WAEvB,2BAAOT,UAAWC,IAAM0F,sBACtB,2BACEpF,KAAK,OACLqF,OAAO,UACPC,SA/EU,SAACvB,GACvBA,EAAGC,iBACHpD,GAAa,GACb,IAAM6C,EAAO,IAAI8B,SACbC,EAAOzB,EAAGM,OAAOoB,MAAM,GAC3BhC,EAAKiC,OAAO,OAAQF,GACpBnC,IAAMsC,KAAK,qDAAsDlC,GAC9DF,MAAK,SAACC,GACLxC,EAASwC,EAAIC,KAAKmC,MAAMJ,MACxB5E,GAAa,MAEd8C,OAAM,SAACC,GACN/C,GAAa,GACbgD,QAAQC,IAAIF,GACZ7C,EAAemE,IAAU1E,GAAO,mBAkExBd,UAAWC,IAAMmG,kBAEnB,uBAAGpG,UAAWC,IAAMoG,oBAClB,kBAAC,IAAD,CAAkB5F,GAAG,aAGzB,wBAAIT,UAAWC,IAAMyF,iBACnB,kBAAC,IAAD,CAAkBjF,GAAG,kBAEvB,yBAAKT,UAAWC,IAAMqG,qBACpB,uBAAGtG,UAAWC,IAAMsG,qBAApB,MACA,2BACEhG,KAAK,OACLiG,MAAO9E,EACPmE,SAAU,SAACvB,GAAD,OAAQ3C,EAAU2C,EAAGM,OAAO4B,QACtCxG,UAAWC,IAAMwG,sBAEnB,uBAAGzG,UAAWC,IAAMsG,qBAApB,MACA,2BACEhG,KAAK,OACLiG,MAAO3E,EACPgE,SAAU,SAACvB,GAAD,OAAQxC,EAAUwC,EAAGM,OAAO4B,QACtCxG,UAAWC,IAAMwG,sBAEnB,uBAAGzG,UAAWC,IAAMsG,qBAApB,OACA,2BACEhG,KAAK,OACLiG,MAAOxE,EACP6D,SAAU,SAACvB,GAAD,OAAQrC,EAAWqC,EAAGM,OAAO4B,QACvCxG,UAAWC,IAAMwG,uBAGrB,wBAAIzG,UAAWC,IAAMyF,iBACnB,kBAAC,IAAD,CAAkBjF,GAAG,sBAEvB,2BACEF,KAAK,OACLiG,MAAOtE,EACP2D,SAAU,SAACvB,GAAD,OAAQnC,EAAYmC,EAAGM,OAAO4B,QACxCxG,UAAWC,IAAMyG,0BAEH,UAAfxE,GACC,oCACE,wBAAIlC,UAAWC,IAAMyF,iBACnB,kBAAC,IAAD,CAAkBjF,GAAG,yBAEvB,2BACEF,KAAK,OACLiG,MAAOpE,EACPyD,SAAU,SAACvB,GAAD,OAAQjC,EAAeiC,EAAGM,OAAO4B,QAC3CxG,UAAWC,IAAMyG,2BAIvB,wBAAI1G,UAAWC,IAAMyF,iBACnB,kBAAC,IAAD,CAAkBjF,GAAG,wBAEvB,wBAAIT,UAAWC,IAAM0G,uBAClBxD,GAAYyD,KAAI,SAAClC,EAAImC,GAAL,OACf,wBAAIC,IAAKD,EAAK7G,UAAWC,IAAM8G,sBAC7B,0BAAM/G,UAAWC,IAAM+G,0BACpBtC,EAAGlD,KAAKV,IAEX,4BACEP,KAAK,SACL0G,QAAS5C,GACT6C,UAASxC,EAAGC,IACZ3E,UAAWC,IAAMkH,4BAEjB,yBACElC,IAAI,sDACJC,IAAI,MACJlF,UAAWC,IAAMmH,wCAM3B,wBAAIpH,UAAWC,IAAMyF,iBACnB,kBAAC,IAAD,CAAkBjF,GAAG,0BAEvB,2BAAOT,UAAWC,IAAMoH,6BACtB,4BACEb,MAAOnD,GACPrD,UAAWC,IAAMqH,0BACjBzB,SAAU,SAACvB,GAAD,OAAQhB,GAAiBgB,EAAGM,OAAO4B,SAE5CjD,IACCA,GAAgBqD,KAAI,SAAClC,EAAImC,GAAL,OAClB,4BAAQC,IAAKpC,EAAGC,IAAK6B,MAAOK,GACzBnC,EAAGlD,KAAKV,QAIjB,4BACEP,KAAK,SACL0G,QAAS,kBACP7D,GAAe,GAAD,mBACTD,IADS,CAEZI,GAAgBF,QAGpBrD,UAAWC,IAAMsH,4BAEjB,kBAAC,IAAD,CAAkB9G,GAAG,8BAGzB,wBAAIT,UAAWC,IAAMyF,iBACnB,kBAAC,IAAD,CAAkBjF,GAAG,mBAGP,UAAfyB,EACC,yBAAKlC,UAAWC,IAAMuH,iBACpB,wBAAIxH,UAAWC,IAAMwH,sBAArB,KACA,2BACElH,KAAK,OACLiG,MAAO7D,GACPkD,SAAU,SAACvB,GAAD,OAAQ1B,GAAe0B,EAAGM,OAAO4B,QAC3CxG,UAAWC,IAAMyH,uBAEnB,wBAAI1H,UAAWC,IAAMwH,sBAArB,KACA,2BACElH,KAAK,OACLiG,MAAO1D,GACP+C,SAAU,SAACvB,GAAD,OAAQvB,GAAeuB,EAAGM,OAAO4B,QAC3CxG,UAAWC,IAAMyH,uBAEnB,wBAAI1H,UAAWC,IAAMwH,sBAArB,MACA,2BACElH,KAAK,OACLiG,MAAOvD,GACP4C,SAAU,SAACvB,GAAD,OAAQpB,GAAgBoB,EAAGM,OAAO4B,QAC5CxG,UAAWC,IAAMyH,wBAIrB,oCACE,2BACEnH,KAAK,OACLiG,MAAOjE,EACPsD,SAAU,SAACvB,GAAD,OAAQ9B,EAAgB8B,EAAGM,OAAO4B,QAC5CxG,UAAWC,IAAM0H,6BAEnB,uBAAG3H,UAAWC,IAAMyF,iBAClB,kBAAC,IAAD,CAAkBjF,GAAG,yBAEvB,2BACEF,KAAK,OACLiG,MAAO/C,GACPoC,SAAU,SAACvB,GAAD,OAAQZ,GAAeY,EAAGM,OAAO4B,QAC3CxG,UAAWC,IAAM2H,+BAKzB,4BACEC,KAAK,WACLtH,KAAK,SACLiB,KAAK,WACLxB,UAAWC,IAAM6H,qBAEjB,kBAAC,IAAD,CAAkBrH,GAAG,wBAEvB,4BACEoH,KAAK,WACLtH,KAAK,SACLiB,KAAK,SACLxB,UAAWC,IAAM6H,oBACjBb,QA1MS,SAAC3C,GAClBA,EAAGC,iBACHpD,GAAa,GACbyC,IAAMmE,OAAN,+DAC0DpH,EAAQgE,MAE/Db,MAAK,SAACC,GACL5C,GAAa,GACbgD,QAAQC,IAAIL,MAEbE,OAAM,SAACC,GACN/C,GAAa,GACbgD,QAAQC,IAAIF,GACZ7C,EAAemE,IAAU1E,GAAO,oBA+L5B,kBAAC,IAAD,CAAkBL,GAAG,oBAEvB,yBAAKwG,QAAS,kBAAM5F,GAAe,KAChCD,GAAe,kBAAC,EAAD,CAAoBrB,eAAgBqB,MAIxD,kBAAC4G,EAAA,EAAD","file":"static/js/19.d6dbba70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"adminUpdateListItemEdit_container__3HLuE\",\"editCard\":\"adminUpdateListItemEdit_editCard__21bL0\",\"editCard__image\":\"adminUpdateListItemEdit_editCard__image__3bGof\",\"editForm\":\"adminUpdateListItemEdit_editForm__b5-qw\",\"editCard__title\":\"adminUpdateListItemEdit_editCard__title__3FVGH\",\"editCard__titleName\":\"adminUpdateListItemEdit_editCard__titleName__1ZB1V\",\"editCard__titleLang\":\"adminUpdateListItemEdit_editCard__titleLang__3A86I\",\"editForm__inputLang\":\"adminUpdateListItemEdit_editForm__inputLang__3aBBj\",\"editCard__photoLabel\":\"adminUpdateListItemEdit_editCard__photoLabel__3AqSD\",\"editForm__photo\":\"adminUpdateListItemEdit_editForm__photo__4go7p\",\"editForm__photoBtn\":\"adminUpdateListItemEdit_editForm__photoBtn__1ruwQ\",\"editForm__inputCategory\":\"adminUpdateListItemEdit_editForm__inputCategory__2OUAK\",\"editForm__ingredientsSelect\":\"adminUpdateListItemEdit_editForm__ingredientsSelect__3EQkl\",\"editForm__ingredient\":\"adminUpdateListItemEdit_editForm__ingredient__158s2\",\"editForm__ingredientName\":\"adminUpdateListItemEdit_editForm__ingredientName__2-5zy\",\"editForm__ingredientsList\":\"adminUpdateListItemEdit_editForm__ingredientsList__1zUdX\",\"editForm__addIngredientBtn\":\"adminUpdateListItemEdit_editForm__addIngredientBtn__1uTV_\",\"editForm__ingredientBtnDel\":\"adminUpdateListItemEdit_editForm__ingredientBtnDel__3l5GB\",\"editForm__ingredientBtnDelImage\":\"adminUpdateListItemEdit_editForm__ingredientBtnDelImage__2hey5\",\"editForm__price\":\"adminUpdateListItemEdit_editForm__price__3l36G\",\"editForm__priceInput\":\"adminUpdateListItemEdit_editForm__priceInput__2BURD\",\"editForm__inputSinglePrice\":\"adminUpdateListItemEdit_editForm__inputSinglePrice__DZQgv\",\"editForm__priceTitle\":\"adminUpdateListItemEdit_editForm__priceTitle__7VoSo\",\"editForm__inputDescription\":\"adminUpdateListItemEdit_editForm__inputDescription__3l4iF\",\"editForm__btnSubmit\":\"adminUpdateListItemEdit_editForm__btnSubmit__1COXz\",\"confirmation\":\"adminUpdateListItemEdit_confirmation__1Kgwu\",\"confirmation__form\":\"adminUpdateListItemEdit_confirmation__form__1Ci1y\",\"confirmation__formText\":\"adminUpdateListItemEdit_confirmation__formText__3uwty\",\"confirmation__formBtnLink\":\"adminUpdateListItemEdit_confirmation__formBtnLink__1RKal\",\"confirmation__formBtn\":\"adminUpdateListItemEdit_confirmation__formBtn__1R00J\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\nconst ConfirmationWindow = ({ confirmMassage }) => {\r\n  return (\r\n    <div className={style.confirmation}>\r\n      <div className={style.confirmation__form}>\r\n        <p className={style.confirmation__formText}>{confirmMassage}</p>\r\n        <Link\r\n          to=\"/admin/update-product\"\r\n          className={style.confirmation__formBtnLink}\r\n        >\r\n          <button type=\"button\" className={style.confirmation__formBtn}>\r\n            <FormattedMessage id=\"return back\" />\r\n          </button>\r\n        </Link>\r\n        {/* <button type=\"button\" className={style.confirmation__formBtn}>\r\n          <FormattedMessage id=\"continue editing\" />\r\n        </button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationWindow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Axios from \"axios\";\r\n\r\nimport languages from \"../../languages\";\r\n\r\nconst AdminUpdateListItemEdit = () => {\r\n  let location = useLocation();\r\n  const product = location.state.product;\r\n  const local = useSelector((state) => state.local.lang);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [confirmEdit, setConfirmEdit] = useState(false);\r\n  const [images, setImage] = useState(product.images);\r\n  const [nameRu, setNameRu] = useState(product.name.ru);\r\n  const [nameEn, setNameEn] = useState(product.name.en);\r\n  const [nameUkr, setNameUkr] = useState(product.name.ukr);\r\n  const [categories, setCategory] = useState(product.categories);\r\n  const [subcategory, setSubcategory] = useState(product.subcategory);\r\n  const [priceNoPizza, setPriceNoPizza] = useState(product.price.price);\r\n  const [price, setPrice] = useState({});\r\n  const [pricePizzaM, setPricePizzaM] = useState(product.price.M);\r\n  const [pricePizzaL, setPricePizzaL] = useState(product.price.L);\r\n  const [pricePizzaXL, setPricePizzaXL] = useState(product.price.XL);\r\n  const [ingredients, setIngredients] = useState([...product.ingredients]);\r\n  const [newIngredient, setNewIngredient] = useState(0);\r\n  const [ingredientsList, setIngredientsList] = useState(null);\r\n  const [description, setDescription] = useState(product.description);\r\n  // console.log(product);\r\n  // console.log(price);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://evening-caverns-34846.herokuapp.com/ingredients\")\r\n      .then((res) => {\r\n        setIngredientsList(res.data.ingredients);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (categories === \"pizza\") {\r\n      setPrice({ M: pricePizzaM, L: pricePizzaL, XL: pricePizzaXL });\r\n    } else {\r\n      setPrice({ price: priceNoPizza });\r\n    }\r\n  }, [pricePizzaM, pricePizzaL, pricePizzaXL, categories, priceNoPizza]);\r\n  const deleteIngredient = (ev) => {\r\n    ev.preventDefault();\r\n    const delElemIndex = ingredients.findIndex(\r\n      (el) => el._id === ev.target.dataset.id\r\n    );\r\n    ingredients.splice(delElemIndex, 1);\r\n    setIngredients([...ingredients]);\r\n  };\r\n  const handleImageFile = (ev) => {\r\n    ev.preventDefault();\r\n    setIsLoading(false);\r\n    const data = new FormData();\r\n    let file = ev.target.files[0];\r\n    data.append(\"file\", file);\r\n    Axios.post(\"https://evening-caverns-34846.herokuapp.com/images\", data)\r\n      .then((res) => {\r\n        setImage(res.data.image.file);\r\n        setIsLoading(true);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(true);\r\n        console.log(err);\r\n        setConfirmEdit(languages[local][\"edit.error\"]);\r\n      });\r\n  };\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n    setIsLoading(false);\r\n    const name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    const editedItem = {\r\n      ...product,\r\n      images,\r\n      price,\r\n      name,\r\n      categories,\r\n      subcategory,\r\n      ingredients,\r\n      description,\r\n    };\r\n\r\n    Axios.put(\r\n      `https://evening-caverns-34846.herokuapp.com/products/${product._id}`,\r\n      editedItem\r\n    )\r\n      .then((res) => {\r\n        setIsLoading(true);\r\n        setConfirmEdit(languages[local][\"edit.ok\"]);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(true);\r\n        console.log(err);\r\n        setConfirmEdit(languages[local][\"edit.error\"]);\r\n      });\r\n  };\r\n  const deleteItem = (ev) => {\r\n    ev.preventDefault();\r\n    setIsLoading(false);\r\n    Axios.delete(\r\n      `https://evening-caverns-34846.herokuapp.com/products/${product._id}`\r\n    )\r\n      .then((res) => {\r\n        setIsLoading(true);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(true);\r\n        console.log(err);\r\n        setConfirmEdit(languages[local][\"edit.error\"]);\r\n      });\r\n  };\r\n  return (\r\n    <div className={style.container}>\r\n      {isLoading ? (\r\n        <div className={style.editCard}>\r\n          <img\r\n            src={images}\r\n            alt={product.closeUpImages}\r\n            className={style.editCard__image}\r\n          />\r\n          <form id=\"editForm\" onSubmit={handleForm} className={style.editForm}>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"photo\" />\r\n            </h4>\r\n            <label className={style.editCard__photoLabel}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageFile}\r\n                className={style.editForm__photo}\r\n              />\r\n              <p className={style.editForm__photoBtn}>\r\n                <FormattedMessage id=\"upload\" />\r\n              </p>\r\n            </label>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.name\" />\r\n            </h4>\r\n            <div className={style.editCard__titleName}>\r\n              <p className={style.editCard__titleLang}>ru</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameRu}\r\n                onChange={(ev) => setNameRu(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n              />\r\n              <p className={style.editCard__titleLang}>en</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameEn}\r\n                onChange={(ev) => setNameEn(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n              />\r\n              <p className={style.editCard__titleLang}>ukr</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameUkr}\r\n                onChange={(ev) => setNameUkr(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n              />\r\n            </div>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.category\" />\r\n            </h4>\r\n            <input\r\n              type=\"text\"\r\n              value={categories}\r\n              onChange={(ev) => setCategory(ev.target.value)}\r\n              className={style.editForm__inputCategory}\r\n            />\r\n            {categories === \"pizza\" && (\r\n              <>\r\n                <h4 className={style.editCard__title}>\r\n                  <FormattedMessage id=\"product.subcategory\" />\r\n                </h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={subcategory}\r\n                  onChange={(ev) => setSubcategory(ev.target.value)}\r\n                  className={style.editForm__inputCategory}\r\n                />\r\n              </>\r\n            )}\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"update.composition\" />\r\n            </h4>\r\n            <ul className={style.editForm__ingredients}>\r\n              {ingredients.map((el, idx) => (\r\n                <li key={idx} className={style.editForm__ingredient}>\r\n                  <span className={style.editForm__ingredientName}>\r\n                    {el.name[local]}\r\n                  </span>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={deleteIngredient}\r\n                    data-id={el._id}\r\n                    className={style.editForm__ingredientBtnDel}\r\n                  >\r\n                    <img\r\n                      src=\"/static/media/remove_order_item_button.56fe91b0.svg\"\r\n                      alt=\"del\"\r\n                      className={style.editForm__ingredientBtnDelImage}\r\n                    ></img>\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"update.addIngredient\" />\r\n            </h4>\r\n            <label className={style.editForm__ingredientsSelect}>\r\n              <select\r\n                value={newIngredient}\r\n                className={style.editForm__ingredientsList}\r\n                onChange={(ev) => setNewIngredient(ev.target.value)}\r\n              >\r\n                {ingredientsList &&\r\n                  ingredientsList.map((el, idx) => (\r\n                    <option key={el._id} value={idx}>\r\n                      {el.name[local]}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  setIngredients([\r\n                    ...ingredients,\r\n                    ingredientsList[newIngredient],\r\n                  ])\r\n                }\r\n                className={style.editForm__addIngredientBtn}\r\n              >\r\n                <FormattedMessage id=\"update.addToComposition\" />\r\n              </button>\r\n            </label>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.price\" />\r\n            </h4>\r\n\r\n            {categories === \"pizza\" ? (\r\n              <div className={style.editForm__price}>\r\n                <h4 className={style.editForm__priceTitle}>M</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaM}\r\n                  onChange={(ev) => setPricePizzaM(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>L</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaL}\r\n                  onChange={(ev) => setPricePizzaL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>XL</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaXL}\r\n                  onChange={(ev) => setPricePizzaXL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={priceNoPizza}\r\n                  onChange={(ev) => setPriceNoPizza(ev.target.value)}\r\n                  className={style.editForm__inputSinglePrice}\r\n                />\r\n                <p className={style.editCard__title}>\r\n                  <FormattedMessage id=\"product.description\" />\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={description}\r\n                  onChange={(ev) => setDescription(ev.target.value)}\r\n                  className={style.editForm__inputDescription}\r\n                />\r\n              </>\r\n            )}\r\n          </form>\r\n          <button\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            name=\"complete\"\r\n            className={style.editForm__btnSubmit}\r\n          >\r\n            <FormattedMessage id=\"update.saveChanges\" />\r\n          </button>\r\n          <button\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            name=\"delete\"\r\n            className={style.editForm__btnSubmit}\r\n            onClick={deleteItem}\r\n          >\r\n            <FormattedMessage id=\"delete product\" />\r\n          </button>\r\n          <div onClick={() => setConfirmEdit(false)}>\r\n            {confirmEdit && <ConfirmationWindow confirmMassage={confirmEdit} />}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItemEdit;\r\n"],"sourceRoot":""}