{"version":3,"sources":["redux/product/productSelectors.js","services/api.js","redux/product/productOperations.js","components/AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/confirmationWindow.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/addNewIngredient.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ingredientSelect.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ConfirmationWindow.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/AddNewIngredient.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/IngredientSelect.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemEdit.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","source","axios","CancelToken","baseURL","getAllProducts","get","getProductsByCategory","category","cancelToken","token","getProductById","id","getAllIngredients","a","createNewIngredients","post","postNewProduct","product","updateProductById","productId","newProduct","put","deleteProductById","delete","postImage","file","data","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","fetchProducts","dispatch","productActions","productsRequest","then","productsSuccess","catch","error","productsError","fetchProductsByCategory","byCategoryRequest","byCategorySuccess","byCategoryError","fetchProductById","byIdRequest","byIdSuccess","byIdError","sendFile","sendFileRequest","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","sendProductSuccess","sendProductError","getAllIngredientsRequest","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","updateProductRequest","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredientsSuccess","createNewIngredientsError","module","exports","ConfirmationWindow","massage","errorMassage","useSelector","productSelectors","className","style","confirmation","data-confirm","confirmation__form","confirmation__formText","to","confirmation__formBtnLink","type","confirmation__formBtn","props","name","AddNewIngredient","useDispatch","useState","isShow","setIsShow","newIngredientRu","setCreateNewIngredientRu","newIngredientUkr","setCreateNewIngredientUkr","newIngredientEn","setCreateNewIngredientEn","editForm__newIngredient","editCard__title","editCard__titleName","editCard__titleLang","value","onChange","ev","target","editForm__inputLang","onClick","ru","en","ukr","productOperations","editForm__addNewIngredientBtn","IngredientSelect","productForEdit","local","lang","ingredientsList","ingredientsSelectList","map","el","idx","label","setNewIngredient","setIngredients","useEffect","deleteIngredient","delElemIndex","findIndex","_id","currentTarget","dataset","newIngredientsList","splice","editForm__ingredients","key","editForm__ingredient","editForm__ingredientName","data-id","editForm__ingredientBtnDel","width","height","viewBox","fill","editForm__ingredientBtnDelImage","d","editForm__ingredientsSelect","options","editForm__ingredientsList","some","editForm__addIngredientBtn","AdminUpdateListItemEdit","location","useLocation","JSON","parse","sessionStorage","getItem","isLoading","images","nameRu","setNameRu","nameEn","setNameEn","nameUkr","setNameUkr","subcategory","setSubcategory","confirmEdit","setConfirmEdit","price","priceNoPizza","setPriceNoPizza","setPrice","M","pricePizzaM","setPricePizzaM","L","pricePizzaL","setPricePizzaL","XL","pricePizzaXL","setPricePizzaXL","description","setDescription","categories","collector","editedItem","window","addEventListener","setItem","stringify","container","Spinner","editCard","src","alt","closeUpImages","editCard__image","onSubmit","preventDefault","editForm","editCard__photoLabel","accept","files","editForm__photo","editForm__photoBtn","editForm__price","editForm__priceTitle","editForm__priceInput","editForm__inputSinglePrice","editForm__inputDescription","disabled","form","editForm__btnSubmit","confirm"],"mappings":"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","file":"static/js/7.e6fa7c7e.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"adminUpdateListItemEdit_container__3HLuE\",\"editCard\":\"adminUpdateListItemEdit_editCard__21bL0\",\"editCard__image\":\"adminUpdateListItemEdit_editCard__image__3bGof\",\"editForm\":\"adminUpdateListItemEdit_editForm__b5-qw\",\"editCard__title\":\"adminUpdateListItemEdit_editCard__title__3FVGH\",\"editCard__titleName\":\"adminUpdateListItemEdit_editCard__titleName__1ZB1V\",\"editCard__titleLang\":\"adminUpdateListItemEdit_editCard__titleLang__3A86I\",\"editForm__inputLang\":\"adminUpdateListItemEdit_editForm__inputLang__3aBBj\",\"editCard__photoLabel\":\"adminUpdateListItemEdit_editCard__photoLabel__3AqSD\",\"editForm__photo\":\"adminUpdateListItemEdit_editForm__photo__4go7p\",\"editForm__photoBtn\":\"adminUpdateListItemEdit_editForm__photoBtn__1ruwQ\",\"editForm__inputCategory\":\"adminUpdateListItemEdit_editForm__inputCategory__2OUAK\",\"editForm__price\":\"adminUpdateListItemEdit_editForm__price__3l36G\",\"editForm__priceInput\":\"adminUpdateListItemEdit_editForm__priceInput__2BURD\",\"editForm__inputSinglePrice\":\"adminUpdateListItemEdit_editForm__inputSinglePrice__DZQgv\",\"editForm__priceTitle\":\"adminUpdateListItemEdit_editForm__priceTitle__7VoSo\",\"editForm__inputDescription\":\"adminUpdateListItemEdit_editForm__inputDescription__3l4iF\",\"editForm__btnSubmit\":\"adminUpdateListItemEdit_editForm__btnSubmit__1COXz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmation\":\"confirmationWindow_confirmation__pKnzY\",\"confirmation__form\":\"confirmationWindow_confirmation__form__pR0yr\",\"confirmation__formText\":\"confirmationWindow_confirmation__formText__1Rc3f\",\"confirmation__formBtnLink\":\"confirmationWindow_confirmation__formBtnLink__3We4i\",\"confirmation__formBtn\":\"confirmationWindow_confirmation__formBtn__1H50C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editForm__newIngredient\":\"addNewIngredient_editForm__newIngredient__3LTfv\",\"editCard__title\":\"addNewIngredient_editCard__title__2k1zu\",\"editForm__inputNewIngredient\":\"addNewIngredient_editForm__inputNewIngredient__1ZifC\",\"editForm__addNewIngredientBtn\":\"addNewIngredient_editForm__addNewIngredientBtn__lrMth\",\"editCard__titleName\":\"addNewIngredient_editCard__titleName__1MXsJ\",\"editForm__inputLang\":\"addNewIngredient_editForm__inputLang__39CUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../../stylesheet/vars.css'\",\"lightColor\":\"#FFF\",\"accentColor\":\"#FF6C00\",\"primaryColor\":\"#272727\",\"primaryTextFontSize\":\"0.875 rem\",\"editCard__title\":\"ingredientSelect_editCard__title__340t2\",\"editForm__ingredientsSelect\":\"ingredientSelect_editForm__ingredientsSelect__1_j7x\",\"editForm__ingredients\":\"ingredientSelect_editForm__ingredients__5jnV7\",\"editForm__ingredient\":\"ingredientSelect_editForm__ingredient__1094b\",\"editForm__ingredientName\":\"ingredientSelect_editForm__ingredientName__a3kOJ\",\"editForm__ingredientsList\":\"ingredientSelect_editForm__ingredientsList__2wu2V\",\"editForm__addIngredientBtn\":\"ingredientSelect_editForm__addIngredientBtn__2jLde\",\"editForm__ingredientBtnDel\":\"ingredientSelect_editForm__ingredientBtnDel__ckeY9\",\"editForm__ingredientBtnDelImage\":\"ingredientSelect_editForm__ingredientBtnDelImage__1X9RN\"};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport productSelectors from \"../../../redux/product/productSelectors\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport style from \"./confirmationWindow.module.css\";\r\n\r\nconst ConfirmationWindow = ({ massage }) => {\r\n  const errorMassage = useSelector(productSelectors.getError);\r\n  if (errorMassage) {\r\n    massage = errorMassage;\r\n  }\r\n  return (\r\n    <div className={style.confirmation} data-confirm=\"continue\">\r\n      <div className={style.confirmation__form}>\r\n        <p className={style.confirmation__formText}>{massage}</p>\r\n        <Link\r\n          to=\"/admin/update-product\"\r\n          className={style.confirmation__formBtnLink}\r\n        >\r\n          <button type=\"button\" className={style.confirmation__formBtn}>\r\n            <FormattedMessage id=\"return back\" />\r\n          </button>\r\n        </Link>\r\n        {massage.props.id === \"deleted product\" || (\r\n          <button\r\n            type=\"button\"\r\n            className={style.confirmation__formBtn}\r\n            name=\"continue\"\r\n          >\r\n            <FormattedMessage id=\"continue editing\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationWindow;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./addNewIngredient.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport productOperations from \"../../../redux/product/productOperations\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\n\r\nconst AddNewIngredient = () => {\r\n  const dispatch = useDispatch();\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [newIngredientRu, setCreateNewIngredientRu] = useState(\"\");\r\n  const [newIngredientUkr, setCreateNewIngredientUkr] = useState(\"\");\r\n  const [newIngredientEn, setCreateNewIngredientEn] = useState(\"\");\r\n  const createIngredient = () => {\r\n    const newIngredient = {\r\n      name: {\r\n        ru: newIngredientRu,\r\n        en: newIngredientEn,\r\n        ukr: newIngredientUkr,\r\n      },\r\n    };\r\n    dispatch(productOperations.createNewIngredient(newIngredient));\r\n    setIsShow(true);\r\n  };\r\n  return (\r\n    <>\r\n      <label className={style.editForm__newIngredient}>\r\n        <h4 className={style.editCard__title}>\r\n          <FormattedMessage id=\"update.createNewIngredient\" />\r\n        </h4>\r\n        <div className={style.editCard__titleName}>\r\n          <p className={style.editCard__titleLang}>ru</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientRu}\r\n            onChange={(ev) => setCreateNewIngredientRu(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n          />\r\n          <p className={style.editCard__titleLang}>en</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientEn}\r\n            onChange={(ev) => setCreateNewIngredientEn(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n          />\r\n          <p className={style.editCard__titleLang}>ukr</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientUkr}\r\n            onChange={(ev) => setCreateNewIngredientUkr(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={createIngredient}\r\n          className={style.editForm__addNewIngredientBtn}\r\n        >\r\n          <FormattedMessage id=\"update.addNewIngredient\" />\r\n        </button>\r\n      </label>\r\n      <div\r\n        onClick={(ev) => {\r\n          setIsShow(false);\r\n          ev.target.name =\r\n            \"continue\" && dispatch(productOperations.getIngredients());\r\n        }}\r\n      >\r\n        {isShow && (\r\n          <ConfirmationWindow\r\n            massage={<FormattedMessage id=\"update.ingredientAdded\" />}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewIngredient;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport productSelectors from \"../../../redux/product/productSelectors\";\r\nimport productActions from \"../../../redux/product/productActions.js\";\r\nimport style from \"./ingredientSelect.module.css\";\r\n\r\nconst IngredientSelect = ({ productForEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const ingredientsList = useSelector(productSelectors.getIngredients);\r\n  const ingredientsSelectList = ingredientsList.map((el, idx) => ({\r\n    label: el.name[local],\r\n    value: idx,\r\n  }));\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState(productForEdit.ingredients);\r\n\r\n  useEffect(() => {\r\n    dispatch((dispatch) => dispatch(productActions.addIngredient(ingredients)));\r\n  }, [ingredients]); // eslint-disable-line\r\n  useEffect(() => {\r\n    setNewIngredient(ingredientsSelectList[0]);\r\n  }, [ingredientsList]); // eslint-disable-line\r\n\r\n  const addIngredient = () => {\r\n    ingredients.some(\r\n      (el) => ingredientsList[newIngredient.value]._id === el._id\r\n    ) ||\r\n      setIngredients((ingredients) => [\r\n        ...ingredients,\r\n        ingredientsList[newIngredient.value],\r\n      ]);\r\n  };\r\n  const deleteIngredient = (ev) => {\r\n    const delElemIndex = ingredients.findIndex(\r\n      (el) => el._id === ev.currentTarget.dataset.id\r\n    );\r\n    const newIngredientsList = [...ingredients];\r\n    newIngredientsList.splice(delElemIndex, 1);\r\n    setIngredients(newIngredientsList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={style.editCard__title}>\r\n        <FormattedMessage id=\"update.composition\" />\r\n      </h4>\r\n      <ul className={style.editForm__ingredients}>\r\n        {ingredients.map((el, idx) => (\r\n          <li key={el._id} className={style.editForm__ingredient}>\r\n            <span className={style.editForm__ingredientName}>\r\n              {el.name[local]}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={deleteIngredient}\r\n              data-id={el._id}\r\n              className={style.editForm__ingredientBtnDel}\r\n            >\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 12 12\"\r\n                fill=\"none\"\r\n                className={style.editForm__ingredientBtnDelImage}\r\n              >\r\n                <path\r\n                  d=\"M11.25 1.8075L10.1925 0.75L6 4.9425L1.8075 0.75L0.75 1.8075L4.9425 6L0.75 10.1925L1.8075 11.25L6 7.0575L10.1925 11.25L11.25 10.1925L7.0575 6L11.25 1.8075Z\"\r\n                  fill=\"#ffff\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <label className={style.editForm__ingredientsSelect}>\r\n        <Select\r\n          options={ingredientsSelectList}\r\n          value={newIngredient}\r\n          onChange={(ev) => setNewIngredient(ev)}\r\n          className={style.editForm__ingredientsList}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={addIngredient}\r\n          className={style.editForm__addIngredientBtn}\r\n        >\r\n          <FormattedMessage id=\"update.addToComposition\" />\r\n        </button>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientSelect;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ConfirmationWindow from \"./AdminUpdateListItemElems/ConfirmationWindow\";\r\nimport AddNewIngredient from \"./AdminUpdateListItemElems/AddNewIngredient\";\r\nimport IngredientSelect from \"./AdminUpdateListItemElems/IngredientSelect\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\nimport Spinner from \"../Spinner\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\n// import languages from \"../../languages\";\r\n\r\nconst AdminUpdateListItemEdit = () => {\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  let productForEdit = null;\r\n  if (location.state) {\r\n    productForEdit = location.state.product;\r\n  } else {\r\n    productForEdit = JSON.parse(sessionStorage.getItem(\"editedItem\"));\r\n  }\r\n\r\n  const ingredients = useSelector(productSelectors.addIngredient);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n  const images = useSelector(productSelectors.fileLink);\r\n\r\n  const [nameRu, setNameRu] = useState(productForEdit.name.ru);\r\n  const [nameEn, setNameEn] = useState(productForEdit.name.en);\r\n  const [nameUkr, setNameUkr] = useState(productForEdit.name.ukr);\r\n  const [subcategory, setSubcategory] = useState({\r\n    value: productForEdit.subcategory,\r\n    label: productForEdit.subcategory,\r\n  });\r\n  const [confirmEdit, setConfirmEdit] = useState(\"\");\r\n  const [priceNoPizza, setPriceNoPizza] = useState(productForEdit.price.price);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [pricePizzaM, setPricePizzaM] = useState(productForEdit.price.M);\r\n  const [pricePizzaL, setPricePizzaL] = useState(productForEdit.price.L);\r\n  const [pricePizzaXL, setPricePizzaXL] = useState(productForEdit.price.XL);\r\n  const [description, setDescription] = useState(productForEdit.description);\r\n\r\n  const subcategoryList = [\r\n    { label: \"classic\", value: \"classic\" },\r\n    { label: \"branded\", value: \"branded\" },\r\n    { label: \"premium\", value: \"premium\" },\r\n  ];\r\n\r\n  const postImage = (file) => dispatch(productOperations.sendFile(file));\r\n  const updateProduct = (id, editedItem) =>\r\n    dispatch(productOperations.updateProduct(id, editedItem));\r\n\r\n  const deleteProduct = () =>\r\n    dispatch(productOperations.deleteProduct(productForEdit._id));\r\n\r\n  useEffect(() => {\r\n    if (productForEdit.categories === \"pizza\") {\r\n      setPrice({ M: pricePizzaM, L: pricePizzaL, XL: pricePizzaXL });\r\n    } else {\r\n      setPrice({ price: priceNoPizza });\r\n    }\r\n  }, [pricePizzaM, pricePizzaL, pricePizzaXL, priceNoPizza]); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    dispatch(productOperations.getIngredients());\r\n  }, []);\r\n  const collector = () => {\r\n    const name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    if (!price) {\r\n      if (productForEdit.categories === \"pizza\") {\r\n        setPrice({ M: \"\", L: \"\", XL: \"\" });\r\n      } else {\r\n        setPrice({ price: \"\" });\r\n      }\r\n    }\r\n    const editedItem = {\r\n      price,\r\n      name,\r\n      ingredients,\r\n    };\r\n    // editedItem.ingredients=ingredientsInProduct\r\n    editedItem.images = images || productForEdit.images;\r\n    editedItem.name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    editedItem.categories = productForEdit.categories;\r\n    editedItem.subcategory = subcategory.value;\r\n    if (productForEdit.categories !== \"pizza\") {\r\n      editedItem.description = description;\r\n    }\r\n    return editedItem;\r\n  };\r\n\r\n  const handleImageFile = (ev) => {\r\n    ev.preventDefault();\r\n    ev.target.files[0] && postImage(ev.target.files[0]);\r\n  };\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n    const editedItem = collector();\r\n    updateProduct(productForEdit._id, editedItem);\r\n    setConfirmEdit(\"edit\");\r\n  };\r\n\r\n  const deleteItem = (ev) => {\r\n    ev.preventDefault();\r\n    deleteProduct();\r\n    setConfirmEdit(\"del\");\r\n  };\r\n  window.addEventListener(\"unload\", () => {\r\n    const editedItem = { _id: productForEdit._id, ...collector() };\r\n    sessionStorage.setItem(\"editedItem\", JSON.stringify(editedItem));\r\n  });\r\n  const handleConfirmWindow = (ev) => {\r\n    confirmEdit !== \"del\" &&\r\n      ev.target.dataset.confirm === \"continue\" &&\r\n      setConfirmEdit(\"\");\r\n    ev.target.name === \"continue\" && setConfirmEdit(\"\");\r\n  };\r\n  return (\r\n    <div className={style.container}>\r\n      {isLoading && <Spinner />}\r\n      <>\r\n        <div className={style.editCard}>\r\n          <img\r\n            src={images || productForEdit.images}\r\n            alt={productForEdit.closeUpImages}\r\n            className={style.editCard__image}\r\n          />\r\n          <form id=\"editForm\" onSubmit={handleForm} className={style.editForm}>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"photo\" />\r\n            </h4>\r\n            <label className={style.editCard__photoLabel}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageFile}\r\n                className={style.editForm__photo}\r\n              />\r\n              <p className={style.editForm__photoBtn}>\r\n                <FormattedMessage id=\"upload\" />\r\n              </p>\r\n            </label>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.name\" />\r\n            </h4>\r\n            <div className={style.editCard__titleName}>\r\n              <p className={style.editCard__titleLang}>ru</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameRu}\r\n                onChange={(ev) => setNameRu(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n              />\r\n              <p className={style.editCard__titleLang}>en</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameEn}\r\n                onChange={(ev) => setNameEn(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n              />\r\n              <p className={style.editCard__titleLang}>ukr</p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameUkr}\r\n                onChange={(ev) => setNameUkr(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n              />\r\n            </div>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.category\" />\r\n            </h4>\r\n            <p>{productForEdit.categories}</p>\r\n            {productForEdit.categories === \"pizza\" && (\r\n              <>\r\n                <h4 className={style.editCard__title}>\r\n                  <FormattedMessage id=\"product.subcategory\" />\r\n                </h4>\r\n                <Select\r\n                  options={subcategoryList}\r\n                  value={subcategory}\r\n                  onChange={(ev) => setSubcategory(ev)}\r\n                />\r\n                <IngredientSelect productForEdit={productForEdit} />\r\n                <AddNewIngredient />\r\n              </>\r\n            )}\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.price\" />\r\n            </h4>\r\n            {productForEdit.categories === \"pizza\" ? (\r\n              <div className={style.editForm__price}>\r\n                <h4 className={style.editForm__priceTitle}>M</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaM}\r\n                  onChange={(ev) => setPricePizzaM(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>L</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaL}\r\n                  onChange={(ev) => setPricePizzaL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>XL</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaXL}\r\n                  onChange={(ev) => setPricePizzaXL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  type=\"number\"\r\n                  value={priceNoPizza}\r\n                  onChange={(ev) => setPriceNoPizza(ev.target.value)}\r\n                  className={style.editForm__inputSinglePrice}\r\n                />\r\n                <p className={style.editCard__title}>\r\n                  <FormattedMessage id=\"volume weight\" />\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={description}\r\n                  onChange={(ev) => setDescription(ev.target.value)}\r\n                  className={style.editForm__inputDescription}\r\n                />\r\n              </>\r\n            )}\r\n          </form>\r\n          <button\r\n            disabled={isLoading}\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            // name=\"complete\"\r\n            className={style.editForm__btnSubmit}\r\n          >\r\n            <FormattedMessage id=\"update.saveChanges\" />\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            // name=\"delete\"\r\n            className={style.editForm__btnSubmit}\r\n            onClick={deleteItem}\r\n          >\r\n            <FormattedMessage id=\"delete product\" />\r\n          </button>\r\n        </div>\r\n        <div onClick={handleConfirmWindow}>\r\n          {!isLoading && confirmEdit && (\r\n            <ConfirmationWindow\r\n              massage={\r\n                confirmEdit === \"del\" ? (\r\n                  <FormattedMessage id=\"deleted product\" />\r\n                ) : (\r\n                  <FormattedMessage id=\"product updated\" />\r\n                )\r\n              }\r\n            />\r\n          )}\r\n        </div>\r\n      </>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItemEdit;\r\n"],"sourceRoot":""}