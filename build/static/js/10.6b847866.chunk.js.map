{"version":3,"sources":["services/api.js","components/AdminStocksEditor/AdminStocksEditor.module.css","components/AdminStocksList/AdminStockListItem/AdminStocksListItem.module.css","components/AdminStocksList/AdminStocksList.module.css","pages/AdminStocksPage/AdminStocksPage.module.css","redux/stocks/stocksOperations.js","redux/stocks/stocksSelector.js","components/AdminStocksEditor/utils.js","components/AdminStocksEditor/AdminStocksEditor.js","components/AdminStocksList/AdminStockListItem/AdminStocksListItem.js","components/AdminStocksList/AdminStocksList.js","pages/AdminStocksPage/AdminStocksPage.js"],"names":["source","axios","CancelToken","baseURL","getAllProducts","get","getProductsByCategory","category","cancelToken","token","getProductById","id","getAllIngredients","a","postNewProduct","product","post","updateProductById","productId","newProduct","put","deleteProductById","delete","postImage","file","data","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","fetchStocks","dispatch","stocksActions","getStocksRequest","then","getStocksSuccess","promo","catch","error","getStocksError","sendStock","sendStockRequest","sendStockSuccess","newPromo","sendStockError","updateStock","updateStockRequest","updateStockSuccess","updatedPromo","updateStockError","deleteStock","deleteStockRequest","deleteStockSuccess","deletedPromo","_id","deleteStockError","sendFile","sendFileRequest","sendFileSuccess","image","sendFileError","getStockById","getStockByIdRequest","getStockByIdSuccess","getStockByIdError","state","stocks","items","fileLink","isLoading","item","getFileName","document","getElementById","value","replace","split","pop","innerHTML","mapDispatchToProps","onSubmitFile","stocksOperations","onSubmit","onCancel","cancelInput","onUpdate","connect","linkFile","stocksSelector","editStock","useState","showNotification","setShow","useEffect","setTimeout","useSelector","local","lang","stocksFile","setStockFile","stocksTitleEn","setStockTitleEn","stocksTitleRu","setStockTitleRu","stocksTitleUkr","setStockTitleUkr","stocksDescriptionEn","setStocksDescriptionEn","stocksDescriptionRu","setStocksDescriptionRu","stocksDescriptionUkr","setStocksDescriptionUkr","message","setMessage","messages","success","updated","successFile","setStock","images","title","en","description","ru","ukr","handleSubmit","e","preventDefault","linkImage","target","name","reset","Notification","confirm","Spinner","className","styles","form","fileUploadGreen","fileUpload","uploadLabel","type","uploadInput","onChange","stocksItem","files","uploadSpan","fileName","placeholder","formInput","onClick","formButton","onRemove","stocksOperation","card","src","alt","cardImg","buttonContainer","button","window","scrollTo","handleClickOnChangeButton","onFetchStocks","elements","cardList","map","key","AdminStocksPage","container"],"mappings":"6pBAGMA,EADcC,IAAMC,YACCF,SAErBG,EAAU,8CAGVC,EAAiB,WACrB,OAAOH,IAAMI,IAAI,cAGbC,EAAwB,SAACC,GAC7B,OAAON,IAAMI,IAAN,+BAAkCE,EAAlC,KAA+C,CACpDC,YAAaR,EAAOS,SAIlBC,EAAiB,SAACC,GACtB,OAAOV,IAAMI,IAAN,oBAAuBM,KAG1BC,EAAiB,uCAAG,sBAAAC,EAAA,+EACjBZ,IAAMI,IAAN,UAAaF,EAAb,kBADiB,2CAAH,qDAIjBW,EAAiB,SAACC,GACtB,OAAOd,IAAMe,KAAN,UAAcb,EAAd,aAAkCY,IAGrCE,EAAoB,SAACC,EAAWC,GACpC,OAAOlB,IAAMmB,IAAN,oBAAuBF,GAAaC,IAGvCE,EAAoB,SAACH,GACzB,OAAOjB,IAAMqB,OAAN,oBAA0BJ,KAM7BK,EAAS,uCAAG,WAAOC,GAAP,eAAAX,EAAA,6DACVY,EAAO,IAAIC,UACZC,OAAO,OAAQH,GAFJ,kBAITvB,IAAMe,KAAN,UAAcb,EAAd,WAAgCsB,IAJvB,2CAAH,sDASTG,EAAY,kBAAM3B,IAAMI,IAAI,gBAI5BwB,EAAiB,kBAAM5B,IAAMI,IAAI,WAEjCyB,EAAe,SAACN,GAAD,OAAUvB,IAAMe,KAAK,UAAWQ,IAE/CO,EAAe,SAACC,GAAD,OAAW/B,IAAMe,KAAK,SAAUgB,IAE/CC,EAAsB,SAACC,EAASC,GAAV,OAC1BlC,IAAMmB,IAAN,iBAAoBc,GAAWC,IAE3BC,EAAsB,SAACF,GAAD,OAAajC,IAAMqB,OAAN,iBAAuBY,KAE1DG,EAAuB,SAACH,GAAD,OAAajC,IAAMI,IAAN,iBAAoB6B,M,oBChE9DI,EAAOC,QAAU,CAAC,KAAO,gCAAgC,UAAY,qCAAqC,MAAQ,iCAAiC,WAAa,sCAAsC,YAAc,uCAAuC,WAAa,sCAAsC,gBAAkB,+EAA+E,YAAc,uCAAuC,WAAa,sCAAsC,SAAW,sC,oBCAlgBD,EAAOC,QAAU,CAAC,KAAO,kCAAkC,QAAU,qCAAqC,MAAQ,mCAAmC,YAAc,yCAAyC,gBAAkB,6CAA6C,OAAS,sC,oBCApRD,EAAOC,QAAU,CAAC,SAAW,oC,oBCA7BD,EAAOC,QAAU,CAAC,UAAY,qC,6JC+Df,GACbC,YAvDkB,kBAAM,SAACC,GACzBA,EAASC,IAAcC,oBAEvBd,cACGe,MAAK,gBAAGnB,EAAH,EAAGA,KAAH,OAAcgB,EAASC,IAAcG,iBAAiBpB,EAAKqB,WAChEC,OAAM,SAACC,GAAD,OAAWP,EAASC,IAAcO,eAAeD,SAmD1DE,UAtCgB,SAAClB,GAAD,OAAW,SAACS,GAC5BA,EAASC,IAAcS,oBAEvBpB,YAAaC,GACVY,MAAK,gBAAGnB,EAAH,EAAGA,KAAH,OAAcgB,EAASC,IAAcU,iBAAiB3B,EAAK4B,cAChEN,OAAM,SAACC,GAAD,OAAWP,EAASC,IAAcY,eAAeN,SAkC1DO,YA/BkB,SAACrB,EAASC,GAAV,OAAuB,SAACM,GAC1CA,EAASC,IAAcc,sBAEvBvB,YAAoBC,EAASC,GAC1BS,MAAK,gBAAGnB,EAAH,EAAGA,KAAH,OACJgB,EAASC,IAAce,mBAAmBhC,EAAKiC,kBAEhDX,OAAM,SAACC,GAAD,OAAWP,EAASC,IAAciB,iBAAiBX,SAyB5DY,YAtBkB,SAAC1B,GAAD,OAAa,SAACO,GAChCA,EAASC,IAAcmB,sBAEvBzB,YAAoBF,GACjBU,MAAK,gBAAGnB,EAAH,EAAGA,KAAH,OACJgB,EAASC,IAAcoB,mBAAmBrC,EAAKsC,aAAaC,SAE7DjB,OAAM,SAACC,GAAD,OAAWP,EAASC,IAAcuB,iBAAiBjB,SAgB5DkB,SAnDe,SAAC1C,GAAD,OAAU,SAACiB,GAC1BA,EAASC,IAAcyB,mBAEvBrC,YAAaN,GACVoB,MAAK,gBAAGnB,EAAH,EAAGA,KAAH,OACJgB,EAASC,IAAc0B,gBAAgB3C,EAAK4C,MAAM7C,UAEnDuB,OAAM,SAACC,GAAD,OAAWP,EAASC,IAAc4B,cAActB,SA6CzDuB,aAdmB,SAACrC,GAAD,OAAa,SAACO,GACjCA,EAASC,IAAc8B,uBAEvBnC,YAAqBH,GAClBU,MAAK,gBAAGnB,EAAH,EAAGA,KAAH,OAAcgB,EAASC,IAAc+B,oBAAoBhD,EAAKqB,WACnEC,OAAM,SAACC,GAAD,OAAWP,EAASC,IAAcgC,kBAAkB1B,UCrDhD,EARG,SAAC2B,GAAD,OAAWA,EAAMC,OAAOC,OAQ3B,EANK,SAACF,GAAD,OAAWA,EAAMC,OAAOE,UAM7B,EAJI,SAACH,GAAD,OAAWA,EAAMC,OAAOG,WAI5B,EAFC,SAACJ,GAAD,OAAWA,EAAMC,OAAOI,M,gCCCzBC,MAPf,WACE,IAAIzD,EAAO0D,SAASC,eAAe,eAAeC,MAElD5D,EAAOA,EAAK6D,QAAQ,MAAO,KAAKC,MAAM,KAAKC,MAE3CL,SAASC,eAAe,YAAYK,UAAY,sDAAgBhE,GC0QlE,IAMMiE,EAAqB,CACzBC,aAAcC,EAAiBzB,SAC/B0B,SAAUD,EAAiBzC,UAC3B2C,SAAUnD,IAAcoD,YACxBC,SAAUJ,EAAiBpC,aAGdyC,eAbS,SAACrB,GAAD,MAAY,CAClCsB,SAAUC,EAA2BvB,GACrCI,UAAWmB,EAA0BvB,GACrCwB,UAAWD,EAAuBvB,MAUIc,EAAzBO,EAvQf,YAQI,IAPFN,EAOC,EAPDA,aACAE,EAMC,EANDA,SACAG,EAKC,EALDA,SACAF,EAIC,EAJDA,SACAd,EAGC,EAHDA,UACAkB,EAEC,EAFDA,SACAE,EACC,EADDA,UACC,EACmCC,oBAAS,GAD5C,mBACMC,EADN,KACwBC,EADxB,KAEDC,qBAAU,WACJF,GACFG,YAAW,WACTF,GAAQ,KACP,OAEJ,CAACD,IAEUI,aAAY,SAAC9B,GAAD,OAAWA,EAAM+B,MAAMC,QAAjD,IAVC,EAYkCP,mBAAS,MAZ3C,mBAYMQ,EAZN,KAYkBC,EAZlB,OAwBwCT,mBAAS,IAxBjD,mBAwBMU,EAxBN,KAwBqBC,EAxBrB,OA4BwCX,mBAAS,IA5BjD,mBA4BMY,EA5BN,KA4BqBC,EA5BrB,OA+B0Cb,mBAAS,IA/BnD,mBA+BMc,EA/BN,KA+BsBC,EA/BtB,OAmCqDf,mBAAS,IAnC9D,mBAmCMgB,EAnCN,KAmC2BC,EAnC3B,OAuCqDjB,mBAAS,IAvC9D,mBAuCMkB,EAvCN,KAuC2BC,EAvC3B,OA2CuDnB,mBAAS,IA3ChE,mBA2CMoB,EA3CN,KA2C4BC,EA3C5B,OA+C6BrB,mBAAS,MA/CtC,mBA+CMsB,EA/CN,KA+CeC,EA/Cf,KAgDKC,EAAW,CACfC,QAAS,mIACTC,QAAS,mIACTC,YAAa,wHAnDd,GAsDyB3B,mBAAS,MAtDlC,qBAsDMpE,GAtDN,MAsDagG,GAtDb,MAuDDzB,qBAAU,WACRyB,GAAS7B,GACLA,IACFU,EAAaV,EAAU8B,QACvBlB,EAAgBZ,EAAU+B,MAAMC,IAChCd,EAAuBlB,EAAUiC,YAAYD,IAC7ClB,EAAgBd,EAAU+B,MAAMG,IAChCd,EAAuBpB,EAAUiC,YAAYC,IAC7ClB,EAAiBhB,EAAU+B,MAAMI,KACjCb,EAAwBtB,EAAUiC,YAAYE,QAE/C,CAACnC,IAEJ,IAAMoC,GAAe,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAYzC,GAAYjE,GAAMiG,OAC9B9F,EAAW,CACf+F,MAAO,CAAEC,GAAIrB,EAAeuB,GAAIrB,EAAesB,IAAKpB,GACpDkB,YAAa,CACXD,GAAIf,EACJiB,GAAIf,EACJgB,IAAKd,GAEPS,OAAQS,GAGV,GAAsB,WAAlBF,EAAEG,OAAOC,KAKX,OAJA7C,EAAS/D,GAAMgC,IAAK7B,GACpB2D,KACA6B,EAAWC,EAASE,cACpBxB,GAAQ,GAGVqB,EAAWC,EAASC,SACpBvB,GAAQ,GACRV,EAASzD,GACT2D,MAGIA,GAAc,WAClBe,EAAa,MACbE,EAAgB,IAChBM,EAAuB,IACvBJ,EAAgB,IAChBM,EAAuB,IACvBJ,EAAiB,IACjBM,EAAwB,IACxBvC,SAASC,eAAe,cAAc0D,QACtC3D,SAASC,eAAe,YAAYK,UAAY,GAChDK,KAGF,OACE,oCACGQ,GAAoB,kBAACyC,EAAA,EAAD,CAAcpB,QAASA,EAASqB,SAAO,IAC3DhE,GAAa,kBAACiE,EAAA,EAAD,MAEd,0BAAMC,UAAWC,IAAOC,KAAMxI,GAAG,cAC/B,yBAAKsI,UAAWhD,EAAWiD,IAAOE,gBAAkBF,IAAOG,YACzD,2BAAOJ,UAAWC,IAAOI,aACvB,2BACEC,KAAK,OACLX,KAAK,OACLjI,GAAG,cACHsI,UAAWC,IAAOM,YAClBC,SA5GW,SAAC,GAAgB,IAAdd,EAAa,EAAbA,OACxBrC,GAAQ,GACRrB,IACA,IAAMyE,EAAa,IAAIhI,SACvBgI,EAAW/H,OAAO,OAAQgH,EAAOgB,MAAM,IAEvChC,EAAWC,EAASG,aAEpBrC,EAAagE,MAsGL,0BAAMT,UAAWC,IAAOU,YACrBhD,EACC,kBAAC,IAAD,CAAkBjG,GAAG,kBAErB,kBAAC,IAAD,CAAkBA,GAAG,mBAK7B,yBAAKA,GAAG,WAAWsI,UAAWC,IAAOW,WACrC,6BACE,wBAAIZ,UAAWC,IAAOhB,OACpB,kBAAC,IAAD,CAAkBvH,GAAG,gBAGvB,2BACEiI,KAAK,cACLjI,GAAG,cACHmJ,YAAY,wBACZb,UAAWC,IAAOa,UAClB3E,MAAO0B,EACP2C,SAtHkB,SAAC,GAAD,IAAarE,EAAb,EAAGuD,OAAUvD,MAAb,OAA2B2B,EAAgB3B,MAyH/D,2BACEwD,KAAK,cACLjI,GAAG,cACHmJ,YAAY,0IACZb,UAAWC,IAAOa,UAClB3E,MAAO4B,EACPyC,SA5HkB,SAAC,GAAD,IAAarE,EAAb,EAAGuD,OAAUvD,MAAb,OAA2B6B,EAAgB7B,MA+H/D,2BACEwD,KAAK,eACLjI,GAAG,eACHmJ,YAAY,mIACZb,UAAWC,IAAOa,UAClB3E,MAAO8B,EACPuC,SAlImB,SAAC,GAAD,IAAarE,EAAb,EAAGuD,OAAUvD,MAAb,OAC3B+B,EAAiB/B,OAoIb,6BACE,wBAAI6D,UAAWC,IAAOhB,OACpB,kBAAC,IAAD,CAAkBvH,GAAG,iBAGvB,2BACEiI,KAAK,qBACLjI,GAAG,qBACHmJ,YAAY,+BACZb,UAAWC,IAAOa,UAClB3E,MAAOgC,EACPqC,SA5IwB,SAAC,GAAD,IAAarE,EAAb,EAAGuD,OAAUvD,MAAb,OAChCiC,EAAuBjC,MA8IjB,2BACEwD,KAAK,qBACLjI,GAAG,qBACHmJ,YAAY,0IACZb,UAAWC,IAAOa,UAClB3E,MAAOkC,EACPmC,SAjJwB,SAAC,GAAD,IAAarE,EAAb,EAAGuD,OAAUvD,MAAb,OAChCmC,EAAuBnC,MAmJjB,2BACEwD,KAAK,sBACLjI,GAAG,sBACHmJ,YAAY,mIACZb,UAAWC,IAAOa,UAClB3E,MAAOoC,EACPiC,SAtJyB,SAAC,GAAD,IAAarE,EAAb,EAAGuD,OAAUvD,MAAb,OACjCqC,EAAwBrC,OAyJnBa,IAAaE,GACZ,4BACEoD,KAAK,SACLX,KAAK,WACLoB,QAASzB,GACTU,UAAWC,IAAOe,YAElB,kBAAC,IAAD,CAAkBtJ,GAAG,gBAIxBwF,GACC,4BACEoD,KAAK,SACLX,KAAK,SACLoB,QAASzB,GACTU,UAAWC,IAAOe,YAElB,kBAAC,IAAD,CAAkBtJ,GAAG,mBAIzB,4BACE4I,KAAK,SACLS,QAASlE,GACTmD,UAAWC,IAAOe,YAElB,kBAAC,IAAD,CAAkBtJ,GAAG,qB,kBCjM/B,IAAM8E,EAAqB,CACzByE,SAAUC,EAAgBvG,YAC1B6F,SAAUU,EAAgB5F,cAGbyB,cAAQ,KAAMP,EAAdO,EAxDf,YAOI,IANFiC,EAMC,EANDA,OACAC,EAKC,EALDA,MACAE,EAIC,EAJDA,YACAzH,EAGC,EAHDA,GACAuJ,EAEC,EAFDA,SACAT,EACC,EADDA,SAOA,OACE,yBAAKR,UAAWC,IAAOkB,MACrB,wBAAInB,UAAWC,IAAOhB,OAAQA,EAAMC,IACpC,uBAAGc,UAAWC,IAAOd,aAAcA,EAAYD,IAC/C,wBAAIc,UAAWC,IAAOhB,OAAQA,EAAMG,IACpC,uBAAGY,UAAWC,IAAOd,aAAcA,EAAYC,IAC/C,wBAAIY,UAAWC,IAAOhB,OAAQA,EAAMI,KACpC,uBAAGW,UAAWC,IAAOd,aAAcA,EAAYE,KAC/C,yBAAK+B,IAAKpC,EAAQqC,IAAKpC,EAAOe,UAAWC,IAAOqB,UAChD,yBAAKtB,UAAWC,IAAOsB,iBACrB,4BACEjB,KAAK,SACLN,UAAWC,IAAOuB,OAClBT,QAAS,kBAAME,EAASvJ,KAExB,kBAAC,IAAD,CAAkBA,GAAG,kBAEvB,4BACE4I,KAAK,SACLN,UAAWC,IAAOuB,OAClBT,QAAS,kBAzBiB,SAACrJ,GACjC+J,OAAOC,SAAS,EAAG,GACnBlB,EAAS9I,GAuBYiK,CAA0BjK,KAEzC,kBAAC,IAAD,CAAkBA,GAAG,uB,kBCT/B,IAIM8E,EAAqB,CACzBoF,cAAelF,EAAiBnD,aAGnBwD,eARS,SAACrB,GAAD,MAAY,CAClCmG,SAAU5E,EAAyBvB,MAOGc,EAAzBO,EAnCf,YAAuD,IAA5B8E,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,cAKnC,OAJAtE,qBAAU,WACRsE,MACC,CAACA,IAGFC,GACE,yBAAK7B,UAAWC,IAAO6B,UACpBD,EAASE,KAAI,gBAAG9C,EAAH,EAAGA,MAAOE,EAAV,EAAUA,YAAaH,EAAvB,EAAuBA,OAAQjE,EAA/B,EAA+BA,IAA/B,OACZ,kBAAC,EAAD,CACEiH,IAAKjH,EACLkE,MAAOA,EACPE,YAAaA,EACbH,OAAQA,EACRtH,GAAIqD,W,kBClBD,SAASkH,IACtB,OACE,yBAAKjC,UAAWC,IAAOiC,WACrB,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"static/js/10.6b847866.chunk.js","sourcesContent":["\r\nimport axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = 'https://evening-caverns-34846.herokuapp.com';\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get('/products');\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append('file', file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get('/developers');\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get('/promo');\r\n\r\nconst sendUserFile = (file) => axios.post('/images', file);\r\n\r\nconst sendNewStock = (stock) => axios.post('/promo', stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AdminStocksEditor_form__2ZL6u\",\"formInput\":\"AdminStocksEditor_formInput__3Z-js\",\"title\":\"AdminStocksEditor_title__dbFUr\",\"formButton\":\"AdminStocksEditor_formButton__7Bajw\",\"uploadInput\":\"AdminStocksEditor_uploadInput__1June\",\"fileUpload\":\"AdminStocksEditor_fileUpload__2Z4yn\",\"fileUploadGreen\":\"AdminStocksEditor_fileUploadGreen__6qGnh AdminStocksEditor_fileUpload__2Z4yn\",\"uploadLabel\":\"AdminStocksEditor_uploadLabel__23n8I\",\"uploadSpan\":\"AdminStocksEditor_uploadSpan__3NF2W\",\"fileName\":\"AdminStocksEditor_fileName__3UeXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"AdminStocksListItem_card__1TXfi\",\"cardImg\":\"AdminStocksListItem_cardImg__20Hab\",\"title\":\"AdminStocksListItem_title__1OB2D\",\"description\":\"AdminStocksListItem_description__1a81e\",\"buttonContainer\":\"AdminStocksListItem_buttonContainer__2aZrN\",\"button\":\"AdminStocksListItem_button__2w_uy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardList\":\"AdminStocksList_cardList__3b81E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdminStocksPage_container__1pHTm\"};","import stocksActions from './stocksActions';\r\nimport {\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n} from '../../services/api';\r\n\r\nconst fetchStocks = () => (dispatch) => {\r\n  dispatch(stocksActions.getStocksRequest());\r\n\r\n  fetchAllStocks()\r\n    .then(({ data }) => dispatch(stocksActions.getStocksSuccess(data.promo)))\r\n    .catch((error) => dispatch(stocksActions.getStocksError(error)));\r\n};\r\n\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(stocksActions.sendFileRequest());\r\n\r\n  sendUserFile(file)\r\n    .then(({ data }) =>\r\n      dispatch(stocksActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(stocksActions.sendFileError(error)));\r\n};\r\n\r\nconst sendStock = (stock) => (dispatch) => {\r\n  dispatch(stocksActions.sendStockRequest());\r\n\r\n  sendNewStock(stock)\r\n    .then(({ data }) => dispatch(stocksActions.sendStockSuccess(data.newPromo)))\r\n    .catch((error) => dispatch(stocksActions.sendStockError(error)));\r\n};\r\n\r\nconst updateStock = (stockId, newStock) => (dispatch) => {\r\n  dispatch(stocksActions.updateStockRequest());\r\n\r\n  updateExistingStock(stockId, newStock)\r\n    .then(({ data }) =>\r\n      dispatch(stocksActions.updateStockSuccess(data.updatedPromo))\r\n    )\r\n    .catch((error) => dispatch(stocksActions.updateStockError(error)));\r\n};\r\n\r\nconst deleteStock = (stockId) => (dispatch) => {\r\n  dispatch(stocksActions.deleteStockRequest());\r\n\r\n  deleteExistingStock(stockId)\r\n    .then(({ data }) =>\r\n      dispatch(stocksActions.deleteStockSuccess(data.deletedPromo._id))\r\n    )\r\n    .catch((error) => dispatch(stocksActions.deleteStockError(error)));\r\n};\r\n\r\nconst getStockById = (stockId) => (dispatch) => {\r\n  dispatch(stocksActions.getStockByIdRequest());\r\n\r\n  getExistingStockById(stockId)\r\n    .then(({ data }) => dispatch(stocksActions.getStockByIdSuccess(data.promo)))\r\n    .catch((error) => dispatch(stocksActions.getStockByIdError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchStocks,\r\n  sendStock,\r\n  updateStock,\r\n  deleteStock,\r\n  sendFile,\r\n  getStockById,\r\n};\r\n","const getStocks = (state) => state.stocks.items;\r\n\r\nconst getFileLink = (state) => state.stocks.fileLink;\r\n\r\nconst getLoading = (state) => state.stocks.isLoading;\r\n\r\nconst getItem = (state) => state.stocks.item;\r\n\r\nexport default { getStocks, getFileLink, getLoading, getItem };\r\n","function getFileName() {\r\n  let file = document.getElementById('uploadeFile').value;\r\n\r\n  file = file.replace(/\\\\/g, '/').split('/').pop();\r\n\r\n  document.getElementById('fileName').innerHTML = 'Имя файла: ' + file;\r\n}\r\nexport default getFileName;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/Spinner';\r\nimport Notification from '../Notification';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  stocksOperations,\r\n  stocksActions,\r\n  stocksSelector,\r\n} from '../../redux/stocks/';\r\n\r\nimport styles from './AdminStocksEditor.module.css';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport languages from '../../languages';\r\n\r\nimport getFileName from './utils';\r\n\r\nfunction AdminStocksEditor({\r\n  onSubmitFile,\r\n  onSubmit,\r\n  onUpdate,\r\n  onCancel,\r\n  isLoading,\r\n  linkFile,\r\n  editStock,\r\n}) {\r\n  const [showNotification, setShow] = useState(false);\r\n  useEffect(() => {\r\n    if (showNotification) {\r\n      setTimeout(() => {\r\n        setShow(false);\r\n      }, 3000);\r\n    }\r\n  }, [showNotification]);\r\n\r\n  const local = useSelector((state) => state.local.lang);\r\n\r\n  const [stocksFile, setStockFile] = useState(null);\r\n  const handleLoadFile = ({ target }) => {\r\n    setShow(true);\r\n    getFileName();\r\n    const stocksItem = new FormData();\r\n    stocksItem.append('file', target.files[0]);\r\n\r\n    setMessage(messages.successFile);\r\n\r\n    onSubmitFile(stocksItem);\r\n  };\r\n\r\n  const [stocksTitleEn, setStockTitleEn] = useState('');\r\n\r\n  const handleChangeTitleEn = ({ target: { value } }) => setStockTitleEn(value);\r\n\r\n  const [stocksTitleRu, setStockTitleRu] = useState('');\r\n  const handleChangeTitleRu = ({ target: { value } }) => setStockTitleRu(value);\r\n\r\n  const [stocksTitleUkr, setStockTitleUkr] = useState('');\r\n  const handleChangeTitleUkr = ({ target: { value } }) =>\r\n    setStockTitleUkr(value);\r\n\r\n  const [stocksDescriptionEn, setStocksDescriptionEn] = useState('');\r\n  const handleChangeDescriptionEn = ({ target: { value } }) =>\r\n    setStocksDescriptionEn(value);\r\n\r\n  const [stocksDescriptionRu, setStocksDescriptionRu] = useState('');\r\n  const handleChangeDescriptionRu = ({ target: { value } }) =>\r\n    setStocksDescriptionRu(value);\r\n\r\n  const [stocksDescriptionUkr, setStocksDescriptionUkr] = useState('');\r\n  const handleChangeDescriptionUkr = ({ target: { value } }) =>\r\n    setStocksDescriptionUkr(value);\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const messages = {\r\n    success: 'Акция успешно добавлена',\r\n    updated: 'Акция успешно обновлена',\r\n    successFile: 'Файл успешно загружен',\r\n  };\r\n\r\n  const [stock, setStock] = useState(null);\r\n  useEffect(() => {\r\n    setStock(editStock);\r\n    if (editStock) {\r\n      setStockFile(editStock.images);\r\n      setStockTitleEn(editStock.title.en);\r\n      setStocksDescriptionEn(editStock.description.en);\r\n      setStockTitleRu(editStock.title.ru);\r\n      setStocksDescriptionRu(editStock.description.ru);\r\n      setStockTitleUkr(editStock.title.ukr);\r\n      setStocksDescriptionUkr(editStock.description.ukr);\r\n    }\r\n  }, [editStock]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const linkImage = linkFile || stock.images;\r\n    const newStock = {\r\n      title: { en: stocksTitleEn, ru: stocksTitleRu, ukr: stocksTitleUkr },\r\n      description: {\r\n        en: stocksDescriptionEn,\r\n        ru: stocksDescriptionRu,\r\n        ukr: stocksDescriptionUkr,\r\n      },\r\n      images: linkImage,\r\n    };\r\n\r\n    if (e.target.name === 'update') {\r\n      onUpdate(stock._id, newStock);\r\n      cancelInput();\r\n      setMessage(messages.updated);\r\n      setShow(true);\r\n      return;\r\n    }\r\n    setMessage(messages.success);\r\n    setShow(true);\r\n    onSubmit(newStock);\r\n    cancelInput();\r\n  };\r\n\r\n  const cancelInput = () => {\r\n    setStockFile(null);\r\n    setStockTitleEn('');\r\n    setStocksDescriptionEn('');\r\n    setStockTitleRu('');\r\n    setStocksDescriptionRu('');\r\n    setStockTitleUkr('');\r\n    setStocksDescriptionUkr('');\r\n    document.getElementById('formStocks').reset();\r\n    document.getElementById('fileName').innerHTML = '';\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showNotification && <Notification message={message} confirm />}\r\n      {isLoading && <Spinner />}\r\n\r\n      <form className={styles.form} id=\"formStocks\">\r\n        <div className={linkFile ? styles.fileUploadGreen : styles.fileUpload}>\r\n          <label className={styles.uploadLabel}>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              id=\"uploadeFile\"\r\n              className={styles.uploadInput}\r\n              onChange={handleLoadFile}\r\n            />\r\n            <span className={styles.uploadSpan}>\r\n              {stocksFile ? (\r\n                <FormattedMessage id=\"file.uploaded\" />\r\n              ) : (\r\n                <FormattedMessage id=\"file.upload\" />\r\n              )}\r\n            </span>\r\n          </label>\r\n        </div>\r\n        <div id=\"fileName\" className={styles.fileName}></div>\r\n        <div>\r\n          <h2 className={styles.title}>\r\n            <FormattedMessage id=\"promo.name\" />\r\n          </h2>\r\n\r\n          <input\r\n            name=\"promoNameEn\"\r\n            id=\"promoNameEn\"\r\n            placeholder=\"Promo name on english\"\r\n            className={styles.formInput}\r\n            value={stocksTitleEn}\r\n            onChange={handleChangeTitleEn}\r\n          />\r\n\r\n          <input\r\n            name=\"promoNameRu\"\r\n            id=\"promoNameRu\"\r\n            placeholder=\"Название акции на русском\"\r\n            className={styles.formInput}\r\n            value={stocksTitleRu}\r\n            onChange={handleChangeTitleRu}\r\n          />\r\n\r\n          <input\r\n            name=\"promoNameUkr\"\r\n            id=\"promoNameUkr\"\r\n            placeholder=\"Назва акції українською\"\r\n            className={styles.formInput}\r\n            value={stocksTitleUkr}\r\n            onChange={handleChangeTitleUkr}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h2 className={styles.title}>\r\n            <FormattedMessage id=\"promo.about\" />\r\n          </h2>\r\n\r\n          <input\r\n            name=\"promoDescriptionEn\"\r\n            id=\"promoDescriptionEn\"\r\n            placeholder=\"Promo description on english\"\r\n            className={styles.formInput}\r\n            value={stocksDescriptionEn}\r\n            onChange={handleChangeDescriptionEn}\r\n          />\r\n\r\n          <input\r\n            name=\"promoDescriptionRu\"\r\n            id=\"promoDescriptionRu\"\r\n            placeholder=\"Описание акции на русском\"\r\n            className={styles.formInput}\r\n            value={stocksDescriptionRu}\r\n            onChange={handleChangeDescriptionRu}\r\n          />\r\n\r\n          <input\r\n            name=\"promoDescriptionUkr\"\r\n            id=\"promoDescriptionUkr\"\r\n            placeholder=\"Назва акції українською\"\r\n            className={styles.formInput}\r\n            value={stocksDescriptionUkr}\r\n            onChange={handleChangeDescriptionUkr}\r\n          />\r\n        </div>\r\n\r\n        {linkFile && !editStock && (\r\n          <button\r\n            type=\"submit\"\r\n            name=\"onSubmit\"\r\n            onClick={handleSubmit}\r\n            className={styles.formButton}\r\n          >\r\n            <FormattedMessage id=\"promo.send\" />\r\n          </button>\r\n        )}\r\n\r\n        {editStock && (\r\n          <button\r\n            type=\"submit\"\r\n            name=\"update\"\r\n            onClick={handleSubmit}\r\n            className={styles.formButton}\r\n          >\r\n            <FormattedMessage id=\"promo.refresh\" />\r\n          </button>\r\n        )}\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={cancelInput}\r\n          className={styles.formButton}\r\n        >\r\n          <FormattedMessage id=\"reset form\" />\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nAdminStocksEditor.propTypes = {\r\n  onSubmitFile: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onUpdate: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  linkFile: PropTypes.string,\r\n  editStock: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  linkFile: stocksSelector.getFileLink(state),\r\n  isLoading: stocksSelector.getLoading(state),\r\n  editStock: stocksSelector.getItem(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmitFile: stocksOperations.sendFile,\r\n  onSubmit: stocksOperations.sendStock,\r\n  onCancel: stocksActions.cancelInput,\r\n  onUpdate: stocksOperations.updateStock,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminStocksEditor);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport stocksOperation from '../../../redux/stocks/stocksOperations';\r\nimport styles from './AdminStocksListItem.module.css';\r\n\r\nfunction AdminStocksListItem({\r\n  images,\r\n  title,\r\n  description,\r\n  id,\r\n  onRemove,\r\n  onChange,\r\n}) {\r\n  const handleClickOnChangeButton = (id) => {\r\n    window.scrollTo(0, 0);\r\n    onChange(id);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <h1 className={styles.title}>{title.en}</h1>\r\n      <p className={styles.description}>{description.en}</p>\r\n      <h1 className={styles.title}>{title.ru}</h1>\r\n      <p className={styles.description}>{description.ru}</p>\r\n      <h1 className={styles.title}>{title.ukr}</h1>\r\n      <p className={styles.description}>{description.ukr}</p>\r\n      <img src={images} alt={title} className={styles.cardImg} />\r\n      <div className={styles.buttonContainer}>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={() => onRemove(id)}\r\n        >\r\n          <FormattedMessage id=\"promo.delete\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={() => handleClickOnChangeButton(id)}\r\n        >\r\n          <FormattedMessage id=\"promo.change\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAdminStocksListItem.propTypes = {\r\n  images: PropTypes.string.isRequired,\r\n  title: PropTypes.object.isRequired,\r\n  description: PropTypes.object.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onRemove: stocksOperation.deleteStock,\r\n  onChange: stocksOperation.getStockById,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AdminStocksListItem);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport AdminStockListItem from \"./AdminStockListItem\";\r\nimport stocksOperations from \"../../redux/stocks/stocksOperations\";\r\nimport stocksSelector from \"../../redux/stocks/stocksSelector\";\r\nimport styles from \"./AdminStocksList.module.css\";\r\n\r\nfunction AdminStocksList({ elements, onFetchStocks }) {\r\n  useEffect(() => {\r\n    onFetchStocks();\r\n  }, [onFetchStocks]);\r\n\r\n  return (\r\n    elements && (\r\n      <div className={styles.cardList}>\r\n        {elements.map(({ title, description, images, _id }) => (\r\n          <AdminStockListItem\r\n            key={_id}\r\n            title={title}\r\n            description={description}\r\n            images={images}\r\n            id={_id}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nAdminStocksList.propTypes = {\r\n  elements: PropTypes.arrayOf(PropTypes.object),\r\n  onFetchStocks: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  elements: stocksSelector.getStocks(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchStocks: stocksOperations.fetchStocks,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminStocksList);\r\n","import React from 'react';\r\nimport AdminStocksEditor from '../../components/AdminStocksEditor';\r\nimport AdminStocksList from '../../components/AdminStocksList';\r\nimport styles from './AdminStocksPage.module.css';\r\n\r\nexport default function AdminStocksPage() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <AdminStocksEditor />\r\n      <AdminStocksList />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}