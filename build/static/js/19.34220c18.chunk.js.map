{"version":3,"sources":["redux/product/productSelectors.js","redux/product/productOperations.js","services/api.js","redux/product/index.js","components/DessertsList/DessertsList.module.css","components/DessertsList/DessertListItem.js","components/DessertsList/DessertsList.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","clearFile","sendProductError","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","dessertItem","styles","dessertTittle","dessertWeight","dessertOrder","dessertDescription","dessertPriceContainer","dessertPrice","dessertCurrency","dessertButton","dessertImg","DessertListItem","props","name","description","price","images","local","useSelector","lang","useDispatch","successMessage","values","errorMessage","useState","isAddedProdToOrder","setIsAddedProdToOrder","message","setMessage","addProd","setTimeout","orderOperations","addProdToOrderList","className","Notification","confirm","forCard","src","alt","width","type","onClick","dessertConainer","dessertsHeading","dessertList","DesertList","this","onFetchProductDesserts","err","console","log","cancel","map","key","_id","Component","mapDispatchToProps","productOperations","connect","productSelectors"],"mappings":"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","file":"static/js/19.34220c18.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) => {\r\n      dispatch(productActions.sendProductSuccess(data.product));\r\n      dispatch(productActions.clearFile());\r\n    })\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dessertConainer\":\"DessertsList_dessertConainer__1gc1A\",\"dessertsHeading\":\"DessertsList_dessertsHeading__3fjOu\",\"dessertList\":\"DessertsList_dessertList__2i3Ra\",\"dessertItem\":\"DessertsList_dessertItem__Ort3C\",\"dessertImg\":\"DessertsList_dessertImg__27Dt9\",\"dessertDescription\":\"DessertsList_dessertDescription__e5Yyt\",\"dessertTittle\":\"DessertsList_dessertTittle__2gtdv\",\"dessertWeight\":\"DessertsList_dessertWeight__3pEZY\",\"dessertOrder\":\"DessertsList_dessertOrder__1E1wz\",\"dessertPriceContainer\":\"DessertsList_dessertPriceContainer__2DNTM\",\"dessertPrice\":\"DessertsList_dessertPrice__11ivQ\",\"dessertCurrency\":\"DessertsList_dessertCurrency__IpvXh\",\"dessertButton\":\"DessertsList_dessertButton__1j5MS\"};","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { orderOperations } from '../../redux/order';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Notification from '../Notification';\r\n\r\n// import cheesecacke from '../../assets/img/desserts/cheesecacke.jpg';\r\nimport styles from './DessertsList.module.css';\r\n\r\nconst {\r\n  dessertItem,\r\n  dessertTittle,\r\n  dessertWeight,\r\n  dessertOrder,\r\n  dessertDescription,\r\n  dessertPriceContainer,\r\n  dessertPrice,\r\n  dessertCurrency,\r\n  dessertButton,\r\n  dessertImg,\r\n} = styles;\r\n\r\nconst DessertListItem = props => {\r\n  const { name, description, price, images } = props;\r\n\r\n  const local = useSelector(state => state.local.lang);\r\n\r\n  // const product = useSelector(state => state.products.items);\r\n  const dispatch = useDispatch();\r\n  const onAddProductToOrder = () =>\r\n    dispatch(orderOperations.addProdToOrderList(props));\r\n\r\n  const successMessage = (\r\n    <FormattedMessage\r\n      id=\"order.success\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const errorMessage = (\r\n    <FormattedMessage\r\n      id=\"order.error\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const [isAddedProdToOrder, setIsAddedProdToOrder] = useState(false);\r\n  const [message, setMessage] = useState(successMessage);\r\n\r\n  const addProd = async () => {\r\n    if (isAddedProdToOrder) {\r\n      setIsAddedProdToOrder(false);\r\n      setMessage(errorMessage);\r\n      return await setTimeout(() => setIsAddedProdToOrder(true), 10);\r\n    }\r\n    onAddProductToOrder(props);\r\n    setIsAddedProdToOrder(true);\r\n  };\r\n\r\n  return (\r\n    <li className={dessertItem}>\r\n      {isAddedProdToOrder && <Notification message={message} confirm forCard />}\r\n      <img src={images} alt=\"\" width=\"280\" className={dessertImg} />\r\n      <div className={dessertDescription}>\r\n        <h2 className={dessertTittle}>{name[local]}</h2>\r\n        <span className={dessertWeight}>\r\n          <FormattedMessage id=\"weight\" />\r\n          {description}\r\n          <FormattedMessage id=\"g\" />\r\n        </span>\r\n        <div className={dessertOrder}>\r\n          <div className={dessertPriceContainer}>\r\n            <span className={dessertPrice}>{`${price.price}.00 `}</span>\r\n            <span className={dessertCurrency}>\r\n              <FormattedMessage id=\"grn\" />\r\n            </span>\r\n          </div>\r\n\r\n          <button className={dessertButton} type=\"submit\" onClick={addProd}>\r\n            <FormattedMessage id=\"orders.chart\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DessertListItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport axios from \"axios\";\r\n\r\nimport { productSelectors, productOperations } from \"../../redux/product\";\r\n\r\nimport DessertsListItem from \"./DessertListItem\";\r\nimport styles from \"./DessertsList.module.css\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst { dessertConainer, dessertsHeading, dessertList } = styles;\r\n\r\nclass DesertList extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      this.props.onFetchProductDesserts(\"desserts\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  async componentWillUnmount() {\r\n    try {\r\n      source.cancel(\"Operation canceled\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n\r\n    return (\r\n      <div className={dessertConainer}>\r\n        <h2 className={dessertsHeading}>\r\n          <FormattedMessage id=\"desserts\" />\r\n        </h2>\r\n        <ul className={dessertList}>\r\n          {products.map((product) => (\r\n            <DessertsListItem key={product._id} {...product} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { products: productSelectors.getProducts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchProductDesserts: productOperations.fetchProductsByCategory,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DesertList);\r\n"],"sourceRoot":""}