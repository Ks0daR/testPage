{"version":3,"sources":["components/AdminOrdersListItem/AdminOrdersListItem.module.css","components/AdminOrderList/AdminOrderList.module.css","components/AdminOrdersListItem/AdminOrdersListItem.js","components/AdminOrderList/AdminOrderList.js"],"names":["module","exports","AdminOrdersListItem","item","local","useSelector","state","lang","dispatch","useDispatch","handleClickDone","orderOperations","postOrderStutus","_id","className","styles","orderWrapper","orderCheckbox","titleDo","id","status","type","name","onClick","checked","disabled","inputReady","dateWrapper","orderDate","moment","createdAt","format","itemsList","productsList","map","product","itemsListItem","key","itemName","productName","itemSize","itemsCount","sumWrapper","sumToPay","totalSum","currency","orderContacts","deliveryAddress","phone","AdminOrderList","items","orderSelectors","getOrders","isLoaded","getLoading","error","getError","useState","localMessages","filters","setFilter","options","useEffect","message","Spinner","length","orderContainer","buttons_container","option","button","button_active","orderItems","noOrderContainer","noOrderText"],"mappings":"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","file":"static/js/19.2899fe68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../stylesheet/vars.css'\",\"secondaryTextFontSize\":\"1.25 rem\",\"thirdHeaderFontStyle\":\"1.88 rem\",\"primaryColor\":\"#272727\",\"primaryTextColor\":\"rgba(0, 0, 0, 0.6)\",\"accentColor\":\"#FF6C00\",\"primaryTextFontSize\":\"0.875 rem\",\"totalSum\":\"AdminOrdersListItem_totalSum__V0DqW\",\"itemsList\":\"AdminOrdersListItem_itemsList__1LIbF\",\"orderWrapper\":\"AdminOrdersListItem_orderWrapper__1bxdG\",\"dateWrapper\":\"AdminOrdersListItem_dateWrapper__1rWFk\",\"orderDate\":\"AdminOrdersListItem_orderDate__76XE_\",\"itemsListItem\":\"AdminOrdersListItem_itemsListItem__Tokh3\",\"itemName\":\"AdminOrdersListItem_itemName__2e6Gj\",\"itemSize\":\"AdminOrdersListItem_itemSize__3G08E\",\"itemsCount\":\"AdminOrdersListItem_itemsCount__x_Dqy\",\"sumWrapper\":\"AdminOrdersListItem_sumWrapper__1AjRh\",\"sumToPay\":\"AdminOrdersListItem_sumToPay__1Bgdx\",\"orderContacts\":\"AdminOrdersListItem_orderContacts__28TdZ\",\"orderCheckbox\":\"AdminOrdersListItem_orderCheckbox__3iepU\",\"titleDo\":\"AdminOrdersListItem_titleDo__3Y_j2\",\"currency\":\"AdminOrdersListItem_currency__K0v7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noOrderContainer\":\"AdminOrderList_noOrderContainer__9WMZe\",\"noOrderText\":\"AdminOrderList_noOrderText__hl01I\",\"orderContainer\":\"AdminOrderList_orderContainer__2XwJh\",\"buttons_container\":\"AdminOrderList_buttons_container__3vsC2\",\"button\":\"AdminOrderList_button__2rJY7\",\"button_active\":\"AdminOrderList_button_active__1FcUy\"};","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport styles from \"./AdminOrdersListItem.module.css\";\r\nimport { orderOperations } from \"../../redux/order\";\r\n\r\nexport default function AdminOrdersListItem({ item }) {\r\n  const local = useSelector((state) => state.local.lang);\r\n  const dispatch = useDispatch();\r\n  const handleClickDone = () => {\r\n    dispatch(orderOperations.postOrderStutus(item._id));\r\n  };\r\n\r\n  return (\r\n    <li className={styles.orderWrapper}>\r\n      <div className={styles.orderCheckbox}>\r\n        <p className={styles.titleDo}>\r\n          <FormattedMessage id=\"orders.do\" />\r\n        </p>\r\n        {item.status === \"done\" && (\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"orderDone\"\r\n            onClick={handleClickDone}\r\n            checked\r\n            disabled\r\n            className={styles.inputReady}\r\n          />\r\n        )}\r\n        {item.status === \"new\" && (\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"orderDone\"\r\n            onClick={handleClickDone}\r\n            className={styles.inputReady}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={styles.dateWrapper}>\r\n        <p className={styles.orderDate}>\r\n          {moment(item.createdAt).format(\"h:MM a DD MMMM YY\")}\r\n        </p>\r\n      </div>\r\n      <ul className={styles.itemsList}>\r\n        {item.productsList.map((product) => (\r\n          <li className={styles.itemsListItem} key={product._id}>\r\n            <h4 className={styles.itemName}>{product.productName[local]}</h4>\r\n            <p className={styles.itemSize}>{product.type}</p>\r\n            <p className={styles.itemsCount}>{product.itemsCount}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className={styles.sumWrapper}>\r\n        <p className={styles.sumToPay}>\r\n          <FormattedMessage id=\"orders.sum\" />\r\n        </p>\r\n        <p className={styles.totalSum}>\r\n          {item.sumToPay}\r\n          <span className={styles.currency}>\r\n            <FormattedMessage id=\"grn\" />\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className={styles.orderContacts}>\r\n        <p>{item.deliveryAddress}</p>\r\n        <p>{item.phone}</p>\r\n        <p>{item.name}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport AdminOrdersListItem from \"../AdminOrdersListItem/AdminOrdersListItem\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport styles from \"./AdminOrderList.module.css\";\r\n// import orders from \"../../services/orders.json\";\r\n\r\nimport localMessages from \"../../languages\";\r\nimport { orderOperations, orderSelectors } from \"../../redux/order\";\r\n\r\nexport default function AdminOrderList() {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const items = useSelector(orderSelectors.getOrders);\r\n  const isLoaded = useSelector(orderSelectors.getLoading);\r\n  const error = useSelector(orderSelectors.getError);\r\n\r\n  const [filters, setFilter] = useState(localMessages[local][\"orders.new\"]);\r\n\r\n  const options = [\r\n    localMessages[local][\"orders.new\"],\r\n    localMessages[local][\"orders.done\"],\r\n    localMessages[local][\"orders.all\"],\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(orderOperations.getOrders());\r\n  }, [dispatch]);\r\n\r\n  // function handleChange(event) {\r\n  //   setFilter(event.target.value);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      {error && <div>Error: {error.message}</div>}\r\n      {isLoaded && <Spinner />}\r\n      {!error && !isLoaded && (\r\n        <>\r\n          {!items.length ? (\r\n            <div className={styles.noOrderContainer}>\r\n              <p className={styles.noOrderText}>\r\n                <FormattedMessage id=\"orders.no\" />\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className={styles.orderContainer}>\r\n              <div className={styles.buttons_container}>\r\n                {options.map((option) => (\r\n                  <button\r\n                    key={option}\r\n                    className={`${styles.button} ${\r\n                      filters === option ? styles.button_active : \"\"\r\n                    }`}\r\n                    onClick={() => setFilter(option)}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <div className={styles.orderItems}>\r\n                <ul>\r\n                  {items.map((item) => {\r\n                    if (filters === localMessages[local][\"orders.all\"]) {\r\n                      return <AdminOrdersListItem key={item._id} item={item} />;\r\n                    }\r\n                  })}\r\n                </ul>\r\n                <ul>\r\n                  {items.map((item) => {\r\n                    if (\r\n                      filters === localMessages[local][\"orders.done\"] &&\r\n                      item.status === \"done\"\r\n                    ) {\r\n                      return <AdminOrdersListItem key={item._id} item={item} />;\r\n                    }\r\n                  })}\r\n                </ul>\r\n                <ul>\r\n                  {items.map((item) => {\r\n                    if (\r\n                      filters === localMessages[local][\"orders.new\"] &&\r\n                      item.status === \"new\"\r\n                    ) {\r\n                      return <AdminOrdersListItem key={item._id} item={item} />;\r\n                    }\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}