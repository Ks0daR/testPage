{"version":3,"sources":["redux/product/productSelectors.js","services/api.js","redux/product/productOperations.js","redux/product/index.js","components/AdminUpdateListItem/adminUpdateListItem.module.css","components/AdminUpdateList/AdminUpdateList.module.css","components/AdminUpdateList/AdminUpdateList.js","components/AdminUpdateListItem/AdminUpdateListItem.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","source","axios","CancelToken","baseURL","getAllProducts","get","getProductsByCategory","category","cancelToken","token","getProductById","id","getAllIngredients","a","createNewIngredients","post","postNewProduct","product","updateProductById","productId","newProduct","put","deleteProductById","delete","postImage","file","data","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","fetchProducts","dispatch","productActions","productsRequest","then","productsSuccess","catch","error","productsError","fetchProductsByCategory","byCategoryRequest","byCategorySuccess","byCategoryError","fetchProductById","byIdRequest","byIdSuccess","byIdError","sendFile","sendFileRequest","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","sendProductSuccess","sendProductError","getAllIngredientsRequest","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","updateProductRequest","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredientsSuccess","createNewIngredientsError","module","exports","filteredProducts","AdminUpdateListItem","local","useSelector","lang","name","images","className","style","editCard","src","alt","editCard__image","editForm__name","to","pathname","type","editForm__btn","typesOfLists","AdminOrderList","useDispatch","productSelectors","isLoading","useState","listType","setListType","filterProductsBy","setFilterProductsBy","useEffect","productOperations","filter","categories","toLowerCase","includes","Spinner","styles","buttons_container","map","key","button","button_active","onClick","changeCategorie","page_container","value","placeholder","languages","search","input","onChange","target","items_container","_id"],"mappings":"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","file":"static/js/13.3ea0001e.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editCard\":\"adminUpdateListItem_editCard__3mEsn\",\"editCard__image\":\"adminUpdateListItem_editCard__image__1XDPp\",\"editForm__name\":\"adminUpdateListItem_editForm__name__38tOX\",\"editForm__btn\":\"adminUpdateListItem_editForm__btn__2Vgad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container\":\"AdminUpdateList_page_container__Ja61B\",\"buttons_container\":\"AdminUpdateList_buttons_container__uoPl6\",\"button\":\"AdminUpdateList_button__3Ve_9\",\"button_active\":\"AdminUpdateList_button_active__zH20E\",\"input\":\"AdminUpdateList_input__1ohVs\",\"items_container\":\"AdminUpdateList_items_container__1RDXF\"};","import React, { useState, useEffect } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { productOperations, productSelectors } from \"../../redux/product\";\r\nimport AdminUpdateListItem from \"../AdminUpdateListItem/AdminUpdateListItem\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport styles from \"./AdminUpdateList.module.css\";\r\nimport languages from \"../../languages\";\r\n\r\nlet filteredProducts;\r\nconst typesOfLists = [\"pizza\", \"sides\", \"drinks\", \"desserts\"];\r\n\r\nexport default function AdminOrderList() {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const products = useSelector(productSelectors.getProducts);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n\r\n  const [listType, setListType] = useState(\"pizza\");\r\n  const [filterProductsBy, setFilterProductsBy] = useState(\"\");\r\n\r\n  useEffect(() => dispatch(productOperations.fetchProducts()), [dispatch]);\r\n  if (products) {\r\n    filteredProducts = products\r\n      .filter(({ categories }) => categories === listType)\r\n      .filter(({ name }) =>\r\n        name[local].toLowerCase().includes(filterProductsBy.toLowerCase())\r\n      );\r\n  }\r\n  const changeCategorie = (type) => {\r\n    if (type === listType) {\r\n      return;\r\n    }\r\n    setFilterProductsBy(\"\");\r\n    setListType(type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      <div className={styles.buttons_container}>\r\n        {typesOfLists.map((type) => (\r\n          <button\r\n            key={type}\r\n            className={`${styles.button} ${\r\n              listType === type ? styles.button_active : \"\"\r\n            }`}\r\n            onClick={() => changeCategorie(type)}\r\n          >\r\n            <FormattedMessage id={type} />\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <section className={styles.page_container}>\r\n        <input\r\n          type=\"text\"\r\n          value={filterProductsBy}\r\n          placeholder={languages[local].search}\r\n          className={styles.input}\r\n          onChange={({ target: { value } }) => setFilterProductsBy(value)}\r\n        />\r\n        <div className={styles.items_container}>\r\n          {filteredProducts.map((product) => (\r\n            <AdminUpdateListItem key={product._id} product={product} />\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport style from \"./adminUpdateListItem.module.css\";\r\n\r\nconst AdminUpdateListItem = ({ product }) => {\r\n  const local = useSelector((state) => state.local.lang);\r\n  const { name, images } = product;\r\n  return (\r\n    <div className={style.editCard}>\r\n      <img src={images} alt={images} className={style.editCard__image} />\r\n      <p className={style.editForm__name}>{name[local]}</p>\r\n      <Link to={{ pathname: \"/admin/update-product-item\", state: { product } }}>\r\n        <button type=\"button\" className={style.editForm__btn}>\r\n          <FormattedMessage id=\"edit\" />\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItem;\r\n"],"sourceRoot":""}