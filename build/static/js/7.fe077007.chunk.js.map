{"version":3,"sources":["redux/product/productSelectors.js","redux/product/productOperations.js","services/api.js","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ConfirmationWindow.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/confirmationWindow.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/AddNewIngredient.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/addNewIngredient.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/IngredientSelect.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemElems/ingredientSelect.module.css","components/AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css","components/AdminUpdateListItemEdit/AdminUpdateListItemEdit.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","clearFile","sendProductError","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","ConfirmationWindow","massage","errorMassage","useSelector","productSelectors","fromCreateNewProduct","useLocation","pathname","className","style","confirmation","data-confirm","confirmation__form","confirmation__formText","to","confirmation__formBtnLink","type","confirmation__formBtn","props","name","module","exports","AddNewIngredient","useDispatch","useState","isShow","setIsShow","setMassage","newIngredientRu","setCreateNewIngredientRu","newIngredientUkr","setCreateNewIngredientUkr","newIngredientEn","setCreateNewIngredientEn","editForm__newIngredient","editCard__title","editCard__titleName","editCard__titleLang","value","onChange","ev","target","editForm__inputLang","maxLength","onClick","length","ru","en","ukr","productOperations","editForm__addNewIngredientBtn","IngredientSelect","productForEdit","local","lang","ingredientsList","ingredientsSelectList","map","el","idx","label","setNewIngredient","setIngredients","useEffect","deleteIngredient","delElemIndex","findIndex","_id","currentTarget","dataset","newIngredientsList","splice","discriptionTitle","editForm__ingredients","key","editForm__ingredient","editForm__ingredientName","data-id","editForm__ingredientBtnDel","width","height","viewBox","fill","editForm__ingredientBtnDelImage","d","editForm__ingredientsSelect","options","editForm__ingredientsList","theme","borderRadius","colors","primary25","primary","some","editForm__addIngredientBtn","AdminUpdateListItemEdit","location","JSON","parse","sessionStorage","getItem","isLoading","images","nameRu","setNameRu","nameEn","setNameEn","nameUkr","setNameUkr","subcategory","languages","setSubcategory","price","priceNoPizza","setPriceNoPizza","setPrice","M","pricePizzaM","setPricePizzaM","L","pricePizzaL","setPricePizzaL","XL","pricePizzaXL","setPricePizzaXL","description","setDescription","BtnCreateIngrad","setBtnCreateIngrad","subcategoryList","categories","imagesInit","collector","editedItem","window","addEventListener","setItem","stringify","container","Spinner","editCard","src","alt","closeUpImages","editCard__image","onSubmit","preventDefault","isValidName","isValidPrice","toString","isValidDescription","editForm","editCard__photoLabel","accept","files","history","pushState","editForm__photo","editForm__photoBtn","editForm__price","editForm__priceTitle","editForm__priceInput","editForm__inputSinglePrice","editForm__inputDescription","disabled","form","editForm__btnSubmit","removeItem","confirm"],"mappings":"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","file":"static/js/7.fe077007.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) => {\r\n      dispatch(productActions.sendProductSuccess(data.product));\r\n      dispatch(productActions.clearFile());\r\n    })\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport productSelectors from \"../../../redux/product/productSelectors\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport style from \"./confirmationWindow.module.css\";\r\n\r\nconst ConfirmationWindow = ({ massage }) => {\r\n  const errorMassage = useSelector(productSelectors.getError);\r\n  if (errorMassage) {\r\n    massage = errorMassage;\r\n  }\r\n  const location = useLocation();\r\n  let fromCreateNewProduct = location.pathname === \"/admin/create-product\";\r\n\r\n  return (\r\n    <div className={style.confirmation} data-confirm=\"continue\">\r\n      <div className={style.confirmation__form}>\r\n        <p className={style.confirmation__formText}>{massage}</p>\r\n        {!fromCreateNewProduct && (\r\n          <Link\r\n            to=\"/admin/update-product\"\r\n            className={style.confirmation__formBtnLink}\r\n          >\r\n            <button type=\"button\" className={style.confirmation__formBtn}>\r\n              <FormattedMessage id=\"update.return\" />\r\n            </button>\r\n          </Link>\r\n        )}\r\n        {massage.props.id === \"deleted product\" || (\r\n          <button\r\n            type=\"button\"\r\n            className={style.confirmation__formBtn}\r\n            name=\"continue\"\r\n          >\r\n            <FormattedMessage id=\"continue editing\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationWindow;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmation\":\"confirmationWindow_confirmation__BuNtQ\",\"confirmation__form\":\"confirmationWindow_confirmation__form__3Sw6Z\",\"confirmation__formText\":\"confirmationWindow_confirmation__formText__2_-NC\",\"confirmation__formBtnLink\":\"confirmationWindow_confirmation__formBtnLink__15LfN\",\"confirmation__formBtn\":\"confirmationWindow_confirmation__formBtn__oOiAc\"};","import React, { useState } from \"react\";\r\nimport style from \"./addNewIngredient.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport productOperations from \"../../../redux/product/productOperations\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\n\r\nconst AddNewIngredient = () => {\r\n  const dispatch = useDispatch();\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [massage, setMassage] = useState(\"\");\r\n  const [newIngredientRu, setCreateNewIngredientRu] = useState(\"\");\r\n  const [newIngredientUkr, setCreateNewIngredientUkr] = useState(\"\");\r\n  const [newIngredientEn, setCreateNewIngredientEn] = useState(\"\");\r\n  const createIngredient = () => {\r\n    if (\r\n      newIngredientEn.length >= 3 &&\r\n      newIngredientRu.length >= 3 &&\r\n      newIngredientUkr.length >= 3\r\n    ) {\r\n      const newIngredient = {\r\n        name: {\r\n          ru: newIngredientRu,\r\n          en: newIngredientEn,\r\n          ukr: newIngredientUkr,\r\n        },\r\n      };\r\n      dispatch(productOperations.createNewIngredient(newIngredient));\r\n      setMassage(<FormattedMessage id=\"update.ingredientAdded\" />);\r\n    } else {\r\n      setMassage(<FormattedMessage id=\"update.errorValidationName\" />);\r\n    }\r\n    setIsShow(true);\r\n  };\r\n  return (\r\n    <>\r\n      <label className={style.editForm__newIngredient}>\r\n        <h4 className={style.editCard__title}>\r\n          <FormattedMessage id=\"update.createNewIngredient\" />\r\n        </h4>\r\n        <div className={style.editCard__titleName}>\r\n          <p className={style.editCard__titleLang}>ru</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientRu}\r\n            onChange={(ev) => setCreateNewIngredientRu(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n            maxLength=\"30\"\r\n          />\r\n          <p className={style.editCard__titleLang}>en</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientEn}\r\n            onChange={(ev) => setCreateNewIngredientEn(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n            maxLength=\"30\"\r\n          />\r\n          <p className={style.editCard__titleLang}>ukr</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientUkr}\r\n            onChange={(ev) => setCreateNewIngredientUkr(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n            maxLength=\"30\"\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={createIngredient}\r\n          className={style.editForm__addNewIngredientBtn}\r\n        >\r\n          <FormattedMessage id=\"update.addNewIngredient\" />\r\n        </button>\r\n      </label>\r\n      <div\r\n        onClick={(ev) => {\r\n          setIsShow(false);\r\n          ev.target.name =\r\n            \"continue\" && dispatch(productOperations.getIngredients());\r\n        }}\r\n      >\r\n        {isShow && massage && <ConfirmationWindow massage={massage} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewIngredient;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editForm__newIngredient\":\"addNewIngredient_editForm__newIngredient__t55rz\",\"editCard__title\":\"addNewIngredient_editCard__title__2P_Rc\",\"editForm__inputNewIngredient\":\"addNewIngredient_editForm__inputNewIngredient__10v4K\",\"editForm__inputLang\":\"addNewIngredient_editForm__inputLang__RTOWJ\",\"editForm__addNewIngredientBtn\":\"addNewIngredient_editForm__addNewIngredientBtn__xBrte\",\"editCard__titleName\":\"addNewIngredient_editCard__titleName__2MMJ6\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport productSelectors from \"../../../redux/product/productSelectors\";\r\nimport productActions from \"../../../redux/product/productActions.js\";\r\nimport style from \"./ingredientSelect.module.css\";\r\n\r\nconst IngredientSelect = ({ productForEdit = {} }) => {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const ingredientsList = useSelector(productSelectors.getIngredients);\r\n  const ingredientsSelectList = ingredientsList.map((el, idx) => ({\r\n    label: el.name[local],\r\n    value: idx,\r\n  }));\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState(\r\n    productForEdit.ingredients || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch((dispatch) => dispatch(productActions.addIngredient(ingredients)));\r\n  }, [ingredients]); // eslint-disable-line\r\n  useEffect(() => {\r\n    setNewIngredient(ingredientsSelectList[0]);\r\n  }, [ingredientsList]); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    setNewIngredient(ingredientsSelectList[newIngredient.value]);\r\n  }, [local]);\r\n\r\n  const addIngredient = () => {\r\n    ingredients.some(\r\n      (el) => ingredientsList[newIngredient.value]._id === el._id\r\n    ) ||\r\n      setIngredients((ingredients) => [\r\n        ...ingredients,\r\n        ingredientsList[newIngredient.value],\r\n      ]);\r\n  };\r\n  const deleteIngredient = (ev) => {\r\n    const delElemIndex = ingredients.findIndex(\r\n      (el) => el._id === ev.currentTarget.dataset.id\r\n    );\r\n    const newIngredientsList = [...ingredients];\r\n    newIngredientsList.splice(delElemIndex, 1);\r\n    setIngredients(newIngredientsList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className={style.editCard__title}>\r\n        <FormattedMessage id=\"update.composition\" />\r\n      </h4>\r\n      <span className={style.discriptionTitle}>\r\n        <FormattedMessage id=\"update.compositionDiscription\" />\r\n      </span>\r\n      <ul className={style.editForm__ingredients}>\r\n        {ingredients.map((el, idx) => (\r\n          <li key={el._id} className={style.editForm__ingredient}>\r\n            <span className={style.editForm__ingredientName}>\r\n              {el.name[local]}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={deleteIngredient}\r\n              data-id={el._id}\r\n              className={style.editForm__ingredientBtnDel}\r\n            >\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 12 12\"\r\n                fill=\"none\"\r\n                className={style.editForm__ingredientBtnDelImage}\r\n              >\r\n                <path\r\n                  d=\"M11.25 1.8075L10.1925 0.75L6 4.9425L1.8075 0.75L0.75 1.8075L4.9425 6L0.75 10.1925L1.8075 11.25L6 7.0575L10.1925 11.25L11.25 10.1925L7.0575 6L11.25 1.8075Z\"\r\n                  fill=\"#ffff\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <label className={style.editForm__ingredientsSelect}>\r\n        <Select\r\n          options={ingredientsSelectList}\r\n          value={newIngredient}\r\n          onChange={(ev) => setNewIngredient(ev)}\r\n          className={style.editForm__ingredientsList}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: 0,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: \"white\",\r\n              primary: \"#ff6c00\",\r\n            },\r\n          })}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={addIngredient}\r\n          className={style.editForm__addIngredientBtn}\r\n        >\r\n          <FormattedMessage id=\"update.addToComposition\" />\r\n        </button>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientSelect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"variables\":\"'../../../stylesheet/vars.css'\",\"lightColor\":\"#FFF\",\"accentColor\":\"#FF6C00\",\"primaryColor\":\"#272727\",\"primaryTextFontSize\":\"0.875 rem\",\"editCard__title\":\"ingredientSelect_editCard__title__1x4Yc\",\"discriptionTitle\":\"ingredientSelect_discriptionTitle__3YmdO\",\"editForm__ingredientsSelect\":\"ingredientSelect_editForm__ingredientsSelect__1dAFH\",\"editForm__ingredients\":\"ingredientSelect_editForm__ingredients__crgNt\",\"editForm__ingredient\":\"ingredientSelect_editForm__ingredient__3E-I6\",\"editForm__ingredientName\":\"ingredientSelect_editForm__ingredientName__1nU-y\",\"editForm__ingredientsList\":\"ingredientSelect_editForm__ingredientsList__Wy2SW\",\"editForm__addIngredientBtn\":\"ingredientSelect_editForm__addIngredientBtn__JU45N\",\"editForm__ingredientBtnDel\":\"ingredientSelect_editForm__ingredientBtnDel__gSDc2\",\"editForm__ingredientBtnDelImage\":\"ingredientSelect_editForm__ingredientBtnDelImage__3fO20\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"adminUpdateListItemEdit_container__1UZEx\",\"editCard\":\"adminUpdateListItemEdit_editCard__3wMLf\",\"editCard__image\":\"adminUpdateListItemEdit_editCard__image__1S-TF\",\"editForm\":\"adminUpdateListItemEdit_editForm__2N10V\",\"editCard__title\":\"adminUpdateListItemEdit_editCard__title__2IwRu\",\"editCard__titleName\":\"adminUpdateListItemEdit_editCard__titleName__18hZa\",\"editCard__titleLang\":\"adminUpdateListItemEdit_editCard__titleLang__1n8uS\",\"editForm__inputLang\":\"adminUpdateListItemEdit_editForm__inputLang__1GqpP\",\"editCard__photoLabel\":\"adminUpdateListItemEdit_editCard__photoLabel__1r1BC\",\"editForm__photo\":\"adminUpdateListItemEdit_editForm__photo__3681v\",\"editForm__photoBtn\":\"adminUpdateListItemEdit_editForm__photoBtn__17eVj\",\"editForm__inputCategory\":\"adminUpdateListItemEdit_editForm__inputCategory__Q5FO7\",\"editForm__price\":\"adminUpdateListItemEdit_editForm__price__1lh-2\",\"editForm__priceInput\":\"adminUpdateListItemEdit_editForm__priceInput__1JbGK\",\"editForm__inputSinglePrice\":\"adminUpdateListItemEdit_editForm__inputSinglePrice__hQZDx\",\"editForm__priceTitle\":\"adminUpdateListItemEdit_editForm__priceTitle__-cift\",\"editForm__inputDescription\":\"adminUpdateListItemEdit_editForm__inputDescription__1DXGD\",\"editForm__btnSubmit\":\"adminUpdateListItemEdit_editForm__btnSubmit__iNCCw\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ConfirmationWindow from \"./AdminUpdateListItemElems/ConfirmationWindow\";\r\nimport AddNewIngredient from \"./AdminUpdateListItemElems/AddNewIngredient\";\r\nimport IngredientSelect from \"./AdminUpdateListItemElems/IngredientSelect\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\nimport Spinner from \"../Spinner\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\nimport productActions from \"../../redux/product/productActions.js\";\r\nimport languages from \"../../languages\";\r\n\r\nconst AdminUpdateListItemEdit = () => {\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  let productForEdit = null;\r\n  if (location.state) {\r\n    productForEdit = location.state.product;\r\n    // console.log(productForEdit);\r\n  } else {\r\n    productForEdit = JSON.parse(sessionStorage.getItem(\"editedItem\"));\r\n    // console.log(productForEdit);\r\n  }\r\n  const local = useSelector((state) => state.local.lang);\r\n  const ingredients = useSelector(productSelectors.addIngredient);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n  const images = useSelector(productSelectors.fileLink);\r\n  const [massage, setMassage] = useState(\"\");\r\n\r\n  const [nameRu, setNameRu] = useState(productForEdit.name.ru);\r\n  const [nameEn, setNameEn] = useState(productForEdit.name.en);\r\n  const [nameUkr, setNameUkr] = useState(productForEdit.name.ukr);\r\n  const [subcategory, setSubcategory] = useState({\r\n    id: 0,\r\n    value: productForEdit.subcategory,\r\n    label: languages[local][`pizza.${productForEdit.subcategory}`],\r\n  });\r\n  const [priceNoPizza, setPriceNoPizza] = useState(productForEdit.price.price);\r\n  const [price, setPrice] = useState(\"\");\r\n\r\n  const [pricePizzaM, setPricePizzaM] = useState(productForEdit.price.M);\r\n  const [pricePizzaL, setPricePizzaL] = useState(productForEdit.price.L);\r\n  const [pricePizzaXL, setPricePizzaXL] = useState(productForEdit.price.XL);\r\n  const [description, setDescription] = useState(productForEdit.description);\r\n  const [BtnCreateIngrad, setBtnCreateIngrad] = useState(false);\r\n\r\n  const subcategoryList = [\r\n    { id: 0, label: languages[local][\"pizza.classic\"], value: \"classic\" },\r\n    { id: 1, label: languages[local][\"pizza.special\"], value: \"branded\" },\r\n    { id: 2, label: languages[local][\"pizza.premium\"], value: \"premium\" },\r\n  ];\r\n\r\n  const postImage = (file) => {\r\n    dispatch(productOperations.sendFile(file));\r\n  };\r\n  const updateProduct = (id, editedItem) =>\r\n    dispatch(productOperations.updateProduct(id, editedItem));\r\n\r\n  const deleteProduct = () =>\r\n    dispatch(productOperations.deleteProduct(productForEdit._id));\r\n\r\n  useEffect(() => {\r\n    if (productForEdit.categories === \"pizza\") {\r\n      setBtnCreateIngrad(false);\r\n      setPrice({ M: pricePizzaM, L: pricePizzaL, XL: pricePizzaXL });\r\n    } else {\r\n      setPrice({ price: priceNoPizza });\r\n    }\r\n  }, [pricePizzaM, pricePizzaL, pricePizzaXL, priceNoPizza]); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    dispatch(productOperations.getIngredients());\r\n  }, []); // eslint-disable-line\r\n  useEffect(() => {\r\n    dispatch(dispatch(productActions.imagesInit(productForEdit.images)));\r\n  }, []); // eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    setSubcategory(subcategoryList[subcategory.id]);\r\n  }, [local]); // eslint-disable-line\r\n\r\n  const collector = () => {\r\n    const name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    if (!price) {\r\n      if (productForEdit.categories === \"pizza\") {\r\n        setPrice({ M: \"\", L: \"\", XL: \"\" });\r\n      } else {\r\n        setPrice({ price: \"\" });\r\n      }\r\n    }\r\n    const editedItem = {\r\n      price,\r\n      name,\r\n      ingredients,\r\n      images,\r\n    };\r\n    editedItem.name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    editedItem.categories = productForEdit.categories;\r\n    editedItem.subcategory = subcategory.value;\r\n    if (productForEdit.categories !== \"pizza\") {\r\n      editedItem.description = description;\r\n    }\r\n    // console.log(editedItem);\r\n    return editedItem;\r\n  };\r\n\r\n  const handleImageFile = (ev) => {\r\n    ev.preventDefault();\r\n    ev.target.files[0] && postImage(ev.target.files[0]);\r\n    window.history.pushState({}, \"\", \"/\");\r\n  };\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n    setBtnCreateIngrad(false);\r\n    const isValidName =\r\n      nameEn.length >= 3 && nameRu.length >= 3 && nameUkr.length >= 3;\r\n    const isValidPrice = (() => {\r\n      let isValid = false;\r\n      if (productForEdit.categories === \"pizza\") {\r\n        isValid =\r\n          pricePizzaL.toString().length >= 2 &&\r\n          pricePizzaM.toString().length >= 2 &&\r\n          pricePizzaXL.toString().length >= 2;\r\n      } else {\r\n        isValid = priceNoPizza.toString().length >= 2;\r\n      }\r\n      return isValid;\r\n    })();\r\n    const isValidDescription =\r\n      productForEdit.categories === \"pizza\"\r\n        ? true\r\n        : description.toString().length >= 1 && description !== \"0\";\r\n\r\n    if (isValidName && isValidPrice && isValidDescription) {\r\n      const editedItem = collector();\r\n      updateProduct(productForEdit._id, editedItem);\r\n      setMassage(<FormattedMessage id=\"product updated\" />);\r\n    } else {\r\n      if (productForEdit.categories !== \"pizza\") {\r\n        isValidDescription ||\r\n          setMassage(\r\n            <FormattedMessage id=\"update.errorValidationDescription\" />\r\n          );\r\n      }\r\n      isValidPrice ||\r\n        setMassage(<FormattedMessage id=\"update.errorValidationPrice\" />);\r\n      isValidName ||\r\n        setMassage(<FormattedMessage id=\"update.errorValidationName\" />);\r\n    }\r\n  };\r\n  const deleteItem = (ev) => {\r\n    ev.preventDefault();\r\n    setBtnCreateIngrad(false);\r\n    deleteProduct();\r\n    sessionStorage.removeItem(\"editedItem\");\r\n    window.history.pushState({}, \"\", \"/\");\r\n    setMassage(<FormattedMessage id=\"deleted product\" />);\r\n  };\r\n  window.addEventListener(\"unload\", () => {\r\n    const editedItem = { _id: productForEdit._id, ...collector() };\r\n    sessionStorage.setItem(\"editedItem\", JSON.stringify(editedItem));\r\n  });\r\n  const handleConfirmWindow = (ev) => {\r\n    setBtnCreateIngrad(false);\r\n    massage.props.id !== \"deleted product\" &&\r\n      ev.target.dataset.confirm === \"continue\" &&\r\n      setMassage(\"\");\r\n    ev.target.name === \"continue\" && setMassage(\"\");\r\n  };\r\n  return (\r\n    <div className={style.container}>\r\n      {isLoading && <Spinner />}\r\n      <>\r\n        <div className={style.editCard}>\r\n          <img\r\n            src={images}\r\n            alt={productForEdit.closeUpImages}\r\n            className={style.editCard__image}\r\n          />\r\n          <form id=\"editForm\" onSubmit={handleForm} className={style.editForm}>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"photo\" />\r\n            </h4>\r\n            <label className={style.editCard__photoLabel}>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageFile}\r\n                className={style.editForm__photo}\r\n              />\r\n              <p className={style.editForm__photoBtn}>\r\n                <FormattedMessage id=\"upload\" />\r\n              </p>\r\n            </label>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.category\" />\r\n            </h4>\r\n            <p>\r\n              <FormattedMessage id={productForEdit.categories} />\r\n            </p>\r\n            {productForEdit.categories === \"pizza\" && (\r\n              <>\r\n                <h4 className={style.editCard__title}>\r\n                  <FormattedMessage id=\"product.subcategory\" />\r\n                </h4>\r\n                <Select\r\n                  options={subcategoryList}\r\n                  value={subcategory}\r\n                  onChange={(ev) => setSubcategory(ev)}\r\n                  theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 0,\r\n                    colors: {\r\n                      ...theme.colors,\r\n                      primary25: \"white\",\r\n                      primary: \"#ff6c00\",\r\n                    },\r\n                  })}\r\n                />\r\n              </>\r\n            )}\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.name\" />\r\n            </h4>\r\n            <div className={style.editCard__titleName}>\r\n              <p className={style.editCard__titleLang}>\r\n                <FormattedMessage id=\"rus name\" />\r\n              </p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameRu}\r\n                onChange={(ev) => setNameRu(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n                maxLength=\"30\"\r\n              />\r\n              <p className={style.editCard__titleLang}>\r\n                <FormattedMessage id=\"eng name\" />\r\n              </p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameEn}\r\n                onChange={(ev) => setNameEn(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n                maxLength=\"30\"\r\n              />\r\n              <p className={style.editCard__titleLang}>\r\n                <FormattedMessage id=\"ukr name\" />\r\n              </p>\r\n              <input\r\n                type=\"text\"\r\n                value={nameUkr}\r\n                onChange={(ev) => setNameUkr(ev.target.value)}\r\n                className={style.editForm__inputLang}\r\n                maxLength=\"30\"\r\n              />\r\n            </div>\r\n            <h4 className={style.editCard__title}>\r\n              <FormattedMessage id=\"product.price\" />\r\n            </h4>\r\n            {productForEdit.categories === \"pizza\" ? (\r\n              <div className={style.editForm__price}>\r\n                <h4 className={style.editForm__priceTitle}>M</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaM}\r\n                  onChange={(ev) => setPricePizzaM(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                  maxLength=\"3\"\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>L</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaL}\r\n                  onChange={(ev) => setPricePizzaL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                  maxLength=\"3\"\r\n                />\r\n                <h4 className={style.editForm__priceTitle}>XL</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  value={pricePizzaXL}\r\n                  onChange={(ev) => setPricePizzaXL(ev.target.value)}\r\n                  className={style.editForm__priceInput}\r\n                  maxLength=\"3\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={priceNoPizza}\r\n                  onChange={(ev) => setPriceNoPizza(ev.target.value)}\r\n                  className={style.editForm__inputSinglePrice}\r\n                  maxLength=\"3\"\r\n                />\r\n                <p className={style.editCard__title}>\r\n                  <FormattedMessage id=\"volume weight\" />\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={description}\r\n                  onChange={(ev) => setDescription(ev.target.value)}\r\n                  className={style.editForm__inputDescription}\r\n                  maxLength=\"3\"\r\n                />\r\n              </>\r\n            )}\r\n            {productForEdit.categories === \"pizza\" && (\r\n              <>\r\n                <IngredientSelect productForEdit={productForEdit} />\r\n                <label className={`${style.editForm}`}>\r\n                  <h4 className={`${style.editForm__photoBtn}`}>\r\n                    <FormattedMessage id=\"update.createNewIngredient\" />\r\n                  </h4>\r\n                  <input\r\n                    type=\"button\"\r\n                    onClick={() => setBtnCreateIngrad(!BtnCreateIngrad)}\r\n                    className={style.editForm__photo}\r\n                  />\r\n                </label>\r\n                {BtnCreateIngrad && <AddNewIngredient />}\r\n              </>\r\n            )}\r\n          </form>\r\n          <button\r\n            disabled={isLoading}\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            className={style.editForm__btnSubmit}\r\n          >\r\n            <FormattedMessage id=\"update.saveChanges\" />\r\n          </button>\r\n          <button\r\n            disabled={isLoading}\r\n            form=\"editForm\"\r\n            type=\"submit\"\r\n            className={style.editForm__btnSubmit}\r\n            onClick={deleteItem}\r\n          >\r\n            <FormattedMessage id=\"delete product\" />\r\n          </button>\r\n        </div>\r\n        <div onClick={handleConfirmWindow}>\r\n          {!isLoading && massage && <ConfirmationWindow massage={massage} />}\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItemEdit;\r\n"],"sourceRoot":""}