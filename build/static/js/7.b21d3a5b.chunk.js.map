{"version":3,"sources":["redux/product/productOperations.js","redux/product/productSelectors.js","services/api.js","components/AdminUpdateListItemEdit/adminUpdateListItemEdit.module.css","components/AdminUpdateListItemEdit/confirmationWindow.module.css","components/AdminUpdateListItemEdit/addNewIngredient.module.css","components/AdminUpdateListItemEdit/ingredientSelect.module.css","components/AdminUpdateListItemEdit/ConfirmationWindow.jsx","components/AdminUpdateListItemEdit/AddNewIngredient.jsx","components/AdminUpdateListItemEdit/IngredientSelect.jsx","components/AdminUpdateListItemEdit/AdminUpdateListItemEdit.js"],"names":["fetchProducts","dispatch","productActions","productsRequest","getAllProducts","then","data","productsSuccess","products","catch","error","productsError","fetchProductsByCategory","category","byCategoryRequest","getProductsByCategory","byCategorySuccess","byCategoryError","fetchProductById","id","byIdRequest","getProductById","byIdSuccess","product","byIdError","sendFile","file","sendFileRequest","postImage","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","postNewProduct","sendProductSuccess","sendProductError","getIngredients","getAllIngredientsRequest","getAllIngredients","getAllIngredientsSuccess","ingredients","getAllIngredientsError","updateProduct","productId","newProduct","updateProductRequest","updateProductById","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductById","deleteProductSuccess","deleteProductError","createNewIngredient","ingredient","createNewIngredientsRequest","createNewIngredients","createNewIngredientsSuccess","createNewIngredientsError","getLoading","state","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","newIngredient","addIngredient","source","axios","CancelToken","baseURL","get","cancelToken","token","a","post","put","delete","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","module","exports","ConfirmationWindow","massage","errorMassage","useSelector","productSelectors","className","style","confirmation","confirmation__form","confirmation__formText","to","confirmation__formBtnLink","type","confirmation__formBtn","props","name","AddNewIngredient","useDispatch","useState","isShow","setIsShow","newIngredientRu","setCreateNewIngredientRu","newIngredientUkr","setCreateNewIngredientUkr","newIngredientEn","setCreateNewIngredientEn","editForm__newIngredient","editCard__title","editCard__titleName","editCard__titleLang","value","onChange","ev","target","editForm__inputLang","onClick","ru","en","ukr","productOperations","editForm__addNewIngredientBtn","IngredientSelect","productForEdit","local","lang","ingredientsList","isLoading","ingredientsSelectList","map","el","idx","label","setNewIngredient","setIngredients","useEffect","deleteIngredient","preventDefault","delElemIndex","findIndex","_id","currentTarget","dataset","newIngredientsList","splice","spinnerBack","Spinner","editForm__ingredients","key","editForm__ingredient","editForm__ingredientName","data-id","editForm__ingredientBtnDel","width","height","viewBox","fill","editForm__ingredientBtnDelImage","d","editForm__ingredientsSelect","options","editForm__ingredientsList","some","editForm__addIngredientBtn","AdminUpdateListItemEdit","location","useLocation","JSON","parse","sessionStorage","getItem","images","nameRu","setNameRu","nameEn","setNameEn","nameUkr","setNameUkr","subcategory","setSubcategory","confirmEdit","setConfirmEdit","isDeleted","setIsDeleted","price","priceNoPizza","setPriceNoPizza","setPrice","M","pricePizzaM","setPricePizzaM","L","pricePizzaL","setPricePizzaL","XL","pricePizzaXL","setPricePizzaXL","description","setDescription","categories","collector","editedItem","window","addEventListener","setItem","stringify","container","editCard","src","alt","closeUpImages","editCard__image","onSubmit","editForm","editCard__photoLabel","accept","files","editForm__photo","editForm__photoBtn","editForm__price","editForm__priceTitle","editForm__priceInput","editForm__inputSinglePrice","editForm__inputDescription","disabled","form","editForm__btnSubmit"],"mappings":"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","file":"static/js/7.b21d3a5b.chunk.js","sourcesContent":["import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"adminUpdateListItemEdit_container__1UZEx\",\"editCard\":\"adminUpdateListItemEdit_editCard__3wMLf\",\"editCard__image\":\"adminUpdateListItemEdit_editCard__image__1S-TF\",\"editForm\":\"adminUpdateListItemEdit_editForm__2N10V\",\"editCard__title\":\"adminUpdateListItemEdit_editCard__title__2IwRu\",\"editCard__titleName\":\"adminUpdateListItemEdit_editCard__titleName__18hZa\",\"editCard__titleLang\":\"adminUpdateListItemEdit_editCard__titleLang__1n8uS\",\"editForm__inputLang\":\"adminUpdateListItemEdit_editForm__inputLang__1GqpP\",\"editCard__photoLabel\":\"adminUpdateListItemEdit_editCard__photoLabel__1r1BC\",\"editForm__newIngredient\":\"adminUpdateListItemEdit_editForm__newIngredient__2ysnq\",\"editForm__photo\":\"adminUpdateListItemEdit_editForm__photo__3681v\",\"editForm__photoBtn\":\"adminUpdateListItemEdit_editForm__photoBtn__17eVj\",\"editForm__inputCategory\":\"adminUpdateListItemEdit_editForm__inputCategory__Q5FO7\",\"editForm__price\":\"adminUpdateListItemEdit_editForm__price__1lh-2\",\"editForm__priceInput\":\"adminUpdateListItemEdit_editForm__priceInput__1JbGK\",\"editForm__inputSinglePrice\":\"adminUpdateListItemEdit_editForm__inputSinglePrice__hQZDx\",\"editForm__priceTitle\":\"adminUpdateListItemEdit_editForm__priceTitle__-cift\",\"editForm__inputDescription\":\"adminUpdateListItemEdit_editForm__inputDescription__1DXGD\",\"editForm__btnSubmit\":\"adminUpdateListItemEdit_editForm__btnSubmit__iNCCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmation\":\"confirmationWindow_confirmation__29eWh\",\"confirmation__form\":\"confirmationWindow_confirmation__form__3leQ8\",\"confirmation__formText\":\"confirmationWindow_confirmation__formText__q2JEw\",\"confirmation__formBtnLink\":\"confirmationWindow_confirmation__formBtnLink__1BMoV\",\"confirmation__formBtn\":\"confirmationWindow_confirmation__formBtn__3jrML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editCard__title\":\"addNewIngredient_editCard__title__2LazS\",\"editForm__inputNewIngredient\":\"addNewIngredient_editForm__inputNewIngredient__r6e0P\",\"editForm__addNewIngredientBtn\":\"addNewIngredient_editForm__addNewIngredientBtn__1SgQb\",\"editCard__titleName\":\"addNewIngredient_editCard__titleName__3M6xZ\",\"editForm__inputLang\":\"addNewIngredient_editForm__inputLang__22Z03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editCard__title\":\"ingredientSelect_editCard__title__2GArY\",\"editForm__ingredientsSelect\":\"ingredientSelect_editForm__ingredientsSelect__3ObAf\",\"editForm__ingredients\":\"ingredientSelect_editForm__ingredients__tEOf9\",\"editForm__ingredient\":\"ingredientSelect_editForm__ingredient__3EmbR\",\"editForm__ingredientName\":\"ingredientSelect_editForm__ingredientName__1LuXK\",\"editForm__ingredientsList\":\"ingredientSelect_editForm__ingredientsList__3I-W6\",\"editForm__addIngredientBtn\":\"ingredientSelect_editForm__addIngredientBtn__2c-Z8\",\"editForm__ingredientBtnDel\":\"ingredientSelect_editForm__ingredientBtnDel__ZpcP7\",\"editForm__ingredientBtnDelImage\":\"ingredientSelect_editForm__ingredientBtnDelImage__3ohDU\"};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport style from \"./confirmationWindow.module.css\";\r\n\r\nconst ConfirmationWindow = ({ massage }) => {\r\n  const errorMassage = useSelector(productSelectors.getError);\r\n  if (errorMassage) {\r\n    massage = errorMassage;\r\n  }\r\n  return (\r\n    <div className={style.confirmation}>\r\n      <div className={style.confirmation__form}>\r\n        <p className={style.confirmation__formText}>{massage}</p>\r\n        <Link\r\n          to=\"/admin/update-product\"\r\n          className={style.confirmation__formBtnLink}\r\n        >\r\n          <button type=\"button\" className={style.confirmation__formBtn}>\r\n            <FormattedMessage id=\"return back\" />\r\n          </button>\r\n        </Link>\r\n        {massage.props.id === \"deleted product\" || (\r\n          <button\r\n            type=\"button\"\r\n            className={style.confirmation__formBtn}\r\n            name=\"continue\"\r\n          >\r\n            <FormattedMessage id=\"continue editing\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationWindow;\r\n","import React, { useEffect, useState } from \"react\";\r\n// import style from \"./adminUpdateListItemEdit.module.css\";\r\nimport style from \"./addNewIngredient.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\n\r\nconst AddNewIngredient = () => {\r\n  const dispatch = useDispatch();\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [newIngredientRu, setCreateNewIngredientRu] = useState(\"\");\r\n  const [newIngredientUkr, setCreateNewIngredientUkr] = useState(\"\");\r\n  const [newIngredientEn, setCreateNewIngredientEn] = useState(\"\");\r\n  const createIngredient = () => {\r\n    const newIngredient = {\r\n      name: {\r\n        ru: newIngredientRu,\r\n        en: newIngredientEn,\r\n        ukr: newIngredientUkr,\r\n      },\r\n    };\r\n    dispatch(productOperations.createNewIngredient(newIngredient));\r\n    setIsShow(true);\r\n  };\r\n  return (\r\n    <>\r\n      <label className={style.editForm__newIngredient}>\r\n        <h4 className={style.editCard__title}>\r\n          <FormattedMessage id=\"update.createNewIngredient\" />\r\n        </h4>\r\n        <div className={style.editCard__titleName}>\r\n          <p className={style.editCard__titleLang}>ru</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientRu}\r\n            onChange={(ev) => setCreateNewIngredientRu(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n          />\r\n          <p className={style.editCard__titleLang}>en</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientEn}\r\n            onChange={(ev) => setCreateNewIngredientEn(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n          />\r\n          <p className={style.editCard__titleLang}>ukr</p>\r\n          <input\r\n            type=\"text\"\r\n            value={newIngredientUkr}\r\n            onChange={(ev) => setCreateNewIngredientUkr(ev.target.value)}\r\n            className={style.editForm__inputLang}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={createIngredient}\r\n          className={style.editForm__addNewIngredientBtn}\r\n        >\r\n          <FormattedMessage id=\"update.addNewIngredient\" />\r\n        </button>\r\n      </label>\r\n      <div\r\n        onClick={(ev) => {\r\n          setIsShow(false);\r\n          ev.target.name =\r\n            \"continue\" && dispatch(productOperations.getIngredients());\r\n        }}\r\n      >\r\n        {isShow && (\r\n          <ConfirmationWindow\r\n            massage={<FormattedMessage id=\"update.ingredientAdded\" />}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewIngredient;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport productActions from \"../../redux/product/productActions.js\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\nimport Spinner from \"../../components/Spinner\";\r\nimport style from \"./ingredientSelect.module.css\";\r\n\r\nconst IngredientSelect = ({ productForEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const local = useSelector((state) => state.local.lang);\r\n  const ingredientsList = useSelector(productSelectors.getIngredients);\r\n\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n  const ingredientsSelectList = ingredientsList.map((el, idx) => ({\r\n    label: el.name[local],\r\n    value: idx,\r\n  }));\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState(productForEdit.ingredients);\r\n  useEffect(() => {\r\n    dispatch(productOperations.getIngredients());\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch((dispatch) => dispatch(productActions.addIngredient(ingredients)));\r\n  }, [ingredients]);\r\n\r\n  const addIngredient = () => {\r\n    ingredients.some(\r\n      (el) => ingredientsList[newIngredient.value]._id === el._id\r\n    ) ||\r\n      setIngredients((ingredients) => [\r\n        ...ingredients,\r\n        ingredientsList[newIngredient.value],\r\n      ]);\r\n  };\r\n  const deleteIngredient = (ev) => {\r\n    ev.preventDefault();\r\n    const delElemIndex = ingredients.findIndex(\r\n      (el) => el._id === ev.currentTarget.dataset.id\r\n    );\r\n    const newIngredientsList = [...ingredients];\r\n    newIngredientsList.splice(delElemIndex, 1);\r\n    setIngredients(newIngredientsList);\r\n  };\r\n  return (\r\n    <>\r\n      {!isLoading ? (\r\n        <>\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"update.composition\" />\r\n          </h4>\r\n          <ul className={style.editForm__ingredients}>\r\n            {ingredients.map((el, idx) => (\r\n              <li key={el._id} className={style.editForm__ingredient}>\r\n                <span className={style.editForm__ingredientName}>\r\n                  {el.name[local]}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={deleteIngredient}\r\n                  data-id={el._id}\r\n                  className={style.editForm__ingredientBtnDel}\r\n                >\r\n                  <svg\r\n                    width=\"12\"\r\n                    height=\"12\"\r\n                    viewBox=\"0 0 12 12\"\r\n                    fill=\"none\"\r\n                    className={style.editForm__ingredientBtnDelImage}\r\n                  >\r\n                    <path\r\n                      d=\"M11.25 1.8075L10.1925 0.75L6 4.9425L1.8075 0.75L0.75 1.8075L4.9425 6L0.75 10.1925L1.8075 11.25L6 7.0575L10.1925 11.25L11.25 10.1925L7.0575 6L11.25 1.8075Z\"\r\n                      fill=\"#ffff\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <label className={style.editForm__ingredientsSelect}>\r\n            <Select\r\n              options={ingredientsSelectList}\r\n              value={newIngredient || ingredientsSelectList[0]}\r\n              onChange={(ev) => setNewIngredient(ev)}\r\n              className={style.editForm__ingredientsList}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={addIngredient}\r\n              className={style.editForm__addIngredientBtn}\r\n            >\r\n              <FormattedMessage id=\"update.addToComposition\" />\r\n            </button>\r\n          </label>\r\n        </>\r\n      ) : (\r\n        <div className={style.spinnerBack}>\r\n          <Spinner />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientSelect;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ConfirmationWindow from \"./ConfirmationWindow\";\r\nimport AddNewIngredient from \"./AddNewIngredient\";\r\nimport IngredientSelect from \"./IngredientSelect\";\r\nimport style from \"./adminUpdateListItemEdit.module.css\";\r\nimport productSelectors from \"../../redux/product/productSelectors\";\r\nimport productOperations from \"../../redux/product/productOperations\";\r\nimport productActions from \"../../redux/product/productActions\";\r\n\r\n// import languages from \"../../languages\";\r\n\r\nconst AdminUpdateListItemEdit = () => {\r\n  const dispatch = useDispatch();\r\n  let location = useLocation();\r\n  let productForEdit = null;\r\n  if (location.state) {\r\n    productForEdit = location.state.product;\r\n  } else {\r\n    productForEdit = JSON.parse(sessionStorage.getItem(\"editedItem\"));\r\n  }\r\n\r\n  const ingredients = useSelector(productSelectors.addIngredient);\r\n  const isLoading = useSelector(productSelectors.getLoading);\r\n  const images = useSelector(productSelectors.fileLink);\r\n\r\n  const [nameRu, setNameRu] = useState(productForEdit.name.ru);\r\n  const [nameEn, setNameEn] = useState(productForEdit.name.en);\r\n  const [nameUkr, setNameUkr] = useState(productForEdit.name.ukr);\r\n  const [subcategory, setSubcategory] = useState({\r\n    value: productForEdit.subcategory,\r\n    label: productForEdit.subcategory,\r\n  });\r\n  const [confirmEdit, setConfirmEdit] = useState(false);\r\n  const [isDeleted, setIsDeleted] = useState(false);\r\n  const [priceNoPizza, setPriceNoPizza] = useState(productForEdit.price.price);\r\n  const [price, setPrice] = useState({});\r\n  const [pricePizzaM, setPricePizzaM] = useState(productForEdit.price.M);\r\n  const [pricePizzaL, setPricePizzaL] = useState(productForEdit.price.L);\r\n  const [pricePizzaXL, setPricePizzaXL] = useState(productForEdit.price.XL);\r\n  const [description, setDescription] = useState(productForEdit.description);\r\n\r\n  const subcategoryList = [\r\n    { label: \"classic\", value: \"classic\" },\r\n    { label: \"branded\", value: \"branded\" },\r\n    { label: \"premium\", value: \"premium\" },\r\n  ];\r\n\r\n  const postImage = (file) => dispatch(productOperations.sendFile(file));\r\n  const updateProduct = (id, editedItem) =>\r\n    dispatch(productOperations.updateProduct(id, editedItem));\r\n\r\n  const deleteProduct = () =>\r\n    dispatch(productOperations.deleteProduct(productForEdit._id));\r\n\r\n  useEffect(() => {\r\n    if (productForEdit.categories === \"pizza\") {\r\n      setPrice({ M: pricePizzaM, L: pricePizzaL, XL: pricePizzaXL });\r\n    } else {\r\n      setPrice({ price: priceNoPizza });\r\n    }\r\n  }, [pricePizzaM, pricePizzaL, pricePizzaXL, priceNoPizza]);\r\n\r\n  const collector = () => {\r\n    const name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    const editedItem = {\r\n      price,\r\n      name,\r\n      ingredients,\r\n    };\r\n    editedItem.images = images || productForEdit.images;\r\n    editedItem.name = { ru: nameRu, ukr: nameUkr, en: nameEn };\r\n    editedItem.categories = productForEdit.categories;\r\n    editedItem.subcategory = subcategory.value;\r\n    if (productForEdit.categories !== \"pizza\") {\r\n      editedItem.description = description;\r\n    }\r\n    return editedItem;\r\n  };\r\n\r\n  const handleImageFile = (ev) => {\r\n    ev.preventDefault();\r\n    postImage(ev.target.files[0]);\r\n  };\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n    const editedItem = collector();\r\n    updateProduct(productForEdit._id, editedItem);\r\n    setConfirmEdit(true);\r\n  };\r\n\r\n  const deleteItem = (ev) => {\r\n    ev.preventDefault();\r\n    deleteProduct();\r\n    setIsDeleted(true);\r\n    setConfirmEdit(true);\r\n  };\r\n  window.addEventListener(\"unload\", () => {\r\n    const editedItem = { _id: productForEdit._id, ...collector() };\r\n    sessionStorage.setItem(\"editedItem\", JSON.stringify(editedItem));\r\n  });\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.editCard}>\r\n        <img\r\n          src={images || productForEdit.images}\r\n          alt={productForEdit.closeUpImages}\r\n          className={style.editCard__image}\r\n        />\r\n        <form id=\"editForm\" onSubmit={handleForm} className={style.editForm}>\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"photo\" />\r\n          </h4>\r\n          <label className={style.editCard__photoLabel}>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleImageFile}\r\n              className={style.editForm__photo}\r\n            />\r\n            <p className={style.editForm__photoBtn}>\r\n              <FormattedMessage id=\"upload\" />\r\n            </p>\r\n          </label>\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"product.name\" />\r\n          </h4>\r\n          <div className={style.editCard__titleName}>\r\n            <p className={style.editCard__titleLang}>ru</p>\r\n            <input\r\n              type=\"text\"\r\n              value={nameRu}\r\n              onChange={(ev) => setNameRu(ev.target.value)}\r\n              className={style.editForm__inputLang}\r\n            />\r\n            <p className={style.editCard__titleLang}>en</p>\r\n            <input\r\n              type=\"text\"\r\n              value={nameEn}\r\n              onChange={(ev) => setNameEn(ev.target.value)}\r\n              className={style.editForm__inputLang}\r\n            />\r\n            <p className={style.editCard__titleLang}>ukr</p>\r\n            <input\r\n              type=\"text\"\r\n              value={nameUkr}\r\n              onChange={(ev) => setNameUkr(ev.target.value)}\r\n              className={style.editForm__inputLang}\r\n            />\r\n          </div>\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"product.category\" />\r\n          </h4>\r\n          <p>{productForEdit.categories}</p>\r\n          {productForEdit.categories === \"pizza\" && (\r\n            <>\r\n              <h4 className={style.editCard__title}>\r\n                <FormattedMessage id=\"product.subcategory\" />\r\n              </h4>\r\n              <Select\r\n                options={subcategoryList}\r\n                value={subcategory}\r\n                onChange={(ev) => setSubcategory(ev)}\r\n              />\r\n              <IngredientSelect productForEdit={productForEdit} />\r\n              <AddNewIngredient />\r\n            </>\r\n          )}\r\n\r\n          <h4 className={style.editCard__title}>\r\n            <FormattedMessage id=\"product.price\" />\r\n          </h4>\r\n          {productForEdit.categories === \"pizza\" ? (\r\n            <div className={style.editForm__price}>\r\n              <h4 className={style.editForm__priceTitle}>M</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={pricePizzaM}\r\n                onChange={(ev) => setPricePizzaM(ev.target.value)}\r\n                className={style.editForm__priceInput}\r\n              />\r\n              <h4 className={style.editForm__priceTitle}>L</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={pricePizzaL}\r\n                onChange={(ev) => setPricePizzaL(ev.target.value)}\r\n                className={style.editForm__priceInput}\r\n              />\r\n              <h4 className={style.editForm__priceTitle}>XL</h4>\r\n              <input\r\n                type=\"text\"\r\n                value={pricePizzaXL}\r\n                onChange={(ev) => setPricePizzaXL(ev.target.value)}\r\n                className={style.editForm__priceInput}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"number\"\r\n                value={priceNoPizza}\r\n                onChange={(ev) => setPriceNoPizza(ev.target.value)}\r\n                className={style.editForm__inputSinglePrice}\r\n              />\r\n              <p className={style.editCard__title}>\r\n                <FormattedMessage id=\"volume weight\" />\r\n              </p>\r\n              <input\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(ev) => setDescription(ev.target.value)}\r\n                className={style.editForm__inputDescription}\r\n              />\r\n            </>\r\n          )}\r\n        </form>\r\n        <button\r\n          disabled={isLoading}\r\n          form=\"editForm\"\r\n          type=\"submit\"\r\n          name=\"complete\"\r\n          className={style.editForm__btnSubmit}\r\n        >\r\n          <FormattedMessage id=\"update.saveChanges\" />\r\n        </button>\r\n        <button\r\n          disabled={isLoading}\r\n          form=\"editForm\"\r\n          type=\"submit\"\r\n          name=\"delete\"\r\n          className={style.editForm__btnSubmit}\r\n          onClick={deleteItem}\r\n        >\r\n          <FormattedMessage id=\"delete product\" />\r\n        </button>\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          isDeleted || setConfirmEdit(false);\r\n        }}\r\n      >\r\n        {!isLoading && confirmEdit && (\r\n          <ConfirmationWindow\r\n            massage={\r\n              isDeleted ? (\r\n                <FormattedMessage id=\"deleted product\" />\r\n              ) : (\r\n                <FormattedMessage id=\"product updated\" />\r\n              )\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminUpdateListItemEdit;\r\n"],"sourceRoot":""}