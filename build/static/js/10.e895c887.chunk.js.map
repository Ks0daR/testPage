{"version":3,"sources":["redux/product/productSelectors.js","services/api.js","redux/product/productOperations.js","redux/product/index.js","components/PizzaListItem/PizzaListItem.module.css","components/PizzaList/PizzaList.module.css","components/PizzaListItem/PizzaListItemHooks.js","components/PizzaList/PizzaList.js","components/PizzaList/PizzaListContainer.js"],"names":["getLoading","state","products","loading","getError","errorReducer","getProducts","items","getFileLink","fileLink","getIngredients","ingredients","createNewIngredient","newIngredient","addIngredient","ingredient","source","axios","CancelToken","baseURL","getAllProducts","get","getProductsByCategory","category","cancelToken","token","getProductById","id","getAllIngredients","a","createNewIngredients","post","postNewProduct","product","updateProductById","productId","newProduct","put","deleteProductById","delete","postImage","file","data","FormData","append","fetchDevs","fetchAllStocks","sendUserFile","sendNewStock","stock","updateExistingStock","stockId","newStock","deleteExistingStock","getExistingStockById","fetchProducts","dispatch","productActions","productsRequest","then","productsSuccess","catch","error","productsError","fetchProductsByCategory","byCategoryRequest","byCategorySuccess","byCategoryError","fetchProductById","byIdRequest","byIdSuccess","byIdError","sendFile","sendFileRequest","sendFileSuccess","image","sendFileError","sendProduct","sendProductRequest","sendProductSuccess","sendProductError","getAllIngredientsRequest","getAllIngredientsSuccess","getAllIngredientsError","updateProduct","updateProductRequest","updateProductSuccess","updateProductError","deleteProduct","deleteProductRequest","deleteProductSuccess","deleteProductError","createNewIngredientsRequest","createNewIngredientsSuccess","createNewIngredientsError","module","exports","sizes","PizzaListItem","local","useSelector","lang","_id","name","price","images","useDispatch","useState","orderSizes","setOrderSizes","selectedSize","setSelectedSize","onAddProductToOrder","orderOperations","addProdToOrderList","successMessage","values","errorMessage","isAddedProdToOrder","setIsAddedProdToOrder","message","setMessage","addProd","includes","filter","size","setTimeout","handleChange","value","target","key","className","styles","pizzaListCard","Notification","confirm","forCard","imageItemWrapper","src","imageItem","alt","width","height","descriptionContainer","heading","map","ingredientItem","sizePriceContainer","radioButtonsList","index","sizeLabel","type","checked","onChange","radioButton","sizeText","sizePriceButtonWrapper","sizePriceWrapper","currency","addCart","onClick","PizzaListForTest","pizzaListWrapper","pizzaHeading","pizzaList","subcategory","PizzaListContainer","this","props","onFetchProductPizza","err","console","log","cancel","Component","mapDispatchToProps","productOperations","connect","productSelectors"],"mappings":"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","file":"static/js/10.e895c887.chunk.js","sourcesContent":["const getLoading = (state) => state.products.loading;\r\n\r\nconst getError = (state) => state.products.errorReducer;\r\n\r\nconst getProducts = (state) => state.products.items;\r\n\r\nconst getFileLink = (state) => state.products.fileLink;\r\n\r\nconst getIngredients = (state) => state.products.ingredients;\r\n\r\nconst createNewIngredient = (state) => state.products.newIngredient;\r\n\r\nconst fileLink = (state) => state.products.fileLink;\r\n\r\nconst addIngredient = (state) => state.products.ingredient;\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getProducts,\r\n  getFileLink,\r\n  getIngredients,\r\n  createNewIngredient,\r\n  fileLink,\r\n  addIngredient,\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nconst baseURL = \"https://evening-caverns-34846.herokuapp.com\";\r\n\r\n//for Products\r\nconst getAllProducts = () => {\r\n  return axios.get(\"/products\");\r\n};\r\n\r\nconst getProductsByCategory = (category) => {\r\n  return axios.get(`/products/?category=\"${category}\"`, {\r\n    cancelToken: source.token,\r\n  });\r\n};\r\n\r\nconst getProductById = (id) => {\r\n  return axios.get(`/products/${id}`);\r\n};\r\n\r\nconst getAllIngredients = async () => {\r\n  return axios.get(`${baseURL}/ingredients`);\r\n};\r\nconst createNewIngredients = async (ingredients) => {\r\n  return axios.post(`${baseURL}/ingredients`, ingredients);\r\n};\r\n\r\nconst postNewProduct = (product) => {\r\n  return axios.post(`${baseURL}/products`, product);\r\n};\r\n\r\nconst updateProductById = (productId, newProduct) => {\r\n  return axios.put(`/products/${productId}`, newProduct);\r\n};\r\n\r\nconst deleteProductById = (productId) => {\r\n  return axios.delete(`/products/${productId}`);\r\n};\r\n\r\n//for Orders\r\n\r\n// other\r\nconst postImage = async (file) => {\r\n  const data = new FormData();\r\n  data.append(\"file\", file);\r\n\r\n  return axios.post(`${baseURL}/images`, data);\r\n};\r\n\r\n// developers\r\n\r\nconst fetchDevs = () => axios.get(\"/developers\");\r\n\r\n// Stocks\r\n\r\nconst fetchAllStocks = () => axios.get(\"/promo\");\r\n\r\nconst sendUserFile = (file) => axios.post(\"/images\", file);\r\n\r\nconst sendNewStock = (stock) => axios.post(\"/promo\", stock);\r\n\r\nconst updateExistingStock = (stockId, newStock) =>\r\n  axios.put(`/promo/${stockId}`, newStock);\r\n\r\nconst deleteExistingStock = (stockId) => axios.delete(`/promo/${stockId}`);\r\n\r\nconst getExistingStockById = (stockId) => axios.get(`/promo/${stockId}`);\r\n\r\nexport {\r\n  fetchDevs,\r\n  getAllIngredients,\r\n  createNewIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  fetchAllStocks,\r\n  sendUserFile,\r\n  sendNewStock,\r\n  updateExistingStock,\r\n  deleteExistingStock,\r\n  getExistingStockById,\r\n};\r\n","import productActions from \"./productActions\";\r\nimport {\r\n  getAllIngredients,\r\n  postNewProduct,\r\n  postImage,\r\n  getAllProducts,\r\n  getProductsByCategory,\r\n  getProductById,\r\n  updateProductById,\r\n  deleteProductById,\r\n  createNewIngredients,\r\n} from \"../../services/api\";\r\n\r\nconst fetchProducts = () => (dispatch) => {\r\n  dispatch(productActions.productsRequest());\r\n\r\n  getAllProducts()\r\n    .then(({ data }) => dispatch(productActions.productsSuccess(data.products)))\r\n    .catch((error) => dispatch(productActions.productsError(error)));\r\n};\r\n\r\nconst fetchProductsByCategory = (category) => (dispatch) => {\r\n  dispatch(productActions.byCategoryRequest());\r\n\r\n  getProductsByCategory(category)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.byCategorySuccess(data.products))\r\n    )\r\n    .catch((error) => dispatch(productActions.byCategoryError(error)));\r\n};\r\n\r\nconst fetchProductById = (id) => (dispatch) => {\r\n  dispatch(productActions.byIdRequest());\r\n\r\n  getProductById(id)\r\n    .then(({ data }) => dispatch(productActions.byIdSuccess(data.product)))\r\n    .catch((error) => dispatch(productActions.byIdError(error)));\r\n};\r\n\r\n//for AdminPage\r\nconst sendFile = (file) => (dispatch) => {\r\n  dispatch(productActions.sendFileRequest());\r\n\r\n  postImage(file)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendFileSuccess(data.image.file))\r\n    )\r\n    .catch((error) => dispatch(productActions.sendFileError(error)));\r\n};\r\n\r\nconst sendProduct = (product) => (dispatch) => {\r\n  dispatch(productActions.sendProductRequest());\r\n\r\n  postNewProduct(product)\r\n    .then(({ data }) =>\r\n      dispatch(productActions.sendProductSuccess(data.product))\r\n    )\r\n    //проверить что приходит в data\r\n    .catch((error) => dispatch(productActions.sendProductError(error)));\r\n};\r\n\r\nconst getIngredients = () => (dispatch) => {\r\n  dispatch(productActions.getAllIngredientsRequest());\r\n\r\n  getAllIngredients()\r\n    .then(({ data }) =>\r\n      dispatch(productActions.getAllIngredientsSuccess(data.ingredients))\r\n    )\r\n    .catch((error) => dispatch(productActions.getAllIngredientsError(error)));\r\n};\r\nconst createNewIngredient = (ingredient) => (dispatch) => {\r\n  dispatch(productActions.createNewIngredientsRequest());\r\n\r\n  createNewIngredients(ingredient)\r\n    .then(() => dispatch(productActions.createNewIngredientsSuccess()))\r\n    .catch((error) =>\r\n      dispatch(productActions.createNewIngredientsError(error))\r\n    );\r\n};\r\n\r\nconst updateProduct = (productId, newProduct) => (dispatch) => {\r\n  dispatch(productActions.updateProductRequest());\r\n\r\n  updateProductById(productId, newProduct)\r\n    .then(({ data }) => dispatch(productActions.updateProductSuccess(data)))\r\n    .catch((error) => dispatch(productActions.updateProductError(error)));\r\n};\r\n\r\nconst deleteProduct = (productId) => (dispatch) => {\r\n  dispatch(productActions.deleteProductRequest());\r\n\r\n  deleteProductById(productId)\r\n    .then(\r\n      ({ data }) => dispatch(productActions.deleteProductSuccess(data))\r\n      //проверить что приходит в data\r\n    )\r\n    .catch((error) => dispatch(productActions.deleteProductError(error)));\r\n};\r\n\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductsByCategory,\r\n  fetchProductById,\r\n\r\n  sendFile,\r\n  sendProduct,\r\n  getIngredients,\r\n  updateProduct,\r\n  deleteProduct,\r\n  createNewIngredient,\r\n};\r\n","export { default as productActions } from \"./productActions\";\r\nexport { default as productOperations } from \"./productOperations\";\r\nexport { default as productSelectors } from \"./productSelectors\";\r\nexport { default as productReducer } from \"./productReducer\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pizzaListCard\":\"PizzaListItem_pizzaListCard__1h4Rv\",\"imageItemWrapper\":\"PizzaListItem_imageItemWrapper__2sYRI\",\"imageItem\":\"PizzaListItem_imageItem__2lP-q\",\"descriptionContainer\":\"PizzaListItem_descriptionContainer__1VGJp\",\"sizePriceContainer\":\"PizzaListItem_sizePriceContainer__MKBtm\",\"sizePriceButtonWrapper\":\"PizzaListItem_sizePriceButtonWrapper__g57po\",\"sizePriceWrapper\":\"PizzaListItem_sizePriceWrapper__2K3rc\",\"heading\":\"PizzaListItem_heading__1MGN_\",\"ingredients\":\"PizzaListItem_ingredients__2dFGl\",\"ingredientItem\":\"PizzaListItem_ingredientItem__vcRkv\",\"radioButtonsList\":\"PizzaListItem_radioButtonsList__5eFxc\",\"sizeLabel\":\"PizzaListItem_sizeLabel__2N08w\",\"radioButton\":\"PizzaListItem_radioButton__3zO0v\",\"sizeText\":\"PizzaListItem_sizeText__3kQDX\",\"price\":\"PizzaListItem_price__2oKBT\",\"currency\":\"PizzaListItem_currency__p4ytG\",\"addCart\":\"PizzaListItem_addCart__27zuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pizzaHeading\":\"PizzaList_pizzaHeading__2LJoX\",\"pizzaList\":\"PizzaList_pizzaList__3K3zX\",\"pizzaListWrapper\":\"PizzaList_pizzaListWrapper__3bmzT\"};","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { orderOperations } from \"../../redux/order\";\r\nimport Notification from \"../Notification\";\r\nimport styles from \"./PizzaListItem.module.css\";\r\n\r\nconst sizes = [\"M\", \"L\", \"XL\"];\r\n\r\nfunction PizzaListItem(product) {\r\n  const local = useSelector((state) => state.local.lang);\r\n\r\n  const { _id, name, price, ingredients, images } = product;\r\n\r\n  const dispatch = useDispatch();\r\n  const [orderSizes, setOrderSizes] = useState([\"M\", \"L\", \"XL\"]);\r\n  const [selectedSize, setSelectedSize] = useState(\"M\");\r\n  const onAddProductToOrder = () =>\r\n    dispatch(orderOperations.addProdToOrderList(product, selectedSize));\r\n\r\n  const successMessage = (\r\n    <FormattedMessage\r\n      id=\"order.pizzaSuccess\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const errorMessage = (\r\n    <FormattedMessage\r\n      id=\"order.pizzaError\"\r\n      values={{\r\n        name: name[local],\r\n      }}\r\n    />\r\n  );\r\n\r\n  const [isAddedProdToOrder, setIsAddedProdToOrder] = useState(false);\r\n  const [message, setMessage] = useState(successMessage);\r\n\r\n  const addProd = async () => {\r\n    if (isAddedProdToOrder) {\r\n      if (orderSizes.includes(selectedSize)) {\r\n        setIsAddedProdToOrder(false);\r\n        setMessage(successMessage);\r\n        onAddProductToOrder(product);\r\n        setOrderSizes(orderSizes.filter((size) => size !== selectedSize));\r\n        return await setTimeout(() => setIsAddedProdToOrder(true), 10);\r\n      }\r\n      setIsAddedProdToOrder(false);\r\n      setMessage(errorMessage);\r\n      return await setTimeout(() => setIsAddedProdToOrder(true), 10);\r\n    }\r\n    onAddProductToOrder(product);\r\n    setOrderSizes(orderSizes.filter((size) => size !== selectedSize));\r\n    setIsAddedProdToOrder(true);\r\n  };\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    setSelectedSize(value);\r\n  };\r\n\r\n  return (\r\n    <li key={_id} className={styles.pizzaListCard}>\r\n      {isAddedProdToOrder && <Notification message={message} confirm forCard />}\r\n      <div className={styles.imageItemWrapper}>\r\n        <img\r\n          src={images}\r\n          className={styles.imageItem}\r\n          alt=\"\"\r\n          width=\"354px\"\r\n          height=\"192px\"\r\n        />\r\n      </div>\r\n      <div className={styles.descriptionContainer}>\r\n        <p className={styles.heading}>{name[local]}</p>\r\n        <ul className={styles.ingredients}>\r\n          {ingredients.map((ingredient) => (\r\n            <li key={ingredient._id}>\r\n              <span className={styles.ingredientItem}>\r\n                {ingredient.name[local]}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <form>\r\n          <div className={styles.sizePriceContainer}>\r\n            <ul className={styles.radioButtonsList}>\r\n              {sizes.map((size, index) => (\r\n                <li key={index}>\r\n                  <label className={styles.sizeLabel}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      value={size}\r\n                      checked={size === selectedSize}\r\n                      onChange={handleChange}\r\n                      className={styles.radioButton}\r\n                      key={size}\r\n                    />\r\n                    <span className={styles.sizeText}>{size}</span>\r\n                  </label>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className={styles.sizePriceButtonWrapper}>\r\n              <div className={styles.sizePriceWrapper}>\r\n                <span className={styles.price}>{price[selectedSize]}.00</span>\r\n                <span className={styles.currency}>\r\n                  {\" \"}\r\n                  <FormattedMessage id=\"grn\" />\r\n                </span>\r\n              </div>\r\n              <button\r\n                className={styles.addCart}\r\n                type=\"button\"\r\n                onClick={() => addProd()}\r\n              >\r\n                <FormattedMessage id=\"orders.chart\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default PizzaListItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport PizzaListItem from \"../PizzaListItem/PizzaListItemHooks\";\r\n// import productsJSON from \"../../services/products.json\";\r\nimport styles from \"./PizzaList.module.css\";\r\n\r\nexport default function PizzaListForTest({ products }) {\r\n  const local = useSelector((state) => state.local.lang);\r\n  return (\r\n    <div className={styles.pizzaListWrapper}>\r\n      <h2 className={styles.pizzaHeading}>\r\n        <FormattedMessage id=\"pizza.classic\" />\r\n      </h2>\r\n      <ul className={styles.pizzaList}>\r\n        {products.map((product, index) => {\r\n          if (product.subcategory === \"classic\") {\r\n            return <PizzaListItem {...product} key={index} local={local} />;\r\n          }\r\n        })}\r\n      </ul>\r\n      <h2 className={styles.pizzaHeading}>\r\n        <FormattedMessage id=\"pizza.special\" />\r\n      </h2>\r\n      <ul className={styles.pizzaList}>\r\n        {products.map((product, index) => {\r\n          if (product.subcategory === \"branded\") {\r\n            return <PizzaListItem {...product} key={index} local={local} />;\r\n          }\r\n        })}\r\n      </ul>\r\n\r\n      <h2 className={styles.pizzaHeading}>\r\n        <FormattedMessage id=\"pizza.premium\" />\r\n      </h2>\r\n      <ul className={styles.pizzaList}>\r\n        {products.map((product, index) => {\r\n          if (product.subcategory === \"premium\") {\r\n            return <PizzaListItem {...product} key={index} local={local} />;\r\n          }\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport PizzaList from \"./PizzaList\";\r\nimport { productOperations, productSelectors } from \"../../redux/product\";\r\nconst CancelToken = axios.CancelToken;\r\nconst source = CancelToken.source();\r\n\r\nclass PizzaListContainer extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      this.props.onFetchProductPizza(\"pizza\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  async componentWillUnmount() {\r\n    try {\r\n      source.cancel(\"Operation canceled\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <PizzaList {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { products: productSelectors.getProducts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchProductPizza: productOperations.fetchProductsByCategory,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaListContainer);\r\n"],"sourceRoot":""}